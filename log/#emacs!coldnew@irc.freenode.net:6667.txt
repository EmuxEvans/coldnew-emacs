
[Wed Aug 22 2012]
*** Topic for #emacs: Emacs 24.2 release candidate available
    http://permalink.gmane.org/gmane.emacs.devel/152564 | Emacs mugs at
    http://shop.fsf.org/ | http://emacswiki.org/EmacsChannelFaq |
    http://paste.lisp.org/ | No public logging! What happens in #emacs stays in
    #emacs | Sexism will not be tolerated. Yes, I'm looking at you.  [15:41]
*** #emacs: topic set by aidalgol!~user@202.36.179.65, 07:21:46 2012/08/17
*** Users on #emacs: coldnew ferdy aisbaa thone_ Trademark91 sjihs YoungFrog
    agumonkey Ottre tsdh lfazio dailylinux scri rogorido nicferrier dan64
    ivan-kanis hyperair macivy hrehf dragansah erez CrrustY_ ryuslash srhb chu
    JoelMcCracken gko mattmusc Cymew o1e9 mishok13 mrSpec mahmoudimus tralala
    sshirokov ijp fualo forcer edgar-rft djcoin jeekl stu- senny arvind_khadri
    GeorgeJetson fbs johnw quazimodo madanyang changedNicks Trademar191
    kennyluck skangas ananthakumaran prebz m477
*** Users on #emacs: jlf jlf_ schwert alephnull lcc jehan kennyd benny XceptN
    ymasory RanJiao daveo harovali genehack Oejet kcj fisted fold magcius ivan``
    hdev``` technomancy Yuuhi`` subversus ji9 mdim tlync fbru02_ tilgovi twb
    jcubic` xiao hoyang popeye92 xiangfu cfy Frozenlo` fakedrake PuercoPop420
    dim kevinbenko bipt kuzary dgvncsz0f mns b0ef prip Nafai quasisane Skif
    MrWGW SamB_MacG5 golodhrim babilen carif_ homie` gnuvince tromey ndngvr
    sheepbat dankles proq stuarth talyz
*** Users on #emacs: ext cbpage xinming_ sellout42 jdahm muhoo jryan|work Vulpes
    dtaht loke aartist vmeson shergill dbristow teiresias reactormonk kliph qsun
    brendyn gsathya tuvwx Siphonblast wubo gezgin Xof cyberspace- mrBliss ghast
    framling taylanub abeaumont TheCrittaC damd| renzhi nelk z0d barika
    dizzylizzy theos Fuco johnsu01 gnoel netrom^off redblue rdd iderrick kordex
    fimblo Natch Boscop xristos treyh0 bremner duck1123 CampinSam loke_erc
    asmanur GnarlyBob bzzbzz jandrusk
*** Users on #emacs: DT` inigo_ arrsim hpd dunib danszr cuba33ci djcb saorge
    ddc__ gentz shader hiroaki unknown_lamer unlink jfincher birkenfeld ruediger
    jasond wunki james_be quotemstr dec4y dajva dca Seb beneth` sphex
    bersace_olfeo rtj Guest53707 StMichel bigfeng12 isomer derekv pierre__
    mathrick xxtjaxx Quadrescence TaeYun BlastHardcheese dubz jedediah russm
    asuka arkx isak_ klutometis fperrin hanDerPeder raek isak dboswell` stootoon
    dooglus magnars matthiasgorgens RushPL
*** Users on #emacs: spacebat monotux s15y txxt raph_ael ArZa daimrod ok2 sm
    assem Laynef Sembei mnemonikk cyt93cs_ anildigital_work srid NimeshNeema
    offbyone heatxsink jave_ ivenkys setheus remote khaije|minder stokachu ivan\
    docgnome scottj yhager avar sorressean anderson xorg62 nodestool CosmicRay
    Han forestbird SpiderPig lagging_troll JayDugger multi_io axrfnu cmbntr
    Koshian_ Viiru elik reeses twem2 guifre bvk_ bigmeow TehTreag|AFK limetree
    bradwright kodein puff
*** Users on #emacs: shadowdaemon Mad_Dud macrobat yonkeltron rossabaker
    `moebius` sawjig acewin tazle solarus iiska PWizard antoszka c0rn legumbre
    Pio toshi combataircraft Swathe_ tvaalen_ kini zw01 renard_ dfox synx muep
    Silex tsetumel_ turbolen1 hgb mjrosenb Boney tali713 fsbot kanru_ newcup
    cataska clop k0ral Mosu tg ingeniou1 mak ozzloy wanders_ steez nuba gaqzi
    fasta_ tbarletz kenjiskywalker theBlackDragon yhvh kahen j0ni ganbold vibhav
    wapiflapi yazirian bigjust leathekd
*** Users on #emacs: drewr andres Dybber peder kanru necronian dueno cola_zero_
    faheem __class__ caveat- xAFFE Hapsbanan stepnem Ender79 faen nullman
    madnificent Joelbyte mechairoi Expez hellekin dropdrive bps jaimef digie
    futuro` kenyon bastii drdo alrua Will| free runejuhl entropy` mattcen
    rainrider|away CrazyEddy jabot noptys_ sword dshep_ favadi anildigital ztfw
    amoe raso bla calimocho zenwryly jeffrubic Derander lokydor les marienz
    antono cbmuser ybit literal Sketch jtg
*** Users on #emacs: endojelly hiredman lloydhuang kloeri illovae Raynes
    occamshatchet birny felipe_ rotty rudybot ft jlindsay ldlework Rapp fschmitt
    __main__ mami galdor nimred juri_ bob2 pfote cods fualo_ murr4y BigEndia1
    AlbireoX kanzeon Obfuscate callen barik bedouin justin_w angelixd Jaimef2
    NaCl djao_ maio mtkoan thomases gensym _root_ aboudreault _schulte_ Drakx
    quicksilver TTilus fmu lotia shabble Athas icks yibe_ mitchty jayne hober
    hhuuggoo ob binjured lahwran hohum
*** Users on #emacs: dzho neurodamage AlexanderS eqyiel gnomon atrus Dr_Jazz
    nano- surrounder ub|k thorkill jlen DraX wagle vcgomes sybariten Odin-
    wgreenhouse anonus Zol nully_ mstr tsally ecraven fhd_ mfisher aindilis
    k-man lorn Dodek georgeha1k froggey Khady gianlucadv sanderd nephyrin
    demolithion kryl99 sav jfe zygen_ scgilardi derrida qDot_ lenzoid` tessier
    aburgess Dnumgis fds vds offby1 rods` rizumu Buglouse legov corecode jasox
    mgsk korutsu Borbus
*** #emacs URL: http://emacswiki.org/  [15:42]
*** #emacs modes: +np
*** #emacs was created on Sunday 2006/11/26 02:42:33 PM
<chu> I have a feeling you guys might think that I know more than I really do -
      I'm a fucking idiot.
<twb> Well you're in canberra
<twb> You'd be an idiot from osmosis alone
<twb> tali713: do you run emacs out of git?  What's the magic to tell it to run
      without installing it?  Default options have the unpleasant side-effect of
      using the .elc's from the (older) installed version in /usr.  I haven't
      bothered to think of the "right" way to fix load-path  [15:44]
<twb> It's probably something as trivial as --prefix=$PWD
<chu> Haha, twb, yes.
<tali713> twb: indeed, just tell it where you want it to go.  [15:45]
<twb> I was hoping for someone to just give me "here's one I prepared earlier"
									  [15:46]
<tali713> yeah, I usually just install it, periodically do clean up.  but now
	  I'm thinking, might as well just run it in the repo.  I just started
	  doing that with stumpwm, hasn't affected my life in the slightest.
	  just one less step.  [15:47]
<tali713> chu: ignorance and stupidity are difference things; for one of them, a
	  simple cure exists.  [15:52]
<twb> Once you have it working, let me know the details
<tali713> twb: will do.  won't happen til the next time I compile.  [15:53]
<twb> No rush  [15:54]
<twb> It's only gonna happen on my VPS anyway; my netbook is too weaksauce to
      actually compile things

[Wed Aug 22 2012]
*** Topic for #emacs: Emacs 24.2 release candidate available
    http://permalink.gmane.org/gmane.emacs.devel/152564 | Emacs mugs at
    http://shop.fsf.org/ | http://emacswiki.org/EmacsChannelFaq |
    http://paste.lisp.org/ | No public logging! What happens in #emacs stays in
    #emacs | Sexism will not be tolerated. Yes, I'm looking at you.  [15:58]
*** #emacs: topic set by aidalgol!~user@202.36.179.65, 07:21:46 2012/08/17
*** Users on #emacs: coldnew sator Kryztof RaceCondition homie`` cthuluh
    aurelien melmothX ferdy aisbaa thone_ sjihs YoungFrog agumonkey Ottre tsdh
    lfazio dailylinux scri rogorido nicferrier dan64 ivan-kanis hyperair macivy
    dragansah erez ryuslash srhb chu gko mattmusc Cymew o1e9 mishok13 mrSpec
    mahmoudimus tralala sshirokov ijp fualo forcer edgar-rft djcoin jeekl stu-
    senny arvind_khadri GeorgeJetson fbs quazimodo madanyang changedNicks
    Trademar191 kennyluck skangas
*** Users on #emacs: ananthakumaran prebz m477 jlf jlf_ schwert alephnull lcc
    jehan kennyd benny XceptN ymasory RanJiao daveo harovali genehack Oejet kcj
    fisted fold magcius ivan`` hdev``` technomancy Yuuhi`` subversus ji9 mdim
    tlync fbru02_ tilgovi twb jcubic` xiao hoyang popeye92 xiangfu cfy Frozenlo`
    fakedrake PuercoPop420 dim kevinbenko bipt kuzary dgvncsz0f mns b0ef prip
    Nafai quasisane Skif MrWGW SamB_MacG5 golodhrim babilen carif_ gnuvince
    tromey ndngvr sheepbat dankles
*** Users on #emacs: proq stuarth talyz ext cbpage xinming_ sellout42 jdahm
    muhoo jryan|work Vulpes dtaht loke aartist vmeson shergill dbristow
    teiresias reactormonk kliph qsun brendyn gsathya tuvwx Siphonblast wubo
    gezgin Xof cyberspace- mrBliss ghast framling taylanub abeaumont TheCrittaC
    damd| nelk z0d barika dizzylizzy theos Fuco johnsu01 gnoel netrom^off
    redblue rdd iderrick kordex fimblo Natch Boscop xristos treyh0 bremner
    duck1123 CampinSam loke_erc asmanur GnarlyBob
*** Users on #emacs: bzzbzz jandrusk DT` inigo_ arrsim hpd dunib danszr cuba33ci
    djcb saorge ddc__ gentz shader hiroaki unknown_lamer unlink jfincher
    birkenfeld ruediger jasond wunki james_be quotemstr dec4y dajva dca Seb
    beneth` sphex bersace_olfeo rtj Guest53707 StMichel bigfeng12 isomer derekv
    pierre__ mathrick xxtjaxx Quadrescence TaeYun BlastHardcheese dubz jedediah
    russm asuka arkx isak_ klutometis fperrin hanDerPeder raek isak dboswell`
    stootoon dooglus magnars
*** Users on #emacs: matthiasgorgens RushPL spacebat monotux s15y txxt raph_ael
    ArZa daimrod ok2 sm assem Laynef Sembei mnemonikk cyt93cs_ anildigital_work
    srid NimeshNeema offbyone heatxsink jave_ ivenkys setheus remote
    khaije|minder stokachu ivan\ docgnome scottj yhager avar sorressean anderson
    xorg62 nodestool CosmicRay Han forestbird SpiderPig lagging_troll JayDugger
    multi_io axrfnu cmbntr Koshian_ Viiru elik reeses twem2 guifre bvk_ bigmeow
    TehTreag|AFK limetree bradwright
*** Users on #emacs: kodein puff shadowdaemon Mad_Dud macrobat yonkeltron
    rossabaker `moebius` sawjig acewin tazle solarus iiska PWizard antoszka c0rn
    legumbre Pio toshi combataircraft Swathe_ tvaalen_ kini zw01 renard_ dfox
    synx muep Silex tsetumel_ turbolen1 hgb mjrosenb Boney tali713 fsbot kanru_
    newcup cataska clop k0ral Mosu tg ingeniou1 mak ozzloy wanders_ steez nuba
    gaqzi fasta_ tbarletz kenjiskywalker theBlackDragon yhvh kahen j0ni ganbold
    vibhav wapiflapi yazirian
*** Users on #emacs: bigjust leathekd drewr andres Dybber peder kanru necronian
    dueno cola_zero_ faheem __class__ caveat- xAFFE Hapsbanan stepnem Ender79
    faen nullman madnificent Joelbyte mechairoi Expez hellekin dropdrive bps
    jaimef digie futuro` kenyon bastii drdo alrua Will| free runejuhl entropy`
    mattcen rainrider|away CrazyEddy jabot noptys_ sword dshep_ favadi
    anildigital ztfw amoe raso bla calimocho zenwryly jeffrubic Derander lokydor
    les marienz antono cbmuser ybit
*** Users on #emacs: literal Sketch jtg endojelly hiredman lloydhuang kloeri
    illovae Raynes occamshatchet birny felipe_ rotty rudybot ft jlindsay
    ldlework Rapp fschmitt __main__ mami galdor nimred juri_ bob2 pfote cods
    fualo_ murr4y BigEndia1 AlbireoX kanzeon Obfuscate callen barik bedouin
    justin_w angelixd Jaimef2 NaCl djao_ maio mtkoan thomases gensym _root_
    aboudreault _schulte_ Drakx quicksilver TTilus fmu lotia shabble Athas icks
    yibe_ mitchty jayne hober hhuuggoo ob
*** Users on #emacs: binjured lahwran hohum dzho neurodamage AlexanderS eqyiel
    gnomon atrus Dr_Jazz nano- surrounder ub|k thorkill jlen DraX wagle vcgomes
    sybariten Odin- wgreenhouse anonus Zol nully_ mstr tsally ecraven fhd_
    mfisher aindilis k-man lorn Dodek georgeha1k froggey Khady gianlucadv
    sanderd nephyrin demolithion kryl99 sav jfe zygen_ scgilardi derrida qDot_
    lenzoid` tessier aburgess Dnumgis fds vds offby1 rods` rizumu Buglouse legov
    corecode jasox mgsk korutsu Borbus
*** #emacs URL: http://emacswiki.org/
*** #emacs modes: +np  [15:59]
*** #emacs was created on Sunday 2006/11/26 02:42:33 PM
<twb> That's probably just increased lint in newer Emacsen  [16:01]
<muhoo> it's a hell of a lot of lint, but it "worked" for some value of worked
	https://www.refheap.com/paste/4545  [16:03]
<muhoo> i fully expect it to explode  into a million peices, but, hey, at least
	i don't have to learn eclipse or intellij
* Buglouse stayed ^ <-----> than <-- desired :yawn:  [16:10]
<Buglouse> Anyone know auth-source, http://slexy.org/view/s2ZzSBIr0Q  [16:11]
<twb> muhoo: but you're still using java, so you still fail  [16:13]
<muhoo> twb: if you feel like giving me a million dollars, i'll retire now and
	not have to work for a living  [16:21]
<axrfnu> somebody here using mu4e and possibly knows how to alter the message
	 view in mu4e?  [16:33]
<axrfnu> i'd like it to show full email addresses instead of only the real names
<djcb> axrfnu: check `mu4e-view-show-addresses'  [16:34]
*** changedNicks (pule@unaffiliated/changednicks) is now known as sweet|kid
									  [16:35]
<axrfnu> djcb: wow, prompt reply from the maintainer. thank you so much :)
									  [16:37]
<axrfnu> works sweet  [16:38]
<djcb> axrfnu: good!
<axrfnu> djcb: are there any plans to make mu4e support multiple config sets, to
	 for example separate work from private mail?  [16:40]
<djcb> axrfnu: well, you can do it to some extent (this is emacs after all)
									  [16:42]
<djcb> it could be made easier of course, and this may happen  [16:43]
<axrfnu> well, for now i think i'd stick to a local approach. that is, rebind
	 the relevant mu4e variables on-demand. seems (at least for now) more
	 viable  [16:46]
<djcb> axrfnu: that is a good approach
*** RaceCondishun (~erik@194.126.108.2) is now known as RaceCondition  [16:59]
*** jcubic` (~user@aduq181.neoplus.adsl.tpnet.pl) is now known as jcubic  [17:44]
<ijp> let's have a gnufight at the ok corral  [18:38]
<nicferrier> ptyow
<nicferrier> I notice aidagol went missing as soon as I said I was gonna badger
	     him about helping with elmarmalade  [18:47]
<kodein> how very convenient
<nicferrier> b
<nicferrier> ooo. I should totally have a nice colourful mode for elnode logs.
									  [18:53]
*** RaceCondishun (~erik@194.126.108.2) is now known as RaceCondition  [19:12]
<fvahid> hello  [19:48]
<fvahid> i'm using gnus but my smtp server error when sendig email
<fvahid> atuonthication error reported but my password correct  [19:49]
<fvahid> how to says to gnus use non ssl connection to smtp server  [19:50]
<fvahid> ?
<alephnull> fvahid: Just use msmtp or something similar if you can.  [19:55]
<fvahid> alephnull: howto use msmtp?  [19:57]
<alephnull> fvahid: Are you on *nix/BSD ?  [19:58]
<fvahid> alephnull: yes i'm using debian  [19:59]
<alephnull> If yes, http://msmtp.sourceforge.net/. It'll be packaged in your
	    distro.
<alephnull> fvahid: I don't have access to my config to give you an example but
	    it is pretty simple.  [20:00]
<alephnull> ,gnusmsmtp
<fsbot> alephnull: GnusMSMTP is, like, at
	http://www.emacswiki.org/cgi-bin/wiki.pl?GnusMSMTP
<fvahid> alephnull: im install msmtp server how to say gnus to use msmtp
<fvahid> alephnull: thaks  [20:02]
<taylanub> i wonder how LibreOffice compares to MS nowadays  [20:06]
<kilon> you wont make you leave emacs any time soon  [20:07]
<kilon> *it wont  [20:08]
<taylanub> let's implement an OfficeOpenXML engine in elisp
<kilon> I would love to replace libreoffice with emacs at work
<kilon> though i could do that now too  [20:09]
<dlams`> has anyone successfully gotten yasnippet working with sql-mysql?
									  [20:11]
<dlams`> puts you in "SQLi[mysql]" mode
<samrat> how can I upgrade a package that I installed using package-install
									  [20:31]
<kodein> package-list-packages, press U, press x  [20:33]
<JordiGH> Any clue what syntax hgweb decided to highlight in this file?
	  http://hg.savannah.gnu.org/hgweb/octave/file/a4e94933fed3/etc/HACKING
									  [20:44]
<JordiGH> Does it think it's a shell script?
<nullie> anything looks like perl script  [20:47]
<JordiGH> Huh.
<JordiGH> Yeah, looks like it thinks it's Perl.
<JordiGH> With the package keyword...
<JordiGH> Yes! It even decided that @octave.org was an array.  [20:48]
<JordiGH> Dangnabit, Pygments.
<taylanub> why dafuq do i have DISPLAY set ... let's restart tmux  [21:02]
<taylanub> ok, in emacsclient DISPLAY is set for whatever reason.  normally it
	   would be unset (implying `getenv' uses the env of the emacsclient
	   process, and not the daemon)  [21:04]
<taylanub> i guess i'll just unset it, but i wonder what causes it to be set at
	   the moment, it would never do this  [21:05]
*** RaceCondishun (~erik@194.126.108.2) is now known as RaceCondition
<ngirard> .
<taylanub> theory: `getenv' checks the environment of both the daemon and the
	   client.  normally i would launch the daemon from some place where
	   DISPLAY is unset, thus when i also run emacsclient with DISPLAY
	   unset, it would be unset in both places; this time i launched the
	   daemon with DISPLAY set  [21:06]
<taylanub> yup, see `getenv' docs in contrast to `getenv-internal'  [21:07]
<taylanub> (well, i'm not entirely sure if these docs confirm my thought)
									  [21:10]
<taylanub> (getenv-internal "DISPLAY") evals to ":0" even though
	   `process-environment' has no entry for DISPLAY  [21:13]
<JordiGH> git takes so long to resolve deltas...  [21:16]
<JordiGH> Whatever that is...
<kodein> changes
<JordiGH> Yeah, why does it need to resolve them when I clone?
<JordiGH> it really slows down my hg clone.
<proby> hi , how to change the color of the font printed in the bottom buffer
	which receives the commands ??? :)
<JordiGH> Sits there eating CPU for like a minute.  [21:17]
<kodein> proby: you mean the mini-buffer?
<proby> kodein yes
<kodein> M-x customize-face RET minibuffer-prompt RET  [21:19]
<proby> kodein, thanks  [21:24]
<kodein> you're welcome  [21:25]
*** TehTreag|AFK (~TehTreag_@unaffiliated/tehtreag) is now known as TehTreag
									  [21:29]
<Lareth> Hello how can I change the default Bold, Italics and Bold Italics font
	 in Xemacs?  [21:32]
<JordiGH> Guys, how about hosting a stackexchange-like site for all GNU
	  packages?  [21:35]
<JordiGH> osqa.gnu.org/emacs
<JordiGH> Well.
<JordiGH> qa.gnu.org/emacs
<JordiGH> qa.gnu.org/octave  [21:36]
<bremner> gnu-bazaar.org ?
<kodein> should we call it the cathedral?  [21:42]
<EnglishGent> hi! I have a wierd problem with elpa / my .emacs file
<EnglishGent> the same code seems to get appended to my .emacs *everytime* I
	      shut down emacs
<EnglishGent> resulting in a .emacs that gets steadily longer & longer with
	      endless repeats of the same block of code
<EnglishGent> that being the code starting ";;; This was installed by
	      package-install.el."  [21:43]
<EnglishGent> any ideas?
<EnglishGent> please? :)
<JordiGH> I'm going to bring this up in the Savannah list...
<EnglishGent> hi tensorpudding :)  [21:45]
<tensorpudding> moin, EnglishGent   [21:54]
<nicferrier> gosh. so polite in here.  [21:58]
<nicferrier> JordiGH: did you get anywhere with gud?
<JordiGH> nicferrier: Been busy with IRL work.
<EnglishGent> hi nicferrier :)  [22:04]
<EnglishGent> hello JordiGH
* EnglishGent surprised it's so quiet in here....
<EnglishGent> :)
<JoelMcCracken> EnglishGent: never shut down emacs
<JoelMcCracken> i wonder, is it a problem with shutdown or startup?  [22:05]
<EnglishGent> JoelMcCracken -- that would be the ideal... sadly this is the one
	      on my work machine... a windows box :|
<JordiGH> Richard Stallman doesn't always run an OS kernel, but when he does he
	  prefers GNU/Hurd. He is... the most interesting hacker in the
	  world. Stay free, my friends
<EnglishGent> I dont know ... I suppose I could try running it with (what's the
	      dont load anything flag?)
* EnglishGent googles
<EnglishGent> but the .emacs *definitely* keeps acquiring more & more copies of
	      the same block of code -- all at the end  [22:06]
<JoelMcCracken> EnglishGent: just load up your .emacs in less or something after
		you shut it down
<EnglishGent> good idea
<EnglishGent> hang on - let me see when it adds it then
<EnglishGent> ty :)
<JoelMcCracken> sure. I have no idea what your problem is, but this might help 
									  [22:07]
<EnglishGent> hmm... it seems to be adding it on load  [22:11]
* EnglishGent decides to comment out some other stuff from his .emacs & see if
  that helps  [22:12]
<EnglishGent> thanks btw! this has been driving me nuts!
<JordiGH> ,stallman
<EnglishGent> :)
<fsbot> try:  chestallmanshirt RichardStallman RichardStallmanPortrait
<JordiGH> I want my Stallman facts back in fsbot. :-(
<kodein> chestallmanshirt
<kodein> ,chestallmanshirt  [22:13]
<fsbot> hmm, chestallmanshirt is
	http://geekz.co.uk/shop/store/show/che-stallman-tshirt
<kodein> bah
<yonkeltron> any good way to execute a shell command in all buffers?
<kodein> also, that shop's shut down.
<kodein> which is a bummer, I wanted that knuth t-shirt
* fds has the Che Stallman one :-s  [22:15]
<kodein> yeah, I have that one as a sticker on the laptop  [22:16]
<fds> I should've got the Knuth one at the same time, really.
<fds> But, I was hesitant to own anything with the word `homeboy' on it.  [22:17]
<EnglishGent> yay! fixed it (tracked it down to some rogue code in my .emacs
<EnglishGent> :)
<fds> ,yay  [22:18]
<fsbot> :)

[Wed Aug 22 2012]
*** Topic for #emacs: Emacs 24.2 release candidate available
    http://permalink.gmane.org/gmane.emacs.devel/152564 | Emacs mugs at
    http://shop.fsf.org/ | http://emacswiki.org/EmacsChannelFaq |
    http://paste.lisp.org/ | No public logging! What happens in #emacs stays in
    #emacs | Sexism will not be tolerated. Yes, I'm looking at you.  [23:56]
*** #emacs: topic set by aidalgol!~user@202.36.179.65, 07:21:46 2012/08/17
*** Users on #emacs: coldnew zellio vijaykiran fisted nullie Trademark91 dkh
    necros fxiny quazimodo erics dberg Sembei thelazydeveloper elarson chimay
    rudybot xiangfu jbarrios lokydor babilen_ fperrin fualo yates logicgeezer_
    treehug chewbranca ocmsRzr cfy xcv bdmst qinglingquan talsamon tiwula ndngvr
    enymo` punketo28 billyoc` wbooze Guest31228 erez` sohail Tegi dnolen fbru02
    noahsussman pmade tensorpudding phax mboldt EnglishGent gnuvince peterhil`
    uris ashawley jgama
*** Users on #emacs: ttimvisher johnstorey lduros forestbird torsteiny ngirard
    nilg` thekilon jao JordiGH theos dtaht trebor_dki konr_trab mattmusc
    dardevelin classix gko mgsk Joelbyte1 dzhus sator ijp gusnan k-man taylanub
    dfox Boscop mstevens peterhil ice_ prebz_ bitonic saorge_ bpalmer libertas
    luneff Houl thanosQR yat dunib Kryztof cthuluh aurelien melmothX ferdy
    aisbaa thone_ YoungFrog Ottre nicferrier dan64 ivan-kanis ryuslash srhb
    mishok13 sshirokov forcer djcoin jeekl
*** Users on #emacs: GeorgeJetson fbs madanyang sweet|kid Trademar191 skangas
    jlf_ schwert jehan kennyd benny XceptN harovali genehack fold magcius ivan``
    hdev``` technomancy subversus ji9 jcubic PuercoPop420 dim kevinbenko kuzary
    mns b0ef prip Nafai quasisane MrWGW SamB_MacG5 golodhrim carif_ tromey
    sheepbat dankles proq stuarth talyz ext cbpage xinming_ sellout42 muhoo
    jryan|work loke aartist vmeson shergill dbristow teiresias reactormonk kliph
    qsun brendyn gsathya tuvwx
*** Users on #emacs: Siphonblast wubo gezgin Xof cyberspace- mrBliss ghast
    framling abeaumont TheCrittaC damd| nelk z0d barika dizzylizzy Fuco johnsu01
    gnoel netrom^off redblue rdd iderrick fimblo Natch xristos treyh0 bremner
    duck1123 CampinSam loke_erc asmanur GnarlyBob bzzbzz jandrusk DT` inigo_
    arrsim hpd danszr cuba33ci djcb ddc__ gentz shader hiroaki unknown_lamer
    unlink jfincher birkenfeld ruediger jasond wunki james_be quotemstr dec4y
    dajva dca Seb beneth` sphex
*** Users on #emacs: bersace_olfeo rtj StMichel bigfeng12 isomer derekv
    nowhere_man mathrick xxtjaxx Quadrescence TaeYun BlastHardcheese dubz
    jedediah russm asuka arkx isak_ klutometis hanDerPeder raek isak dboswell`
    stootoon dooglus magnars matthiasgorgens RushPL spacebat monotux s15y txxt
    raph_ael ArZa daimrod ok2 sm assem Laynef mnemonikk cyt93cs_
    anildigital_work srid NimeshNeema offbyone heatxsink jave_ ivenkys setheus
    remote khaije|minder stokachu ivan\ docgnome scottj
*** Users on #emacs: yhager avar sorressean anderson xorg62 nodestool CosmicRay
    Han SpiderPig lagging_troll JayDugger multi_io axrfnu cmbntr Koshian_ Viiru
    elik reeses twem2 guifre bvk_ bigmeow TehTreag|AFK limetree bradwright
    kodein puff shadowdaemon Mad_Dud macrobat yonkeltron rossabaker `moebius`
    sawjig acewin tazle solarus iiska PWizard antoszka c0rn legumbre Pio toshi
    combataircraft Swathe_ tvaalen_ kini zw01 renard_ synx muep Silex tsetumel_
    turbolen1 hgb mjrosenb Boney
*** Users on #emacs: tali713 fsbot kanru_ newcup cataska k0ral clop Mosu tg
    ingeniou1 mak ozzloy wanders_ steez nuba gaqzi fasta_ tbarletz
    kenjiskywalker theBlackDragon yhvh kahen j0ni ganbold vibhav wapiflapi
    yazirian bigjust leathekd drewr andres Dybber peder necronian dueno
    cola_zero_ faheem __class__ caveat- xAFFE Hapsbanan stepnem Ender79 faen
    nullman madnificent Joelbyte mechairoi Expez hellekin dropdrive bps jaimef
    digie futuro` kenyon drdo alrua Will| free runejuhl
*** Users on #emacs: entropie mattcen rainrider|away neurodamage dzho hohum
    lahwran binjured ob hhuuggoo hober jayne mitchty yibe_ icks Athas shabble
    lotia fmu TTilus quicksilver _schulte_ aboudreault _root_ gensym thomases
    mtkoan maio djao_ NaCl Jaimef2 angelixd justin_w bedouin barik callen
    Obfuscate kanzeon AlbireoX BigEndia1 murr4y fualo_ cods bob2 juri_ nimred
    galdor mami __main__ fschmitt Rapp occamshatchet Raynes illovae kloeri
    lloydhuang hiredman endojelly jtg Sketch
*** Users on #emacs: literal ybit cbmuser antono marienz birny felipe_ rotty ft
    jlindsay ldlework AlexanderS eqyiel gnomon atrus Dr_Jazz nano- surrounder
    ub|k thorkill jlen DraX wagle vcgomes sybariten Odin- wgreenhouse anonus Zol
    nully_ mstr tsally ecraven fhd_ mfisher aindilis lorn Dodek georgeha1k
    froggey Khady gianlucadv sanderd nephyrin demolithion kryl99 sav jfe zygen_
    scgilardi derrida qDot_ lenzoid` tessier aburgess Dnumgis fds vds offby1
    rods` rizumu Buglouse legov
*** Users on #emacs: corecode jasox korutsu Borbus les Derander jeffrubic
    zenwryly calimocho bla raso amoe ztfw anildigital favadi dshep_ sword
    noptys_ jabot
*** #emacs URL: http://emacswiki.org/
*** #emacs modes: +np
*** #emacs was created on Sunday 2006/11/26 02:42:33 PM
*** babilen_ (~babilen@unaffiliated/babilen) is now known as babilen  [23:57]

[Thu Aug 23 2012]
<enymo`> where did you copy from and meant to paste it into?    [00:03]
<JordiGH> enymo`: Email.  [00:06]
<enymo`> JordiGH: email: still the best social network app  [00:08]
<dlams`> anyone have any off hand ideas on how i could config yank to start from
	 the first non-whitespace filled entry in the kill ring? (or if theres
	 something that already does it)  [00:34]
<dim> dlams`: do you know C-y M-y?
<enymo`> dlams`: not sure if there's something for it but i would look into
	 defadvice to alter yank   [00:35]
<dlams`> dim: I do, i'm saying instead of cycling through whitespace kills, just
	 going to ones without
<dlams`> enymo`: Thanks, do you think thats better than altering kill for
	 whitespace kills?  [00:36]
<jfincher> is there a way to configure emacs never to implicitly muck with my
	   copy/paste buffer?
<enymo`> dlams`: i guess that would depend on the complexity to advice the
	 function  [00:37]
<rajeshsr> hi  [00:38]
<rajeshsr> does anyone use shell in emacs?
<enymo`> dlams`: i would think it would be easier to skip an index if it's a
	 whitespace as opposed to altering kill to not place a string in the
	 ring if it's whitespace
<dlams`> enymo`: cool, thanks
<rajeshsr> It looks like, it caps the command to 255 characters..
<dlams`> jfincher: sarcasm?
<rajeshsr> and splits them as 2 different commands..  [00:39]
<rajeshsr> anybody faced this problem?
<jfincher> dlams`: no, not at all.
<jfincher> one of my major frustrations with emacs is that it writes my
	   copy/paste buffer when I do innocuous things.  [00:40]
<enymo`> like deleting backwards
<jfincher> e.g. let's say I copy a basename that I want to enter into emacs.  If
	   I go to emacs and find that the path I want to append the basename to
	   already has a basename, and then I press M-backspace to delete the
	   basename, emacs inserts the deleted basename into my copy/paste
	   buffer, making me go back, re-highlight, and re-copy the basename I
	   wanted to paste.  [00:41]
<enymo`> or deleting words in general
<jfincher> enymo`: exactly :)
*** ae (~ae@190.179.172.20) is now known as Guest55122
<jfincher> I'd rather emacs never write the copy/paste buffer explicitly: my
	   life will be happier if I just used an explicit command when I wanted
	   to insert something into the X copy/paste buffer.  [00:42]
<yates> k  [00:44]
<nullman> I'm getting a 403 Forbidden error on the melpa package list site
	  (http://melpa.milkbox.net/packages/)... are others seeing this also?
<yates> yes, but try melpa.milkbox.net, then select the package  [00:45]
<nullman> humm, that's not what the docs say to use; did they change it or is it
	  broken?  [00:46]
<yates> ikd  [00:47]
<yates> idk
<yates> iud
<yates> ied
<yates> fyi
<yates> tbd
<nullman> hehe
<dlams`> on that (backword-kill-char) note, is there a forward kill char?
	 doesn't seem to be one documented
<nullman> (delete-char) ?  [00:48]
<yates> (delete-forward-char N &optional KILLFLAG)  [00:49]
<nullman> (delete-char N &optional KILLFLAG) -- with the killflag?
*** xinming_ (~hyy@125.87.111.20) is now known as xinming
<yates> dlams`: (apropos PATTERN ..) is your friend.   [00:51]
<yates> or (info "emacs")
<yates> ,haiku  [00:52]
<fsbot> The old-fashioned nun 
<fsbot> rises, but won't run or blink. 
<fsbot> My dog has no fleas. 
<yates> my blog has no d's  [00:55]
<anxt> my wife has ...
<anxt> nm
<Demosthenes>  so if i were to give bbdb a second try, i should use v3?  [00:58]
<dkh> Demosthenes: I like it although the documentation is lacking.  But if
      you're going to invest in setting it up,  I would go with the newest.
									  [01:00]
<Demosthenes> dkh: i abandoned the original bbdb for org-contact in a flaming
	      rant ages ago before i learned lisp and couldn't get my data out
	      of bbdb... having learned elisp i figure i owe it a second chance
									  [01:01]
<dkh> Demosthenes: There's a mailing list, which is quite active, where you can
      get your questions answered pretty well on the new bbdb.
<Demosthenes> dkh: my big concern would be phone sync  [01:02]
<Demosthenes> my goal would be use bbdb as my master file, and push to mutt & my
	      google contacts  [01:03]
<dkh> Demosthenes: Check this out: http://karra-asynk.appspot.com/
<dkh> Demosthenes: I haven't used it but from what I've heard, it's pretty full
      featured.  [01:04]
<anxt> dkh: there are no screenshots?!
<anxt> looks kinda cool though  [01:06]
<dkh> Demosthenes: Haven't seen them.  If you search for bbdb-info ASynK v0.2.1
      on google, there's a whole bbdb-info thread on the software.  [01:10]
<Demosthenes> cool.  [01:11]
<Demosthenes> thanks
<taylanub> trying to convince a Turkish girl that polyamorism is nothing bad,
	   this is fun :D  [01:17]
<forcer> taylanub: http://www.morethantwo.com/  [01:18]
<forcer> Pass it on :-)
<calimocho> guessing nsfw  [01:19]
<forcer> calimocho: Depends on your work, but generally, no, quite sfw
<forcer> (Polyamory is primarily about love and relationship, not sex)  [01:20]
<zellio> o.O
<zellio> what did I walk in on
<calimocho> hehe welcome to #emacs  [01:21]
<forcer> Looked like to me as if taylanub was talking about a certain clash of
	 cultures.
*** ryanc` (~ryanc@208.85.208.53) is now known as ryanc
*** dyCrazyEd (~deepsome@wrongplanet/CrazyEddy) is now known as CrazyEddy
									  [01:26]
*** tali713` (~tali713@c-75-72-193-140.hsd1.mn.comcast.net) is now known as
    tali713  [01:39]
*** 17WAAC2T4 (~Mark@li357-97.members.linode.com) is now known as mgsk  [01:41]
*** johnw (~user@c-98-215-105-167.hsd1.il.comcast.net) is now known as cojohnw
<ijp> rudybot: quote
<rudybot> ijp: NetBSD: Where History Comes Alive
<taylanub> OpenBSD > NetBSD  [01:42]
<anxt> taylanub: moar securer, eh?  [01:43]
<jlf`> taylanub: lexicographically anyway
<anxt> taylanub: with 33% more cunt than leading operating system
*** jlf` (~user@50-0-131-58.dsl.dynamic.sonic.net) is now known as jlf  [01:44]
<yates> l
<yates> anxt: why so vulgar?  [01:45]
<yates> turbofail: what postgresql client is that? 
<turbofail> https://github.com/cbbrowne/pg.el  [01:46]
<anxt> which is hosted on solaris
<anxt> yates: it is apropos in openbsd discussions.
<jlf> not so much  [01:47]
*** hansy (~hansy@190.237.7.137) is now known as hansy2
*** hansy2 (~hansy@190.237.7.137) is now known as SpartanWarrior
<anxt> meh, i lose then
<anxt> sorry if i hurt your irc eyes  [01:48]
<yates> practice random acts of selfless kindness. 
*** SpartanWarrior (~hansy@190.237.7.137) is now known as hansy  [01:49]
<yates> but also eschew obfuscation.
<legumbre> no u
<yates> which is, in itself, kind.
<anxt> actually openbsd threatens your freedom
<jlf> avoid clichés like the plague
<anxt> http://imageshack.us/photo/my-images/184/stallmanopenbsdenemyofywi2.jpg/
<yates> sentence fragments. incorrect.  [01:50]
<yates> jlf: how's the city?  [01:51]
<jlf> hmm?
<fsbot> let's dominoate!
<yates> aren't you in San Fran.?
*** hansy (~hansy@190.237.7.137) is now known as ptn777  [01:52]
<jlf> no, i'm about an hour north
<yates> i may be confusing my irc nicks...
<yates> Ukiah?
*** ptn777 (~hansy@190.237.7.137) is now known as cibertoto712
*** technomancy_ (~technoman@ec2-23-20-129-88.compute-1.amazonaws.com) is now
    known as technomancy
<anxt> if i have a column of numbers how do i org-mode-ify them?
<legumbre> org-table-convert-region  [01:53]
<yates> mendocino?
<jlf> sonoma county
*** cibertoto712 (~hansy@190.237.7.137) is now known as marsam  [01:54]
<ijp> ,homie-yow
<fsbot> when's the revolution out ?!
<fsbot> lol
<anxt> legumbre: thanks
*** gsathya_ (~gsathya@ec2-176-32-86-157.ap-northeast-1.compute.amazonaws.com)
    is now known as gsathya
<legumbre> anxt: np
<yates> jlf: nice!  [01:55]
<nicferrier> turbofail: it used to work. I have it on my hard drive actually and
	     have been meaning to setup a postgres sever.
<jlf> yeah it's a great place to live
<JordiGH> Great, C&P code...  [01:56]
<yates> i was in the bay area for 14 years, back in the 80s/90s
<youlysses> jave_: Ok, so I got my arch-box up and running, and xwidgets. It was
	    brain-dead simple (ecspecially with a solid night of sleep), and
	    first impressions are *WOW*. :-)
<JordiGH> void foo(float x ){if(x > FLOAT_MAX){ /* .... >.< .... */}}
<JordiGH> Yes, let's check if a float is larger than FLOAT_MAX.  [01:57]
<billyoc`> lol
*** billyoc` (~user@cpe-68-174-120-10.nyc.res.rr.com) is now known as billyoc
<JordiGH> lol
<yates> JordiGH: tautological code.
<billyoc> can't be too careful.
<legumbre> what does the compiler do?
<jlf> it compiles
<nicferrier> lol
<nicferrier> I was going to say that.
<JordiGH> yates: It happened because there was a function bar(double x) with the
	  same body.
<billyoc> and then the magic happens.
<jlf> ,next  [01:58]
<fsbot> Another satisfied customer. NEXT!
<JordiGH> And someone C&P'ed that code.
<JordiGH> Death to C&P code!
<legumbre> jlf: /o\
<JordiGH> ,apropos-dude copy paste
<fsbot> No matches found
<JordiGH> ,apropos-dude copy
<fsbot> Also, Dude, copying and pasting is not the preferred
	nomenclature. Killing and yanking, please
*** marsam (~hansy@190.237.7.137) is now known as hansy  [01:59]
<billyoc> cut paste and paste.
*** cojohnw (~user@c-98-215-105-167.hsd1.il.comcast.net) is now known as johnw
									  [02:03]
<yates> ,apropos-dude liberal war mongering  [02:04]
<fsbot> No matches found
<yates> .seen a rational liberal  [02:05]
<birny> I've never seen a rational liberal before.
<jlf> ,order-drink kool-aid yates 
* fsbot slides a kool-aid over to yates
*** jgh (~jordi@snap.bic.mni.mcgill.ca) is now known as JordiGH2  [02:06]
<yates> pfft, spatooie, yuck!  [02:07]
<yates> ,order-drink hemlock jlf
* fsbot slides a hemlock over to jlf
<ashawley> neither "liberal" or "mongering" are in the dialogue of Big Lebowski
<yates> lebowski?
<fsbot> The Dude's not in. Leave a message after the beep.
<nullie> a variant of emacs text editor?  [02:08]
<yates> zile  [02:09]
<enymo`> how to convert a unix timestamp into a readable date?
<jlf> date(1)
<billyoc> can't go wrong with date().
<yates> "Mind if we dance wi' yo' dates?"
<youlysses> nullie: What are you asking, or did I miss the first half?
<nullie> youlysses, hemlock is variant of emacs, according to wikipedia
* yates remembers Animal House  [02:10]
<youlysses> ,hemlock
<fsbot> Hemlock is [0] an Emacs-like editor for CMUCL
	<http://emacswiki.org/wiki/HemLock>.
<fsbot> [1] also in Lispworks, and now, in Openmcl
<jlf> nullie: your Classics professor would be so disappointed in you
<enymo`> in emacs?
<youlysses> How do you define variant?
* nullie doesn't even know what "Classics professor" is  [02:11]
<ashawley> The stuff newer than the "Oldies"  [02:12]
<ashawley> But older than adult contemporary
<jlf> nullie: ,,gw trial of socrates  [02:13]
<fsbot> [google]    http://en.wikipedia.org/wiki/Socrates
<fsbot> http://en.wikipedia.org/wiki/Meletus
<jaimef> jave_: hey can you havemore than one webkit window open?
<jaimef> socrates sentenced himself.
<yates> nullie: you know, classic novels, like "Love Story," "Debbies Does Fort
	Worth," and "Dr. Spock on Spanking"
<yates> ,,gw trial of socrates  [02:14]
<fsbot> [google]    http://en.wikipedia.org/wiki/Socrates
<fsbot> http://en.wikipedia.org/wiki/Meletus
<yates> ,gw trial of socrates
<fsbot> [google]    http://en.wikipedia.org/wiki/Socrates
<fsbot> http://en.wikipedia.org/wiki/Meletus
<youlysses> jaimef: I don't think it's currently implemented. Maybe if you
	    rename the buffer, and it open it again, but I haven't tried it yet.
<yates> jlf: why ",,"?
<fsbot> try:  "(:)" "lambda" dv" M"
<jaimef> youlysses: you get it working?
<youlysses> jaimef: xwidgets/arch in-general?
<jaimef> youlysses: yeah last I saw you were working to get it working
<jaimef> xwidgets  [02:15]
<jlf> yates: fsbot responds to , only at the beginning of incoming messages --
      to invoke it later you need to do like this: ,,ping
<fsbot> pong
<jaimef> hmm if only I could take a snapshot of a buffer from inside emacs
									  [02:18]
<youlysse`> XD My session just crashed.
<anxt> jaimef: M-x mark-whole-buffer?
<ijp> youlysse`: M-x session-restore
<youlysse`> jaimef: Yeah, on a full-night of sleep, it was embarissingly
	    easy. :-P
<youlysse`> It's weird how much lack-there-of can effect one's cognition and/or
	    problem olving ability...  [02:19]
<anxt> jaimef: or do you mean like jpg snapshot?
<ijp> er, restore-session
<youlysse`> jaimef: Like a image?
<jaimef> yeah since xwidget flickersd
<Arafangion> youlysse`: I hear that getting married is a bad idea, for that
	     reason. ;)
<ijp> recover-session, Third times a charm :P
<jaimef> e.g. "snap picture of this buffer and display it in new image buffer
<anxt> married men live a little longer iirc
<youlysse`> anxt: I guess the saying for "there's a mode for that" is more
	    common than not. :-P  [02:20]
<jlf> hmm, i thought it was a little shorter
<jlf> maybe it only seems longer
<srhb> Is there a not too hard way of getting erc to display timestamps with
       only %H:%M, but save the log files with seconds included?  [02:21]
<youlysse`> Arafangion: Add insomniatic tendencies (between you and/or your
	    spouse) onto that list, and *ding ding ding* we have a winner.
<ijp> jlf: depends on if they piss off the missus
*** asuka_ (asuka@home.hadiko.uni-karlsruhe.de) is now known as asuka  [02:23]
<Arafangion> youlysse`: I wasn't aware that insomniatic tendencies influenced
	     sleep at that point.
<youlysse`> jaimef: Tried playing a video, or a motion-image through it yet? I'm
	    curious for the preformance. If it has enough, I'd love to embed
	    mplayer into my buffer.
<youlysse`> Arafangion: My dad has it about as bad as me, and my parents sleep
	    in diffrent rooms because of it.  [02:24]
<jaimef> youlysse`: video does not display, but sound plays
<jaimef> and you can't kill the sound
<jaimef> so you end up with continous video audio
<Arafangion> youlysse`: In different rooms?  Are you referring to apnoea or
	     something?
<youlysse`> jaimef: Doesn't display at all, or it's horribly slow a/o studdery? 
<youlysse`> ,apnoea  [02:25]
<fsbot> You'Re being a bit brief, would you please go into detail. 
<Arafangion> youlysse`: Sleep Apnoea.
<jlf> spelled apnea in english  [02:26]
<jlf> us english rather
<youlysse`> Arafangion: Oh, I've only heard it spoken, I didn't put that
	    together because phonetically it's alot diffrent... My mom does, but
	    she's on a machine. But my dad is also an extreme night-owl, which
	    doesn't help. :-P
<Arafangion> youlysse`: It's pronounced differently?
<jaimef> youlysse`: I get no video
<youlysse`> Arafangion: In english, in's how jlf spelled it.  [02:27]
<Arafangion> Interesting.
<Arafangion> Online dictionaries have both spellings, it seems.
<youlysse`> jaimef: In webkit, or did you embed mplayer?
<jaimef> youlysse`: I am talking about video in the browser proper  [02:28]
<youlysse`> jaimef: I need to test sound then. I went to a youtube video that's
	    encoded to a html friendly format, nothing on both ends. But alsa
	    may have muted it. Are you getting "pin-wheel'd"?  [02:29]
*** PuercoPop712 (~PuercoPop@190.41.173.174) is now known as help  [02:31]
*** sword` (~sword@c-24-21-122-2.hsd1.or.comcast.net) is now known as sword
									  [02:34]
*** TehTreag|AFK (~TehTreag_@unaffiliated/tehtreag) is now known as TehTreag
									  [02:35]
<fds> Arafangion: `Apnoea' is a perfectly correct spelling in the UK (by which I
      mean ``Don't give in to the USian hegemony!'' :-P).  [02:36]
<jlf> i did stipulate `us english', geez!  [02:38]
<sellout42> Awww, I thought for a second you guys were talking about the sport
	    of apnea.  [02:39]
<fds> jlf: You did. :-)
<jaimef> hmmm clojuremacs  [02:40]
<Arafangion> fds: Thanks for that - I'm Australian, incidentally, which probably
	     explains that spelling, I was unaware of 'apnea', though, I assumed
	     it was a completely different word.
<fds> I've just got this weird tendency in English, which is although I'm
      absolutely disgusted by our terrible orthography, I still cling on to the
      most illogical and archaic spellings.  It's like Stockholm syndrome, I
      suppose.  [02:41]
<fds> Maybe one day we'll have real spelling reform, but probably not.
<jlf> fds: write your MP!  [02:42]
* fds picks up a pen and writes `your MP'.
<jlf>  good man
<fds> Or do you want me to write to my MP? :-)
<jlf> touché  [02:43]
<fds> Arafangion: Ah, I see.  I've noticed that Australians tend to be even more
      British than the British in their spellings, although, I could just be
      imagining that.
<jaimef> jlf you were touched by whom?
<jlf> that's a little personal  [02:44]
<jaimef> <jlf> touché
<jlf> yeah i got it, thanks though
<Arafangion> fds: Interesting point.  [02:45]
<Arafangion> fds: (I'm also deaf, so my english is "bookish")
<jaimef> j'etais touché1
<anxt> if you go around saying touche, doesnt that make you a toucher?  [02:46]
<fds> Arafangion: Ah, very interesting!  You must have quite a different
      perspective on the logicality of spelling then, I imagine.
<Arafangion> fds: I'm more pedantic, I guess.  When people make a mistake, it
	     usually takes more effort for me to figure out what they actually
	     mean.  [02:47]
<Arafangion> fds: Mum spells phonetically... That's painful. :)
<jfincher_> twoshay
<jfincher_> get it right, people
<fds> :-)
<Arafangion> jfincher_: Now, if mum spelt that word phonetically, I'd *never*
	     get it!  [02:48]
* Arafangion now understands why someone at work would type 'twoshay'.
<fds> To shay, or not to shay, that is the question.  [02:50]
<anxt> jfincher; lulz
<anxt> my mom writes me text messages like "plz call i want u to cum"  [02:51]
<legumbre> tmi
<Arafangion> Most definitely tmi.
<anxt> i wish my mom spelled that out in full
<anxt> like "plz cum 2 dinner anxt"  [02:52]
<fds> She writes me messages like that too.
<fds> Sorry, I couldn't resist. :-(
<anxt> ahh, that, AHAHAHHAA
<jlf> me too
<anxt> my belly is jiggling laughing
<ijp> ,homie-yow
<fsbot> i see a lincoln rolling!
<fsbot> lol
<anxt> fds: fabulous one-liner  [02:53]
<fds> ;-)
<sybariten> hey  [03:00]
<sybariten> is there a simple way i can do a query-replace where i will look for
	    "a single letter followed by a single digit", and replace that with
	    a string + the same letter and digit ?
<anxt> easy in sed  [03:01]
<sybariten> ok
<anxt> i take it you want to use emacs
<sybariten> well... hm, doesnt matter really  [03:02]
<sybariten> i guess it will boil down to a regexp in any case
<anxt> pretty much
<enzuru> hahahaha regexp
<enzuru> jesus
<enzuru> this must be a low point in your life
<sybariten> it definitely is, but i cant see how that relates to these computer
	    activities?  [03:03]
<binjured> haha
<enzuru> i'm a bot programmed to be cynical and emotionally abusive
<enzuru> to highlight that point, i'm scripted in perl
<anxt> s/([:alpha:]\d)STRING/($1)NEWSTRING/g
<binjured> ZINGBANG
<anxt> something like that
<anxt> capture the match to a memory $1 err  [03:04]
<anxt> or ([A-za-z][0-9])STRING  [03:05]
<jlf> nice, string-to-number accepts a radix argument but number-to-string does
      not
<anxt> well isnt the radix exactly only ever one place? (for num to string)?
									  [03:06]
<jlf> huh?
<jlf> i want 160 -> "A0"
<anxt> isnt the radix the fancy name for decimal point in non base 10 number
       systems?  [03:07]
<jlf> no, the radix is the base itself
<anxt> oh, my bad.
<jlf> i.e. radix 10 is decimal, radix 2 is binary, etc.
<anxt> what is the dot called then?  ffff.0a0o  [03:08]
<jlf> decimal point, binary point, etc. though non-decimal versions are seldom
      used ime
<anxt> i just read a procedure for base conversion in a discrete math book the
       other day  [03:09]
<anxt> incidentally
<jlf> math is fun  [03:11]
<anxt> i think so
<anxt> yesterday was secant lines through curves for me (i am a noob)
<anxt> TBH, i know the secant through 2 points is the average, but the reason
       its average hasnt clikced yet.  [03:12]
<anxt> i have been working my ass off, getting up to speed for uni math, and it
       is fun actually
<ijp> rudybot: quote  [03:14]
<rudybot> ijp: I love it how that image viewer makes my browser do entirely the
	  wrong thing when I hit "back.
*** help (~PuercoPop@190.41.173.174) is now known as PuercoPop  [03:16]
*** trebor_d` (~user@kvpn.lbf.fraunhofer.de) is now known as trebor_dki  [03:23]
<anxt> jack & diane is an epic tune  [03:24]
<billyoc> anxt: no  [03:26]
<youlysse`> anxt: Is that the actual name of the song? I thought it was "life
	    goes on"?   [03:28]
<anxt> youlysse`: its jack and diane  [03:29]
<billyoc> shite song, good movie, though.
<anxt> epic song
<anxt> just looked up the lyrics, its poetry really
<anxt> ok, maybe not poetry, but pretty good for cheesy 80s rock and roll
									  [03:30]
<billyoc> rock and roll!  [03:31]
*** sweet|kid (pule@unaffiliated/changednicks) is now known as upasna
<jlf> anxt: do you like phil collins? i've been a big genesis fan ever since the
      release of their 1980 album, duke.  [03:32]
<youlysse`> I'm 19, and can't stand 85+% of any "modern" music...
<jlf> anxt: before that, i really didn't understand any of their work. too
      artsy, too intellectual. it was on duke where phil collins' presence
      became more apparent. i think invisible touch was the group's undisputed
      masterpiece.
<bpalmer> youlysse`: yeah. if it weren't baroque, why'd they try to fix it?
									  [03:33]
<legumbre> bpalmer++
<parmegv> I'm looking forward to a way of creating a new project easily, easier
	  than currently with EDE from CEDET. Can anybody who lasts less than 3
	  minutes to set up a new project in C++ tell me how does he do it?
	  Thanks!
<youlysse`> legumbre: Beat me to it. bpalmer, double punny.
<jlf> bpalmer: some people can't handel the truth
<youlysse`> parmegv: People actually (besides the devs and/or maintainers)
	    actively use CEDET? :-P  [03:35]
<billyoc> I've never seen CEDET actually working.
<legumbre> I'm pretty sure that 15% of non-crap is a pretty good figure for any
	   art and age.
<legumbre> in fact, sturgeon's  [03:36]
<jlf> oh, an optimist!
<legumbre> :-)
<rryoumaa> more than art
<anxt> jlf, i have seen genesis, its not my style, but amazing musicianship
									  [03:38]
<jlf> anxt: it's an epic meditation on intangibility.  at the same time, it
      deepens and enriches the meaning of the preceding three albums.
<youlysse`> legumbre: Maybe, but that's what I can "stand", not what I percieve
	    as "good". Which I'll maybe give ~8%. :-l  [03:39]
<billyoc> I never was a big Genesis fan, but I saw them live during their Abacab
	  tour, one of the best shows I ever saw.
<anxt> a suprisingly good show was blue rodeo, shockingly great musicians
<fsmunoz> jlf: what about Whitney Houston?
<billyoc> I heard she's off the dope.
<fsmunoz> o_o  [03:40]
<jlf> did you know that whitney houston's debut lp, called simply whitney
      houston had 4 number one singles on it? did you know that, fsmunoz?
<fsmunoz> jlf: amazing
* fsmunoz passes jlf his card
<anxt> rock has really suffered in the 2000s
<jlf> it's hard to choose a favorite among so many great tracks, but "the
      greatest love of all" is one of the best, most powerful songs ever written
      about self-preservation, dignity.
<anxt> the 80s were very 80s  [03:41]
<DucBlangis> The 80's were overrated 
<DucBlangis> 90's were way better
<jfincher_> jlf: fyi, "whitney houston's debut lp, called simply whitney
	    houston" is more succinctly stated, "Whitney Houston's self-titled
	    debut"
<fsmunoz> The 80s were a bit more 80s than the 90s
<billyoc> lol
<jlf>  look at that subtle off-white coloring. the tasteful thickness of it. oh
      my god, it even has a watermark! 
<DucBlangis> wait... lol
<DucBlangis> jlf
<fsmunoz> :D
<DucBlangis> what are you talking about
<anxt> that said some wild stuff happened in the more metal/underground and punk
       scene in the 80s
<fsmunoz> DucBlangis: my card
<DucBlangis> that sounds....
<DucBlangis> off white, "tasteful" thickness  [03:42]
<DucBlangis> alrighty
<DucBlangis> like your business card? Going American Psycho?
<billyoc> american psycho?
<billyoc> lol
<fsmunoz> Fuch this, let's go to Dorsia
*** klutomet1s (~klutometi@klutometis.wikitex.org) is now known as klutometis
<jfincher_> jlf: I only mention this because it took me a very long time to
	    figure out what "self-titled debut" meant.
<anxt> jlf, ever hear "the roots"
* jlf finally closes the imdb tab
<fsmunoz> good show  [03:43]
* youlysse` hates being stuck in the car with people of his age-group
  ... (unless he's driving.)
<jlf> anxt: rings a vague bell 
<anxt> jlf, philly hip hop, pretty amazing really
<anxt> i wish i would have seen REM
<rryoumaa> jfincher_: if you're trying to reduce letters in the sentence (why?)
	   then use "eponymous"  [03:44]
<fsmunoz> Have you guys seen the picture of the Nirvana album cover baby? Bloody
	  depressing 
<youlysse`> fsmunoz: Do people really still have buisness cards? :-L
<jfincher_> rryoumaa: no one but wikipedians use "eponymous"
<rryoumaa> then my existence just blew apart your world view
<jfincher_> but that raises a question: if I'm programming and I name the class
	    "Eponym", is the name eponymous?
<fsmunoz> youlysse`: I have, but requested the during the first month, got ~200
	  of them, still have ~150.
<billyoc> rryoumaa: unless you're a wikipedian.
<youlysse`> fsmunoz: Like the actual album-cover, or like an "all grown up" type
	    of thing?
<rryoumaa> billyoc: which you can infer ...  [03:45]
<fsmunoz> youlysse`: and in the meantime they have the wrong numbers. It's more
	  of a social thing I guess.
<fsmunoz> youlysse`: the before and after, yes. 
<fsmunoz> like http://www.merryswankster.com/images/Spencer_Elden_split.jpg
<billyoc> They still sell business card scanners.
<rryoumaa> wikipedia is extremely political  [03:46]
<fsmunoz> Ans this was a few years ago.
<rryoumaa> but yeah
<youlysse`> fsmunoz: I've though of becoming a math-major, just to have a card
	    that has "professional PImp" on it (probally in a symboled manor,
	    not spelled out. XD
<billyoc> I trust wikipedia to look up episode descriptions of tv shows.
<fsmunoz> youlysse`: hehe
<rryoumaa> billyoc: you got it :)
<youlysse`> fsmunoz: I wouldn't call that "sad"? Because he kind-of seems like a
	    douche, or?  [03:47]
<fsmunoz> youlysse`: well, he's a kid that is part of whatever urban subgroup
	  that wears Cross Pattée stuff. But I found it depressing because I was
	  in highschool when the album appeared.  [03:49]
<youlysse`> fsmunoz: I don't know anything about trends and/or fashion so
	    nothing to me, but yeah I can see how that can be a bummer. That
	    happens alot with me, it doesn't help that my childhood coresponded
	    with the 90's japan-culture-explosion, and now there's 6+ itteration
	    of things like pokemon have passed, amoung alot others. It still
	    freaks me out when I see someone under 12 get a smart-phone. I
	    shared a flip-phone with my sister untill I wa  [03:53]
<youlysse`> 15. :-P
<youlysse`> *so that means nothing  [03:54]
<youlysse`> first-world-grumpy-young-old-man problems. XD  [03:55]
<johnw> now in its own repository: https://github.com/jwiegley/haskell-config
<fsmunoz> I used to play Vampire: The Eternal Struggle, when "Magic" popularised
	  card games.
<johnw> so I take it they're still struggling, then?
<youlysse`> fsmunoz: That was just before my time. Everyone my age collected
	    pokemon cards, but played Yugioh. :-P  [03:56]
<fsmunoz> oh well
<fsmunoz> Sice transit gloria mundi
<fsmunoz> *Sic
* youlysse` does wonder what the kids/culture will be when he's middled-aged
  though...    [03:59]
<billyoc> youlysse`: zombie apocalypse, prolly.
<anxt> they will drink and have sex, and be sure their parents dont understand
       what its like to be them.
<anxt> maybe with a good dose of entitlement, and idealism.  [04:00]
<youlysse`> The same, alot worse, or just alittle better. :-l
<youlysse`> anxt: So practically the same as mine then?
<anxt> thats my prediction  [04:01]
<anxt> parents will blame modern music, kids will dress funny as part of
       individuation.
<youlysse`> The kids going into the freshmen class when I was leaving HS, did
	    seem pretty bad though... Not just "they're grow out of it" bad
	    either.
<anxt> maybe with a big absent father wound in their hearts  [04:02]
<nicferrier> rudybot: quote  [04:04]
<rudybot> nicferrier: Gnome needs taken out back and shot.
<rryoumaa> agreed
<rryoumaa> well, i'm ok with everybody else using it
<youlysse`> LEAVE GNOME ALONE, LEAVE HER ALONE!!!111!! ;_;  [04:05]
<nicferrier> gnome??  [04:06]
<fsbot> Cannot predict now
<youlysse`> rryoumaa: That's pretty much how I feel, at this point. Hell I've
	    even reccomended and will likely continue to in the future. 
<nicferrier> cannot??
<fsbot> No
<DucBlangis> Who's GNOME? Or are ou talking about the windows manager
<youlysse`> DucBlangis: The DE.
<DucBlangis> or yea the desktop environment
*** pirateking_ (~piratekin@c-67-169-182-169.hsd1.ca.comcast.net) is now known
    as pirateking-_-
<DucBlangis> I like Gnome
<DucBlangis> I don't think Gnome should be shot
<DucBlangis> KDE on the other hand  [04:07]
<DucBlangis> slice that one up good
<surrounder> *shrug*
<bpalmer> sounds like you don't think KDE should be shot, either.
<surrounder> choice is good
<ijp> rudybot: should we shot XFCE too?
<rudybot> ijp: ivan-kan`: I remember switching from the default manager to xfce
	  and no compiz because it was getting too wonky.
<DucBlangis> KDE shouldn't be shot, just re-arranged  [04:08]
<DucBlangis> or something
<parmegv> so nobody uses CEDET? and how can I create a project quickly and
	  easily?
<bpalmer> rudybot: are you prepared for a global vt220 shortage?
<rudybot> bpalmer: did you hear about the water shortage in Marin Co. (calif)?
*** mahmoudi_ (~mahmoudim@173-164-253-217-SFBA.hfc.comcastbusiness.net) is now
    known as mahmoudimus
<tali713> youlysse`: you had a cell phone before you were an adult??  why didn't
	  your parents just tie a leash around your neck?  [04:09]
<rryoumaa> what is wrong with kde, other than bloat and bugs?  kde doesn't have
	   an oppressive ideology attached to it.  gnome does.
* ijp rolls eyes
<ghast> how is gnome oppressive?
<tali713> gnomes are fascists.  you heard it here first.
<ijp> take it to #ideologies  [04:10]
<tali713> lol
<DucBlangis> Gnome has an oppressive ideology? 
<DucBlangis> whaaa
<rryoumaa> the old gnome was good
<youlysse`> DucBlangis: I don't think any-one in here has serious "hate" and/or
	    ill-feelings towards any DE, it's just that many won't use
	    them. Like I think I told you (?), I used to use GNOME3 for about a
	    year, and I think it's great, but EMACS ruined it as my prefred
	    enviroment.
<DucBlangis> I see
<youlysse`> rryoumaa: GNOME 1.0?
<DucBlangis> I prefer openbox   [04:11]
<ijp> rudybot: all change is bad
<rudybot> ijp: it is gob-smackingly painful to have to part from all silenced
	  channels just to change a nick
<DucBlangis> but as you know I just started playing with EMACs today
<ghast> i used gnome when i had ubuntu hardy
<DucBlangis> so we will see where I am in a year
<ghast> now fluxbox.
<DucBlangis> flux is nice too
<rryoumaa> rudybot: 1st world problems i guess
<rudybot> rryoumaa: No scheme-related april 1st joke this year?
<ijp> rudybot: scheme is the april 1st joke
<rudybot> ijp: hmmm... levy is coming out with a new book on google in april: in
	  the 'plex
* youlysse` has garnered a dis-taste from many things, namely stacking
  window-managers of all types.
<ijp> one window on screen at a time ought to be enough for anybody  [04:12]
<rryoumaa> agreed
<bpalmer> ijp: so you're saying everybody should have lots of screens?
<youlysse`> ijp: All change when you are comfrtable and efficent is arguabally
	    bad. :-P
<youlysse`> ijp: XD
<rryoumaa> youlysse`: you just explained history and politics  [04:13]
<ijp> bpalmer: sure, why not
* youlysse` bows.
<billyoc> emacs looks the same no matter what wm.
<youlysse`> billyoc: Even if you use no wm. ;-)  [04:14]
<rryoumaa> i only ever run everything full screen except rare cases, or maybe
	   gkrellm.  so what wm is best for that?
<ijp> billyoc: I see you haven't got a hang of this holy war thing
<rryoumaa> ,give billyoc a hang
* fsbot gives billyoc a hang
<youlysse`> rryoumaa: Tiling.
<ijp> That's okay, there's a first time for everyone. First, look for someone
      with a different DE, and call them a cunt
<bpalmer> well, not here.
<ijp> tiling window managers are a cult  [04:15]
<rryoumaa> what's the hamming distance there?  [04:16]
<taylanub> i use a tiler but i don't remember the last time i used
	   non-fullscreen windows
<youlysse`> rryoumaa: If you know, or want to learn clisp, stumpwm seems to be
	    the most "emacs-like", but ratpoison, xmonad, etc, etc are all
	    good. "Dynamic" WMs like dwm are also a nice compromise though.
*** jcubic` (~user@aepe224.neoplus.adsl.tpnet.pl) is now known as jcubic
<taylanub> ITYM common-lisp or CL, since clisp is a CL implementation
<forcer> I wonder why "coli" hasn't caught on as an abbreviation <.<  [04:17]
<youlysse`> ijp: Are cult's always bad? :-P
<rryoumaa> i know cl but don't feel the need to program a wm.  sawfish was
	   plenty configurable without using rep, as is kde without using
	   whatever it uses.
<ijp> youlysse`: by definition
<ghast> is rep a subset of CL?
<rryoumaa> cult's what?  [04:18]
<ijp> a "good" cult is called a religion
<ijp> ghast: no
<rryoumaa> ghast: no
<ghast> ok
<rryoumaa> just another special-purpose lisp dialect
<ghast> i see
<youlysse`> ijp: I was going to ask what you define EMACS and it's community
	    ... and I can agree with that.
<ghast> the Church Of Emacs (TM)
<fsmunoz> FWIW I use wmii, using emacs lisp to script it  [04:19]
<rryoumaa> uppercasing emacs makes it sound like it was written in the 1950s
<anxt> im a stumpwm guy myself
<anxt> i was gonna try gnome3 
<ghast> stumpwm still actively maintained?
<rryoumaa> fsmunoz: how?
<anxt> ghast: yes.
<ghast> i didn't see much activity last time i checked.
<youlysse`> ghast: Yeah, they just have a slow release cycle, from what I've
	    seen/heard.  [04:20]
<anxt> ghast: at least somewhat, usually a post on the mailing list once a week
       or so
<ghast> i see
<anxt> ghast: a git pull hasnt changed in a few months i think, it mostly just
       works
<ghast> is it good? i never tried it seriously  [04:21]
<youlysse`> ghast: + It's a tiling wm, with most of the customization that's
	    meant for the user to configure, there's not *much* to change from
	    it. (ie: I think they already reached there goal).
<fsmunoz> rryoumaa: https://github.com/fsmunoz/wmii-el
<anxt> ghast: i like it, but i dont know if you would.
<ghast> i used awesome wm once, it was ok
<youlysse`> ghast: I think so. If you don't live in emacs, but wish you could, I
	    think you'd like it.
<anxt> xmonad would probably be the tiling wm for people to try or i3  [04:22]
<youlysse`> ghast: AwesomeWM is *WAY* to hyped, imo ...
<ghast> haha i use emacs often
<forcer> I found that using quicktile and wmctrl, I can emulate most of what I
	 want from a tiling window manager in others, without the annoyances I
	 had.
<fsmunoz> rryoumaa: my private version is miuch changed though, must update
	  it. Essentially wmii is scriptable in anything since it is based on
	  writing and reading a (virtual) filesystem. I merely wrapped the
	  primitives in elispm and from there I just script everything in
	  emacs. 
<forcer> But WMs are so much a matter of taste...
<ghast> i quit using awesome after some update botched the lua config or sth
	... don't remember
<ghast> then i switched to fluxbox ... it's ok
<fsmunoz> This allows me, for example, to send rcirc output to the status bar,
	  have emacs process the buttons, etc.
<ghast> there is another CL WM out there ... don't remember the name
<anxt> mostly my wm i use to raise windows and switch, i hardly ever use the
       mouse.  [04:23]
<surrounder> forcer: nice, didn't know about those 2 yet - seem interesting
<taylanub> ghast: sawfish ?
<ghast> no, it is CL
<fsmunoz> Eclipse
<ghast> http://common-lisp.net/project/clfswm/
<ghast> that one
<billyoc> I like GNOME and KDE, I just don't have much use for either.
<forcer> surrounder: I wish quicktile was a bit easier to configure, but other
	 than that, it works surprisingly well.  [04:24]
<taylanub> oh, sawfish isn't in a real lisp ..
<ghast> isn't rep a lisp?
<fsmunoz> librep
<billyoc> scheme, isn't it?
<billyoc> oh, right.
<ijp> it's a bastard quasi-scheme/elisp
<fsmunoz> No, it's sort of like Emacs Lisp actually
<bipt> rep is basically a lisp-1 elisp, iirc
<forcer> There is no "real lisp"
<turbofail> with tail recursion
<fsmunoz> not bad at all, I used swafish and programming it whan nice.
<scottj> is the original lisp a real lisp?
<forcer> Hence, "oh, X isn't in a real lisp" is universally true <.<
<fsmunoz> I still use it sometimes  [04:25]
<bipt> actually it wouldn't be too hard to port rep to guile, i think
<turbofail> librep is a weird one
<taylanub> is there anything aside from sexps that makes a language a lisp,
	   nowadays ?
<ijp> macros
<turbofail> i played with librep a bit a while ago
<ghast> i am tempted to try sawfish some day ...
<fsmunoz> qbasic is an acceptable lisp
<taylanub> well, sexps bring those, don't they ijp ?
<ijp> ,shoot fsmunoz 
* fsbot loads its nailgun and crucifies fsmunoz.
<bipt> given that there is already a guile elisp compiler and, according to
       unknown_lamer IIRC, librep basically uses a variant of the old guile GH
       api
<ijp> taylanub: er, no?
<ghast> ,shoot fsbot
* fsbot loads its axiom of choice and reassembles fsbot into two identical
  copies.
<anxt> they had sawfish at the uni years ago, i think it was called sawmill then
       or something
<ijp> ,botsnack
* fsbot beams
<fsmunoz> anxt: yes it was
<taylanub> ijp: i mean .. who would make their language be written in sexps and
	   not implement macros ?  :P
<anxt> or fishmill
<fsmunoz> anxt: and it was the default GNOME WM, prior to metacity  [04:26]
<ijp> taylanub: I can point you to a lot of "schemes" that do that
<anxt> it looked rather cool, actually
<ijp> basically, lazy fucks
<ghast> wat about E17? is it good?
<anxt> fsmunoz: yeah, i remember that
<ghast> *what
<taylanub> ijp: hahaha, ok, fair enough
<taylanub> sexps with macros .. anything else ?
<anxt> knead moar gl effects and compositing
<ghast> sexps with girlps
<fsmunoz> With CDE being released it's all over now for all this stuff. dwm FTW
<billyoc> e17 is good, macpup does cool things with it.
<turbofail> taylanub: the rest is all in the attitude
<ijp> taylanub: first class functions are also a must, but basically every sane
      language does that these days  [04:27]
<billyoc> Oh, yeah, CDE !
<youlysse`> anxt: Then you might not want to use GNOME3, it's fairly balenced
	    between the mouse&keyboard, unless you go into realizung this (or
	    atleast remaping alot(really I don't think the defaults are ho bad
	    though)). Though I do think there's an emacs-key-binding-esquse-mode
	    in "tweak-tool", also, so there's that too.
<ijp> ,shoot ghast
* fsbot loads its git and merge --squashes ghast.
<ghast> xD
<ijp> hell, even most modern insane languages have first class functions
<anxt> youlysse`: i would probably fucking abhor gnome3, but i havent tried ti
       to hate on it yet
<turbofail> being too cool to write useful code is also a must
<taylanub> right, all sane modern high-level languages have functions as data
	   and lexical scoping nowadays.  i find it hilarious that PHP fails at
	   this
<ijp> taylanub: PHP has first class functions  [04:28]
<turbofail> PHP has some sort of weird form of closures
<ijp> taylanub: and most scripting languages fuck up scoping
<turbofail> there's even a lisp that compiles to it
<anxt> php fails at life
<taylanub> i was referring to lexical scoping
<ijp> it's kind of a rite of passage to fuck up lexical scoping in a scripting
      language
<taylanub> PHP doesn't even try to have it :P
<youlysse`> anxt: If you do hate on it, please don't be the guy that's "it's
	    diffrent from gnome2 ...!!11 :-( Hur Dur".   [04:29]
<ijp> taylanub: it gets that from its perl heritage
<taylanub> hrm, when did Perl get lexical scoping ?
<rryoumaa> are there tiling wm that can use the mouse?
<anxt> youlysse`: gnome2 is OK, just not my thing, i am not really wanting the
       whole DE thing
<anxt> rryoumaa: xmonad, i3 at least
<rryoumaa> i don't even get the point of a de really  [04:30]
<rryoumaa> do i have to know haskell?
<anxt> taylanub: i think perl has always had it, at least for a very very long
       time
<turbofail> l2monad
<bigjust> rryoumaa: not really
<anxt> rryoumaa: i dont know really, i dont think so
<bigjust> the config wiki is quite good, i don't know any, but was able to
	  reasonably config it
<rryoumaa> if i have to learn a new language, it will be haskell, but i have no
	   desire to do so now
<taylanub> anxt: what was ijp referring to then ?
<forcer> ,monad  [04:31]
* fsbot starts gibbering incomprehensibly
<anxt> taylanub: dunno
<anxt> taylanub: maybe perl is a real language, not a scripting language ? ;)
<ijp> perl hasn't always been lexically scoped, at least IIRC
<ijp> but meh, I have never gave two fucks about perl  [04:32]
<taylanub> (was there a way to construct that sentence in a way that would've
	   more poked ijp instead of anxt ?)
<taylanub> let's all talk in Lojban
<ijp> lol, no
<rryoumaa> i reject lojban because it is difficult to pronounce
<jtg> so is your nick though
<xorg62>  
<ijp> taylanub: no-one interesting speaks lojban
<jlf> jtg: it helps to think of a dog howling at the moon  [04:33]
<jlf> ,...
<rudybot> Woof.
<fsbot> [In the distance, you hear a dog bark]
<anxt> how about aolbonics?
<youlysse`> anxt: No, I know. Perfectly understandable, infact I feel the exact
	    same way! I'm just saying from my experience, most people who *hate*
	    GNOME3, hate it because it's not GNOME2, if you get what I mean?
	    It's fine if one has legitamate issuses with-it (which I believe
	    there are)e
<taylanub> ijp: let me change that  *puts on sunglasses and smacks open a lojban
	   dictionary*
<youlysse`> *.
<rryoumaa> i hate the "jb" sound
<rryoumaa> there should be a vowel there
<anxt> how do you say tits in lojban?
<jtg> i hate the "maa" sound
<ijp> let's only use vowels
* rryoumaa acknowledges that jtg is getting personal  [04:34]
<ijp> ,shoot anxt
* fsbot loads its WD40 and lubricates anxt.
<turbofail> huh
* ijp tries desperately to unsee
<anxt> ohh, yeah
<anxt> hey, fsbot, you missed a spot...
<taylanub> there is no English/Lojban dictionary ? :/  [04:35]
<parmegv> I think I will do something I have read somewhere: create some
	  basic-per-language git repos and clone them
<youlysse`> **Not big issuses mind you, nor will I use it long-term anymore, but
	    some that "damper the experince". I still think people cry and flame
	    GNOME3 much more than it deserves though. :-/
<JordiGH> parmegv: git?
<parmegv> JordiGH: yes, it's quicker than bzr
<JordiGH> So is /dev/null.  [04:36]
<anxt> JordiGH: why not write your data there then?
<forcer> With shell extensions, gnome3 is pretty usable
<ijp> /dev/null doesn't support branching
<anxt> *rimshot*
<JordiGH> ijp: Now you're just changing the spec.
<youlysse`> parmegv: That's a feat... @_@
<youlysse`> forcer: Surprisingly so. While they should release an offical api
	    though. Meh, maybe with "GNOME OS".   [04:37]
<legumbre> JordiGH: ooc, are you still working on the magit for hg extension?
<JordiGH> legumbre: I need a smaller elisp project.  [04:38]
<JordiGH> legumbre: I can't make a dent into magit.
<legumbre> JordiGH: nod
<anxt> JordiGH: implement figlet in elisp?  [04:39]
<forcer> youlysse`: The documentation is abysmal, yep. I utterly failed writing
	 an extension (though I gave up after half a day or so already).
<JordiGH> anxt: Ah, that's an idea.
<JordiGH> I can't put a dent on magit.
<JordiGH> "make a dent into.." wtf
<JordiGH> ,dent
* fsbot dents some random geek crap.
<rryoumaa> put a dent in, make a dent in  [04:40]
<anxt>        _ _   
<anxt>   __ _(_) |_ 
<anxt>  / _` | |  _|
<anxt>  \__, |_|\__|
<anxt>  |___/       
<ghast> nice
<youlysse`> forcer: That's why I'm really hoping "GNOME OS" works, and  really
	    improves the qualtity controls of the whole platform,  [04:48]
*** dooglus_ (~biufter@rincevent.net) is now known as Guest12748
*** marw (~marw@77.222.1.164) is now known as Guest77168
*** klutometis (~klutometi@klutometis.wikitex.org) is now known as Guest3838
*** dan64 (dan64@2600:3c03::f03c:91ff:fedf:7dc0) is now known as Guest14436
*** offbyone (u910@gateway/web/irccloud.com/x-aryzmuzfcqwyawce) is now known as
    Guest33807  [04:49]
*** BlastHardcheese (chris@pool-108-38-205-87.lsanca.dsl-w.verizon.net) is now
    known as Guest78395
<anxt> i use to love my figlet, colour and chuck norris scripts for annoying on
       dalnet
<parmegv> in #emacs-es a13x15 is suggesting 2 interesting tools, cheetah and
	  paster, which he uses for Python projects
<anxt> rainbow text
<youlysse`> *Not to say it's unredeemibley bad now, just that it could do/be
	    alot better.
<youlysse`> ** They're strained pretty thin as-it-is at the moment though,
	    afaik.
<forcer> I didn't like Cheetah's syntax. There are nicer ones out there.
<parmegv> forcer: some examples?
<forcer> parmegv: Tempita for a small one, Jinja2 for a larger one. Django's
	 template language has a nicer syntax (though I found it a bit annoying
	 to use at times because of the semantics).   [04:50]
*** Guest78395 (chris@pdpc/supporter/active/blasthardcheese) is now known as
    BlastHardcheese
<parmegv> right now, I cannot see the whole utility from that templates
	  generators, I have to understand well paster
<parmegv> forcer: do you know alternatives to paster suitable for c++, c or
	  java?
<forcer> parmegv: I have no idea what paster is.
<forcer> I also do not regularly use c++, c or java, so even without knowing
	 paster, I suppose the chances are slim.
<parmegv> slim is for lisp, isn't it?
<parmegv> from a13x15: paster uses templates to generate projects, based on some
	  questions  [04:51]
<forcer> No clue what I'd use that for.
<parmegv> just to create a new project
<forcer> I have to admit I use mkdir and git init for that.
<jlf> hmm, shouldn't move-end-of-line begin `(defun move-end-of-line (&optional
      arg)' instead of `(defun move-end-of-line (arg)' ?  it currently barfs
      when called as (move-end-of-line)
<forcer> Or, for a more elaborate definition of "project", Emacs and org-mode.
<parmegv> forcer: of course, me too, but I want some skeleton and autogeneration
	  of Makefiles and things like that  [04:52]
<forcer> jlf: There are some functions that, for some reason I never understood,
	 do not make their arguments optional. But the official way to move to
	 the end of line in lisp programs is to use (end-of-line).
<forcer> parmegv: I do not know of any tool to do that. If paster works for
	 that, sounds like that's what you want.  [04:53]
<parmegv> forcer: ede does it, but it's not as straightforward as I'd want
<jlf> forcer: i see nothing in the documentation to that effect  [04:54]
*** DucBlangis (~chatzilla@24-117-207-111.cpe.cableone.net) is now known as
    Scatman`
<forcer> jlf: Yeah, well.
<jlf> can't argue with that :)   [04:55]
<forcer> jlf: `move-end-of-line' interacts with what is "currently displayed"
	 and stuff.
<forcer> It's *usually* (not always) not exactly what you want in a program I
	 suppose.
<parmegv> talking about templates: I did not know about yasnippet!! it's great!
									  [04:57]
*** Scatman` (~chatzilla@24-117-207-111.cpe.cableone.net) is now known as
    DucBlangis  [05:01]
<Buglouse> Matching a newline in regex is [[:blank:]]+ ?  [05:02]
<damd|> Buglouse: to match a newline, use \n  [05:03]
<Buglouse> yep ;)
*** dubz_ (~d0ng@ec2-23-23-243-24.compute-1.amazonaws.com) is now known as dubz
<a13x15> anybody using Template? I have an issue with ido + Template  [05:05]
<johnsu01> anyone know offhand how I force epg to reload its keyring?  [05:38]
<johnsu01> apparently it has it cached or something, because it's not seeing a
	   public key that is on disk
<ijp> real world haskell is a much thicker book than I expected  [05:39]
<turbofail> lol
<ijp> I was thinking maybe a pamphlet, or a4 piece of paper  [05:40]
<bpalmer> I  like it, but I think I liked the the learn you a haskell for great
	  good book  more  [05:41]
* Buglouse <3 reading code; is both dependent on and highly enjoys doing it
									  [05:43]
<anxt> salutations, mr. johnw  [05:52]
* youlysses wishes it was trivial to replace laptop-hardrives ... :-/
<Frozenlock> Someone gave me a ppk file and asked me to connect with putty...
	     Yet I suppose this is possible with Emacs, right?  [05:53]
<Buglouse> youlysses: flash; carry a few around with a kernel and package
	   manager, keep all files in repos, lose a flash just boot another and
	   retrieve tip  [05:54]
<anxt> youlysses: what happened to your harddrive?  [05:55]
<anxt> youlysses: it takes about 5 minutes on my hp.  [05:56]
<youlysses> Buglouse: I can squeeze most of my stuff on the drive, but a 160gb
	    limit, with a-bunch of music is more than a pain to deal
	    with. Atleast it looks like it'll force me to clean up the structure
	    of my home-folder. :-P
<Buglouse> you have a portable environment capable of booting on any x86/64 and
	   your dot files always .. *exciting*
<anxt> youlysses: maybe you need to keep your music in icloud
<Buglouse> youlysses: I have a repo which I store some video files I'm
	   interested in (lectures/docus), but most video is hosted else where
	   and as long as I have 3G I'm able to view it without much wait. Also
	   Libre|Last.fm keeps my music fo me  [05:57]
<Buglouse> /3G/3G local storage, mostly ram,/  [05:58]
<youlysses> anxt: My newer-budget-system finnally died (only 2 years old). It
	    had a 240gb disk, which was more than enough. But I switched to my
	    old (actually my first personal system), and it's been a pain ...
<anxt> yeah ~anxt is like 160 gb
<Buglouse> I used to have +2T, but for the last 1 1/2yr I have lived off 2G RAM
	   and 5G Flash :D
<anxt> Buglouse: other than downloaded video, or some music, i probably could
       get by with 30 gig  [05:59]
* Buglouse once you kik the video habit, all you have are papers (which are a
  tiny size)
<Buglouse> I can go months on 300M  [06:00]
<youlysses> Buglouse: I've been thinking of setting my home-sever for a backup
	    of everything, that I can also have stream to me. But If I'm on a
	    laptop, I want a copy locally. I hate the idea of living fully in
	    the "cloud"... :-l
<youlysses> I also wanted to start taking notes in emacs this semester, but the
	    20 minute battery life (admitidley better than the ~6 I got, right
	    before my other system's death), just won't cut-it.   [06:02]
<Buglouse> youlysses: Well if you have time and resources, fine. I recommend
	   using a free off site solution. I do not live in any cloud, I have my
	   files encrypted on a remote server (of which I do not own) which
	   allows me to have a overhead of null; very practical and convenient
									  [06:03]
<youlysses> Buglouse: Due to my current situation, I'll likely end-up just
	    having all my media on the remote sever, while all my personal
	    and/or documents/hacks are here locally. :-P  [06:05]
*** Obfuscate` (~keii@unaffiliated/obfuscate) is now known as Obfuscate  [06:07]
<anxt> jump drives are inexpensive  [06:08]
<anxt> isnt it like 20$ or something for a 64 gig
<Buglouse> Then ensure reliability through redundancy. The phrase 'Sector
	   Inaccessible|Corrupted Block' do not phase my personal station, 'ne
	   more.
<Buglouse> anxt: Flash are inexpensive, want more advanced tech, SSD, then
	   almost ..  [06:09]
<Buglouse> Actually, redact the last^2; inapplicable to flash? .. /me *blinks*
									  [06:10]
<tech1> is there a better way to widen a window(if you have 2 split
	columns)..... i can do it with: C-x } .... but that only widens it like
	one pixel a time -having to repress C-x } for each pixel  [06:17]
<subversus> C-u !
<youlysses> tech1: Windresize and windsize are nice.  [06:18]
<Buglouse> repeatable.el
<tali713> tech1: you could use a numeric prefix of course.  [06:19]
<tech1> thanks youlysses ill look into it
<tech1> a numeric prefix how
<tali713> the same way you do for every other command that takes a numeric
	  prefix, C-u <number>  [06:20]
<tech1> iv never used it before
<tech1> i tried C-x C-u .. but then some help screen came up
<tali713> well, yeah, /prefix/  [06:21]
<tech1> do i do the C-u number before C-x
<tali713> yes.
<tech1> thanks
<Frozenlock> Is there a way to use a putty ppk file to connect with Emacs?
<tali713> tech1: you may also be able to use M-<num> or C-<num>
<tali713> tech1: or note that (C-u)*n is 4^n  [06:23]
<tech1> cool thanks
<tech1> it works better now
<tali713> so C-u C-u C-x } is (roughly) the same as C-u 16 C-x }
<tech1> oh i see  [06:24]
<tali713> you can also use this for rough jumps in a buffer C-u C-u C-u C-p to
	  jump by 64 lines
<tali713> I use this for resizing splits, most often though, since rough numbers
	  are usually close enough.  [06:25]
<tali713> splitting also takes a prefix argument for setting the size of the
	  split, if you like.
<tech1> something like C-u 30 C-x 3  [06:28]
<tali713> yup
<tech1> cool
<tali713> or C-3 0 C-x 3 if you are in X
<anxt> 8 C-u 17 = D
<Buglouse> Interesting .. there is no "version" face defined.
<legumbre> god. bsd userland, there's no end to this suffering.  [06:29]
<anxt> hmm, i find BSD userland quite acceptable  [06:30]
* youlysses REALLY needs to get more used-to resizing a window without the mouse
  and/or a "helper" like windresize. :-P
<anxt> youlysses: are you tiling now, dog?
<legumbre> youlysses: which wm?
<youlysses> anxt: Am I using a tiling wm, or?  [06:31]
<anxt> C-t r (C-f | C-b) for me
<anxt> youlysses: correct, are you resizing in a tiling wm
<youlysses> legumbre: "None". 
<tali713> legumbre: you are the second person I have heard complain about that
	  this week.
<tech1> is there a way to split 2 windows?  say if you have 2 rows but want to
	make another column... with C-x 3, it will only split one of the rows
									  [06:32]
<anxt> blasted BSD userland
<legumbre> tali713: this time it's sed not accepting -r
<anxt> why does the shell not tab compleet
<tali713> tech1: non trivial.  imagine the windows as living in a tree.
<anxt> legumbre: there are 100 sed
<youlysses> anxt: Did they fully convert off of gnu and/or gpl based tools?
<legumbre> but there's a huge list of grievances
<anxt> legumbre: did you try gsed?
<anxt> youlysses: not until they have a binutils lol  [06:33]
<legumbre> anxt: nope.
<anxt> or sed -e
<legumbre> sed -e won't do + in [0-9]+  [06:34]
<anxt> perl
<anxt> i havent bothered with sed for quite a while
<legumbre> meh, I'm going for a walk. This is just frustrating.
<anxt> have a good walk.
<youlysses> tech1: I don't think it's implemented by default, though I'd think
	    it'd be fairly trival to-do? :-P  [06:35]
<ijp> legumbre: yeah, it's a good thing each unix tool reimplements regexes in
      an imcompatibvle manner
<jlf> more like irregexes amirite???  [06:36]
<fsbot> Yes
<anxt> the best thing about standards is there are so many to choose from
<tech1> tali713 im trying to imagine them in a tree.....but still cant see
	it............. well yeh i could delete one row, split a column, then go
	back and add the other row... but thats long plus id have to reopen
	files
<youlysses> anxt: Cue appropriate xkcd strip.
<anxt> youlysses: oh, thats pre xkcd, i think that is unix-haters  [06:37]
<anxt> youlysses: may even be pre unix-haters
<tali713> tech1: when you split you split the current window, not its parent, so
	  obviously it splits the current window not adds another column.
<youlysses> anxt: That's pre-me. :-)
<anxt> youlysses: you REALLY need to read "the unix haters handbook"
<anxt> in fact all of #emacs does
<youlysses> anxt: I've asked about it, I think a week-or-so back. It's on my
	    list. That "good" though?  [06:38]
<anxt> youlysses: absolutely, you will piss yourself laughing, i think  [06:39]
<anxt> "Using these toolkits is like trying to make a bookshelf out of mashed
       potatoes. "
<youlysses> XD
<ijp> much as I like the unix haters handbook, many of the issues have been
      fixed  [06:40]
<youlysses> ijp: Request a revision?
<ijp> youlysses: request a revision to a 20 year old book? nah.  [06:41]
<anxt> you could fork a gpl one
<youlysses> UNIX Haters Hanbook 2: Still hatin. Coming to direct-to-disk
	    store-shelves, never.
<youlysses> anxt: There's gpl (or assumigly gfdl) versions?  [06:42]
<youlysses> *assumingly
<Buglouse> I have a vc-*-root-log-format defined, but the expression does not
	   match the fifth listing, http://slexy.org/view/s2rVUFasKx; also,
	   anyone know how to make the brackets around '[{tags}]' conditional to
	   the value of {tags}, hg does not support template conditionals so the
	   only possibility would be through lisp.
<anxt> youlysses: i have no idea.  the freetards werent breeding yet
<anxt> youlysses: back then you just xeroxed shit and passed it around  [06:43]
<cluck> :)
<tali713> tech1: so if you want to split the root window as opposed to a given
	  leaf, then you need to specify that.  reading C-h f split-window RET
	  should make this all clear, as well as a quick perusal of (info
	  "(elisp) Splitting Windows").
<tali713> tech1: the specific form for doing this would be, e.g. (split-window
	  (frame-root-window) nil t)
<anxt> back when it was OK to smoke with your children in the car.
<anxt> when all beers were pry top  [06:44]
<ijp> anxt: gpl predates the unix haters handbook
<anxt> ijp: had anyone heard of it?
<ijp> I believe the unix haters handbook even mentions gnu
<youlysses> anxt: They've probally heard of emacs... ?
<DucBlangis> There is a Unix Haters handbook?  [06:45]
<DucBlangis> That's great
<anxt> DucBlangis: you GOTTA read it
<anxt> i should have a reread, its been years
<tali713> it's really dated, but it still has some good points.
<tali713> it should go without saying that they were not comparing against
	  something barbaric, like windows or MS-DOS  [06:46]
<tech1> thanks tali713 ill read those help bits
<DucBlangis> I'm definitely putting that down on my must read list
<tali713> tech1: yeah, hopefully you are comfortable with elisp if you want to
	  do stuff like that.
<DucBlangis> along with Steven Levy's Hackers  [06:47]
<DucBlangis> which I just ordered
<tech1> elisp is how i configure my ~/.emacs file i think
<billyoc> nfs:  nightmare file system
<tali713> when I say it's date, I mean, most of the better systems it refers to
	  are dead or mostly retired.
<tali713> s/date/dated/  [06:48]
* legumbre emphatically recommends Digital Apollo once again
<billyoc> legumbre++
<ijp> anxt: 9 references to GNU in the unix haters handbook, not counting the
      index  [06:49]
<anxt> legumbre: david lindell?
<anxt> legumbre: mindell?  [06:50]
<billyoc> Mindell
<legumbre> anxt: yeah
<anxt> ijp: thar she blows.  /me is corrected.
<youlysses> ijp: In what kind-of role (good or bad (by the name, I assume
	    bad...)?
<Frozenlock> Ok I've converted my key to a .ssh one. However when I do `cd
	     /ssh:login@remote-machine:~' in eshell, it doesn't seem to check my
	     key. Is there a way to point it to the .ssh file?
<youlysses> *))
<ijp> youlysses: neither. It was all references to software like GNU emacs, GCC,
      GNU Termcap, &c.  [06:51]
<legumbre> add a Host remote-machine entry in ~/.ssh/config, tell it
	   IdentityFile fookey
<Frozenlock> Hm.. I don't think I have such a file.. I have `known-hosts'. Could
	     you give me an example of how it's formatted?  [06:52]
<legumbre>
	   http://www.cyberciti.biz/faq/force-ssh-client-to-use-given-private-key-identity-file/
									  [06:53]
<rudybot> http://tinyurl.com/5t6r8xg
<Frozenlock> Thank you very much!  [06:54]
<youlysses> ijp: Oh ok. 
<ijp> 0 references to linux though
<billyoc> Well, it was '94.
<legumbre> what about Hurd?  [06:55]
<ijp> none either
* youlysses doesn't get the thought process of why dired opens new buffers for
  each directory he visits.
<ijp> youlysses: press 'i' to open instead of RET
<billyoc> damn, i never knew that.  I just open the new buffers.  lol  [06:56]
<youlysses> ijp: You must be a wizard... because what is this magic?! Thanks!
	    What's I stand-for then?
<ijp> rudybot: wizard, or guy who wondered the same thing way back when. You
      decide?
<rudybot> ijp: Oh I like that, baby.  I put on my robe and wizard hat.  --
	  http://bash.org/?quote=104383
<ijp> ,shoot rudybot
* fsbot loads its Mitsubishi A6M Zero and breaks divine wind on rudybot.
<youlysses> rudybot, you so crazy...  [06:57]
<rudybot> youlysses: This is my first foray into functional languages.  Coming
	  from a C/C++ background, I must admit this paradigm seems a bit crazy.
<youlysses> XD
<ijp> rudybot: my view was different, it was more "where have you been all my
      life"  [06:58]
<rudybot> ijp: In my naive view, I feel the single most important feature to
	  include would be a standard way to seamlessly extending the language.
<youlysses> ijp: (Imo) What's one of the coolest, yet daughting things about
	    emacs is you're never done learning it. I haven't nor will probally
	    even start making a dent for another 2+ years.  [06:59]
<jlf> sigh, what text editor is available from a bone stock windows 7 cmd.exe?
<legumbre> edit?  [07:00]
<turbofail> edit.com?
<ijp> edlin, maybe?
<billyoc> jlf: edit.com still there?
<youlysses> ,edlin
<fsbot> try:  DrewsEmacsDiredLine RenamedLink RenamedLinks TrustedLinkLanguage
	VisitedLink
<turbofail> jinx
<jlf> nope
<billyoc> notepad, I guess.
<jlf> nore .exe
<BobuSumisu> names
<ijp> billyoc++
<jlf> s/nore/nor/ wtf brain
<jlf> it found notepad, ty
<billyoc> ah
<billyoc> Last micros~1 I saw was XP.  [07:01]
<youlysses> jlf: Doesn't Win7 have "powershell" or something close to the
	    unix-type of shell. I'd imagine there is some cli based editor, but
	    I'd be surprised if it's not brain-dead. :-P  [07:02]
<Frozenlock> legumbre: Yay! My first SSH experience! Thank you very much! \o/
<legumbre> jlf: thanks for making me feel better about working with bsd.
<legumbre> Frozenlock: \o/ yw
<ijp> rudybot: quote
<rudybot> ijp: Let's be automata.
<ijp> you already are
<legumbre> aren't we all?
<jlf> FFFUUUUUUU no grep  [07:03]
<ijp> legumbre: probably
<ijp> though biologists may be hiding something from us
<legumbre> I don't trust those biologists
* jlf is feeling stabby
<legumbre> sneaky bunch  [07:04]
<youlysses> jlf: Futurama refrence?
<jlf> no
<legumbre> Who do you want to stab today?™
<jlf> futurama were probably making a jlf reference  [07:05]
<ijp> matt groening is a well-known #emacs fan
<youlysses> jlf == Roberto?
<jlf> i like it how you can't resize cmd.exe windows horizontally  [07:06]
<youlysses> ijp: I wonder how many writers and/or non-hacker types use
	    EMACS. It's probally bigger than would think, but still can't be a
	    "large" percentage.
<youlysses> *than one would
<ijp> youlysses: maybe you just have low expectations  [07:07]
<youlysses> Probally. I've been called a cynic on several ocassions, though I
	    think people mix that up commonly with skeptic... :-/  [07:08]
<Frozenlock> Any hint on how I can copy a local file to a remote machine with my
	     newly established ssh connection?  [07:10]
<youlysses> froggey: sftp?
<ijp> scp  [07:11]
<Frozenlock> I'll look into that. With some luck there will be a nice
	     transparent way to use it in eshell!
<youlysses> ,scp  [07:12]
<fsbot> I heard scpaste is http://p.hagelb.org
<legumbre> Frozenlock: just use cp in eshell
<youlysses> legumbre: Does that work via tramp, or some remote protocol, or
	    something?  [07:13]
<Frozenlock> Wait wait wait... excuse my ignorance while I check into these
	     things...
<legumbre> youlysses: istr it works over tramp
<jlf> i guess you could run a netcat session at both ends and setting up an
      ephemeral port forwarding rule
<jlf> s/setting/set/
<youlysses> ,istr
<fsbot> I think ISTR is I seem to recall :)
<legumbre> I might be wrong
* youlysses needs to get hip with that "internet-lingo" the kids are using these
  days...  [07:14]
<jlf> cat localfoo | nc localhost 6789  and  nc -l 6789 >remotefoo
<ijp> rudybot: quote
<rudybot> ijp: Let's talk about PERL using GNUS.
<ijp> no thanks
<daveo> cast no pearls before swine  [07:15]
<Frozenlock> This works very well! I was expecting something way harder!  [07:16]
<nicferrier> technomancy: just watched your swarm talk. interesting. been
	     thinking about getting people together to do some emacs work. I
	     might even try and do one remotely.  [07:18]
<technomancy> nicferrier: cool; yeah. I haven't tried the remote get-together
	      yet, but you could definitely make it work  [07:20]
<technomancy> audio's tricky; maybe a mumble server
<nicferrier> well, if it's only a few people, 5 or 6 I'm kind of a specialist at
	     that
<technomancy> skype has a larger install base, but even if you don't hate skype
	      it sucks that only the call instigator can bring people in
									  [07:21]
<insomniaSalt> the amazement never ceases: today, I found a way to start
	       emacs-server via remote ssh without any kind of xforwarding or
	       vnc by using xte from xautomation  [07:22]
<ijp> ,praise
<fsbot> 22:46  Never have  We sent  a single  project leader  or documentation
<fsbot> before  you with  whose wishes  Microsoft did  not tamper.   But EMACS
<fsbot> abrogates  the  interjections  of   Microsoft  and  confirms  His  own
	..[Type ,more]
<ijp> ,m
<fsbot> revelations.   EMACS is  wise and  all-knowing.  He  makes Microsoft's
<fsbot> interjections  a temptation  for those  whose hearts  are  diseased or
<fsbot> hardened -  this is why  the wrongdoers are  in open schism -  so that
	..[Type ,more]
<turbofail> jeez  [07:23]
<ijp> sigh, some of these are far too long
<nicferrier> clojure emacs - https://github.com/hraberg/deuce
<turbofail> that's a lot of praise
<nicferrier> ,deuce
<fsbot> nicferrier: Can you are more explicit? 
<nicferrier> ,deuce is emacs in clojure - https://github.com/hraberg/deuce
<fsbot> created.
<turbofail> i'm taking a vacation next week
<turbofail> i need to figure out where i'm going
<ijp> second star on the right, and straight on till morning  [07:24]
<daveo> far out! i mean, far far far out  [07:25]
<turbofail> i'm considering seattle
<daveo> heard they named the landing crater on Mars Bradburry
<insomniaSalt> come to Germany and have some bier and sauerkraut :-)
<technomancy> seattle is great this time of year  [07:26]
<turbofail> i think a plane ticket to germany bought a week in advance would set
	    me back quite a bit
<turbofail> less than a week actually
<technomancy> turbofail: actually it totally depends; sometimes buying late can
	      get you great prices if demand turns out lower than expected. just
	      gotta be flexible.
<turbofail> hm
<nicferrier> insomniaSalt: you're in germany? I'm hamburg right now.  [07:27]
<insomniaSalt> then you need to visit rgr
<insomniaSalt> he's got a pub in hamburg
<nicferrier> that'd be funny.
<youlysses> Oh how I hate mode-line clutter. Are any/all of the main parts of
	    the gui hard-coded? I still want to make a global top-bar to route
	    everything not specific to said mode to.  [07:28]
<ijp> let's flee the country
<Frozenlock> Now I want to connect to a swank instance I've started on the other
	     machine. `ssh -L4005:localhost:4005 <remote-ip>' "... - POSSIBLE
	     BREAK-IN ATTEMPT! Permission denied
	     (publickey,gssapi-with-mic). Connection to c9man03 closed." Did I
	     forget something?
<turbofail> if i go to seattle i'm probably going to take amtrak  [07:30]
<Frozenlo`> And of course I'm deconnected when I ask question...
<enzuru> it's how we maintain order in the people's republic of #emacs  [07:31]
<offby1> Why (in Emacs 24) does "delete-other-frames" only delete other frames
	 on the current terminal?  Back in the old days, it deleted _all_ other
	 frames, regardless of the terminal, which was convenient.  There
	 doesn't seem to be any way to do that now without dropping down to
	 elisp ...  [07:33]
<Frozenlo`> You mean elevating to elisp?  [07:34]
<youlysses> ,deuce  [07:35]
<fsbot> From memory, deuce is emacs in clojure -
	https://github.com/hraberg/deuce
<youlysses> I just saw this, is this guy creating another fork which uses
	    clojure as the scripting language, or just a better mode...?
									  [07:36]
<technomancy> turbofail: from portland, or CA?  [07:37]
<turbofail> CA
<technomancy> haven't done that in a while
<Buglouse> Validate my regex, http://slexy.org/view/s2wiLY8Vqq ?  [07:38]
<turbofail> i've never taken a train for any distance longer than 45 miles or so
									  [07:39]
<turbofail> actually that's not true i took a high speed rail line in taiwan
	    once
<technomancy> depends how much time you have on your hands I guess  [07:40]
<nicferrier> youlysses: it's emacs in clojure WITH elisp as well
<technomancy> and how much reading material
<turbofail> yeah, i'll have plenty of both i think  [07:41]
<bpalmer> offby1: dropping down to elisp? So low in the stack?  [07:43]
<nicferrier> I often drop down into elisp if I want to be really close to the
	     machine.  [07:49]
<legumbre> welcome to the machine
<nicferrier> sometimes elisp waves at the machine, from where it's standing.
									  [07:51]
<nicferrier> I like the firefox logo. I've got it started to do chat
	     testing... and it's nice. I hate the browser. but the logo is good.
									  [07:53]
<lcc> nicferrier: what browser do you use?  [07:55]
<nicferrier> lcc: chromium
<turbofail> i hate firefox but i still use it
<lcc> do you have nice keybindings set up?
<nicferrier> lcc: no.
<lcc> I only use firefox because I use pentadactyl.  [07:56]
<nicferrier> what's that?
<lcc> it's vim-like keybindings for firefox. 
<lcc> it's really fast that's why I use it.
<lcc> I would rather use emacs bindings though.  [07:57]
<nicferrier> there is an emacs bindings thing somewhere
<youlysses>  turbofail: Conkeror?
<lcc> I just need the ability to type a key to visit links by number, or search
      for them.
<lcc> and text boxes  [07:58]
<turbofail> youlysses: conkeror doesn't solve the parts of firefox that i hate
<youlysses> turbofail: Which is? :-P
<turbofail> those parts being slowness and memory consumption
<turbofail> granted i do have an assload of tabs open  [07:59]
<enzuru> i think uzbl is a pretty good browser
<nicferrier> I find chromium quite good at that
*** Guest3838 (~klutometi@pdpc/supporter/professional/klutometis) is now known
    as klutometis  [08:00]
<youlysses> Meh, really I never had problems before. :-P  Wait till
	    xwidgets-webkit goes stable?
<nicferrier> I wish browsers gave you more control over what was going on, for
	     example to turn off ani gifs, change the interval time on js polls,
	     that sort of thing
<turbofail> the main reason i still use firefox is for mozrepl, which is my
	    preferred method of hacking JS when i have to do it  [08:01]
* youlysses really needs to go-hard-core into elisp, because he wants to help
  xwidgets and also the webkit browser asap.
<insomniaSalt> nicferrier: hit escape to stop animated gifs  [08:02]
<nicferrier> I've been meaning to investigate swank-js
<nicferrier> insomniaSalt: sure. but sometimes you don't even know they are
	     there.
<youlysses> nicferrier: Yeah, I find that weird too. :-/
<Han> of course the /topic url is dead  [08:03]
<anxt> pimp ass, my employer wants to pay for a percentage of my uni courses
									  [08:04]
<insomniaSalt> nicferrier: then maybe about:config animation_mode?
<nicferrier> insomniaSalt: /me rolls eyes
<insomniaSalt> nicferrier: apologies :-/
<nicferrier> insomniaSalt: come on. that's not good enough. it needs to be a
	     proper control.  [08:05]
<technomancy> nicferrier: if it were conkeror; it'd be a couple lines to add M-x
	      toggle-animations which you could easily bind to something more
	      accessible  [08:10]
<nicferrier> I tried conkeror once. didn't like it.  [08:11]
<nicferrier> I might try and write something in C++ to wrap a webkit frame in a
	     way that emacs could deal with.  [08:12]
<nicferrier> I don't much care about embedding either.
<youlysses> nicferrier: What do you mean "in a way emacs could deal with it"?
									  [08:13]
<anxt> i find conkeror wonderful
<anxt> except effing fancy super menus on some sites
<anxt> make me reach for the mouse.  [08:14]
<nicferrier> youlysses:  either a full control interface through a socket or
	     same thing through stdin
<youlysses> anxt: I find conkeror functional, I woundn't call "wonderful". But
	    yeah, not bad.
<anxt> youlysses: wonderful compared to all the others, that is.
<youlysses> nicferrier: Do you not dig xwidgets, or am I mis-understanding you?
<nicferrier> I don't dig x-widgets  [08:15]
<technomancy> if by "wonderful" you mean, "manages to avoid filling me with
	      rage", then conkeror is the most wonderful browser I've ever used.
<youlysses> anxt: Yes, that's true. 
<nicferrier> maybe I will, they are totally amazing technically. It's just not
	     what I think I want.
<anxt> wonderful like the less i grab the mouse the happier i am, not to be
       elite, but more because it feels more fluid to me, and my wrist problems
       are 100% gone.
<tali713> puzzling out proper tail recursion for mutually recursive functions.
<nicferrier> tali713: nice.  [08:16]
<anxt> same reason i type dvorak really, i dunno if its faster but it sure feels
       more silky
<tali713> nicferrier: yeah, it's hurting my head, and I feel dirty for putting a
	  piece of the evaluation model in defun, but it is the simplest
	  strategy.
<anxt> technomancy: yeah, pretty much that.  [08:17]
<nicferrier> tali713: heh. it's totally worth it. would it just be easier in C?
<tali713> not really.
<nicferrier> k. it's really good you're doing it.
<tali713> yes, when the tecnique works transferring it to C makes sense, but
	  until it is gaurenteed to wrok that doesn't seem like a good idea.
									  [08:18]
<youlysses> nicferrier: I've been using it, via the webkit browser, and while it
	    needs *much* work I think it's pretty slick. Of-course I don't think
	    it should be used to embed other "full" apps, but I think it'll
	    provide an excelent framework to build other extensions on. Is there
	    anything specifically you have against it?
<nicferrier> I think I will make that "hipster elisp" page on the wiki.
<anxt> i need to learn this elisp thing.
<nicferrier> youlysses: I think a webbrowser is incompatible with an emacs frame
<youlysses> nicferrier: incompatible in what manner?  [08:19]
<anxt> i find the whole "lets shoehorn this into emacs" less necessary using a
       keyboard driven tiling wm.
<anxt> conkeror is just a keystroke away, as is thunderbird (which i mostly
       abhor as a mail client)
<nicferrier> anxt: I want to have emacs talk to everything and totally control
	     it, I don't need things in emacs frames tho
<insomniaSalt> +1 for hipster elisp a la (f5 'funct) instead of (g-s-k [f5]
	       'funct)
<anxt> nicferrier: that sounds reasonable.  [08:20]
<nicferrier> youlysses: well, I mostly window frames and I don't see how webkit
	     would be reasonable like that
<nicferrier> youlysses: and it's not necessary
<anxt> nicferrier: i can eval say (thunderbird) and it raises that window for
       me.
<technomancy> did someone have an erc libnotify thingy that worked without
	      shelling out?
<nicferrier> I want a simple browser that will do what it's told by emacs.
<Han> https://lists.gnu.org/archive/html/emacs-devel/2012-08/msg00503.html
<anxt> i only ever have one emacs frame.  [08:21]
*** Han (~han@unaffiliated/han) has set the topic for #emacs: "Emacs 24.2
    release candidate available
    https://lists.gnu.org/archive/html/emacs-devel/2012-08/msg00503.html | Emacs
    mugs at http://shop.fsf.org/ | http://emacswiki.org/EmacsChannelFaq |
    http://paste.lisp.org/ | No public logging! What happens in #emacs stays in
    #emacs | Sexism will not be tolerated. Yes, I'm looking at you."
<youlysses> nicferrier: Oh so in your specific-use-case you think it's useless?
	    I think I have more vested intrest, because I'm doing the whole "try
	    to live fully in emacs" thing going on. :-P  [08:22]
<nicferrier> insomniaSalt: we have packages, tail recursion, lexical
	     scope... it's a totally different language
<fsmunoz> technomancy: use dbus, that doesn't shell out ;)
<technomancy> fsmunoz: sure; I'm just wondering if someone's packaged that up as
	      an erc module
<nicferrier> youlysses: I like living in emacs... but I need a real webkit frame
	     because that's what users have.
<technomancy> erc-notify on marmalade was a pit of shell injection horrors
<technomancy> thankfully it's been removed by the benevolent nicferrier
<fsmunoz> Although I do not like dbus particularly. Or ConsoleKit. Or the myriad
	  of other stuff that is appanrely necessary to have 2013 as the year of
	  Linux on the desktop.  [08:23]
<nicferrier> urk. not yet. still haven't had time. I WILL DO THOUGH!
<technomancy> nicferrier: it's gone though?
<nicferrier> technomancy: has it? I don't remember removing it.
<technomancy> erp
<technomancy> nope
<technomancy> it's just that search is broken =(
<aidalgol> How did erc-notify have injection horrors?
<nicferrier> I am very lairy of fucking with the db. I do have regular backups
	     now.  [08:24]
<fsmunoz> What does erc-notify do?
<youlysses> nicferrier: Well you're a web-dev, atleast partly, right? I'm not
	    saying your-explained desired method would not be use-full, just
	    that it wouldn't be for me personally. I'm thinking we can both have
	    what we want at some-point, with intrests that will not conflict in
	    a negative manor.
<aidalgol> erc-notify comes with ERC
<aidalgol> technomancy: Are we talking about the same thing?
<insomniaSalt> nicferrier: I almost don't dare to ask if you know about mozrepl
<technomancy> fsmunoz, aidalgol: (shell-command (format "notify-send \"%s\"
	      mentioned you")) basically
<technomancy> aidalgol: sorry, erc-nick-notify
<fsmunoz> Right
<technomancy> http://marmalade-repo.org/packages/erc-nick-notify
<aidalgol> ah, that  [08:25]
<fsmunoz> I think I can easily convert my rcirc-dbus-notification to ERC
<nicferrier> youlysses: sure. I think the embed stuff is cool tech.
<technomancy> I guess the built-in erc-notify is completely different
* aidalgol has notify.el, but that (in the absence of dbus) invokes notify-send
  directly, not through shell-command.  [08:26]
<youlysses> nicferrier: That's another really cool thing I love about the EMACS
	    system and community, it makes it easy to experiment/adjust to one's
	    needs without stepping on anyone else's toes. :-)  [08:27]
<fsmunoz> technomancy: but doesn't xmonad allow a better way? I stopped using
	  notitications of that  kind when my wmii/emacs hybrid reached an
	  usable state, now it goes directly into a wmii status bar.
<nicferrier> ok. let's try dropping that package
<technomancy> fsmunoz: there are status bars that work with xmonad, but I don't
	      use any of them.
<technomancy> anything that would go in a status bar I have bound in xbindkeys
	      to hit notify-send  [08:28]
<nicferrier> technomancy: try it now
<technomancy> fsmunoz: I don't want them using screen space when they're not
	      needed
* youlysses wonders what'll happen if/when this infatuation starts to wear
  thin... :-L
<fsmunoz> notify.el is pretty much the same as my own rcirc stuff, so I'll just
	  keep still.
<technomancy> nicferrier: excellent work; thanks.
<fsmunoz> technomancy: ahh I see, thanks.
<nicferrier> I hate changing this db.  [08:29]
<nicferrier> SHIT  [08:30]
<nicferrier> it's really fucking easy to delete packages.
<nicferrier> like I just did for something else.
<nicferrier> stupid mongodb.  [08:31]
<nicferrier> why doesn't it have a commit like a proper database. ahhh. because
	     it's not a proper database.
<aidalgol> I wonder whether I can run my Windows partition in a VM without
	   Windows asploading.
<nicferrier> aidalgol: what do you think about working on elmarmalade? if I
	     broke it down more for you?  [08:32]
<aidalgol> Windows needs a package manager, especially for games, so I can just
	   generate a download script and download the bloated updates from
	   somewhere with cheaper Internet access.
<aidalgol> nicferrier: Sure, but I won't have a lot of free time.  [08:33]
<nicferrier> oh ok.
<aidalgol> Then again, you have your job, so it's probably about the same. :P
<nicferrier> sorry, I thought you were at a loose end.
<nicferrier> ha.
<nicferrier> I just wondered if you'd be interested in using it to learn elisp
	     better.  [08:34]
* aidalgol has two assignments and two tests.
<nicferrier> and a whole bunch of other stuff, mongo, etc...
<aidalgol> I'd be glad to help.
<aidalgol> I'
<aidalgol> I'm also attempting to improve the eshell manual.  [08:35]
<nicferrier> oooh. nice one.
<nicferrier> that's an awesome thing to do.
<nicferrier> if I made some detailed issues for you on the github for the
	     project could we work that way? you could me here if you got stuck.
									  [08:37]
<aidalgol> I'll give it my best shot.
<aidalgol> Do I need Emacs 24, though?
<nicferrier> it's just you've expressed a desire to know more and I'd be glad to
	     help you learn. and of course it would be good for me coz you'd get
	     work done.
<nicferrier> yes. you'd need 24. can you not run 24?  [08:38]
<aidalgol> I can, but I'm still using 23 right now.
<aidalgol> I can just have both installed.
<nicferrier> well, it's no hurry and of course it's entirely up to you.  [08:39]
<jaimef> so I have confluence cli working for fetch/store of documents. now to
	 find sample elisp to wrap these operations :P
<aidalgol> confluence?
<fsbot> hmm, confluence is an enterprise wiki
	<http://www.atlassian.com/software/confluence/>; see
	http://code.google.com/p/confluence-el/ .. + other entries
<nicferrier> jaimef: I was gonna do this a while ago  [08:40]
<jaimef> nicferrier: :P
<jaimef> using the java cli figure can't hurt
<nicferrier> can you share your current code? I got hung up on the doc format
	     and couldn't be bothered to work out a solution. do you just take
	     their crappy xml?
<aidalgol> Stupid, stupid game downloaders...  [08:43]
<jaimef> nicferrier: I am using just the cli confluence.sh but sure  [08:44]
<Frozenlock> How can I stop a port forwarding?
<jaimef> let me jist it
<jaimef> gist
<bpalmer> Frozenlock: how did you set it up?
<jaimef> e.g. ./confluence.sh --action getPageList --space "ops" -u ${user} -p
	 ${password} -s ${server}
<Frozenlock> ssh -L port:hostname:port host
<aidalgol> Frozenlock: Kill the process.  [08:45]
<bpalmer> Frozenlock: well, killing the connection would do it.
<nicferrier> no there's an easier way
<aidalgol> Also, that's tunnelling, not port actual forwarding.
<nicferrier> you can enter the ssh cli with ~] ?  [08:46]
<Frozenlock> Right, sorry about that
<nicferrier> ~# lists fwd cons, ~C opens cmd line...  [08:47]
<nicferrier> jaimef: ah right, yeah. I had that. I got caught up on doc format.
<jaimef> xhtml yeah
<nicferrier> yeah.
<jaimef> wish org-mode could read from it  [08:48]
<Frozenlock> killed the process. Crude, but it worked.
<twb> aidalgol: -L is port forwarding.  ssh -w is a tunnel.
<Frozenlock> twb: aaaaaah that must be why I had connection problem: the router
	     must have blocked it  [08:49]
<Frozenlock> So `ssh -w port:localhost:port host' would permit me exchange
	     directly to the other machine via localhost?  [08:51]
<tech1> i want to have a session/frame/window/positions/buffers setting (one or
	more) that i can load with a command. are there any .el files that do
	this already made? or something close enough that i can use as a base to
	modify
<twb> Frozenlock: don't use -w  [08:52]
<twb> Frozenlock: tunnelling TCP over TCP you will get resend fights.
<twb> Also, SSH -w has no means to reestablish the connection when the outer TCP
      dumps core due to transient outages.
<twb> ssh -w is OK for ad-hoc VPNs, but don't use it routinely.  [08:53]
<Frozenlock> Ok I won't touch it.
<BentFranklin> Let's port EMACS to Raspberry PI and embed it in our DVRs!
<twb> It also sounds like you actually want a port forward, not a tunnel.
<aidalgol> BentFranklin: Raspberry Pi can already run GNU/Linux.  [08:54]
<Frozenlock> I want to connect to a remote swank running on port 4005. However I
	     don't know if 4005 is open.
<twb> pi is a sucky old arm
<twb> v7 is where it's at
<twb> Frozenlock: over an untrusted network?
<Frozenlock> over THE INTERNET  [08:55]
<Frozenlock> So yeah, untrusted.
<Frozenlock> I was under the impression I could tunnel my connection with ssh
<twb> ssh -L 4005:127.0.0.1:4005 example.net  [08:56]
<fsmunoz> Frozenlock: that can be made with -L 4005:localhost:4005
<fsmunoz> oh
<Frozenlock> On my machine, or the other one?
<fsmunoz> nevermind
<fsmunoz> What twb said
<fsmunoz> Yours
<fsmunoz> You then connect to swank in localhost:4005  [08:57]
<twb> Right.
<twb> That will ssh from your Emacs box to the swank box (example.net).
<twb> sshd will open a connect on example.net to 127.0.0.1:4005.
<Frozenlock> "channel 3: open failed: connect failed: Connection refused"
									  [08:58]
<twb> ssh on the emacs box will bind to *its* 127.0.0.1:4005.
<twb> Frozenlock: probably you're running another swank on the Emacs host?
<jaimef> wow no good html mode to make it look more like org-mode
<fsmunoz> lsof -i :4005  [08:59]
<Frozenlock> Well I'm running swank on the remote machine, yes.
<fsmunoz> Frozenlock: and locally?
<twb> fsmunoz: oh fine, do it the easy way
<fsmunoz> (also, I think it's necessary to enable forwarding in sshd_config, in
	  the remote end)  [09:00]
<Frozenlock> Eh I don't think so, let met check.
<fsmunoz> twb: hehe
<twb> forwarding should be enabled by default unless he has a paranoid sysadmin
<twb> Frozenlock: pastebin these, from both hosts: ps uxf; netstat -nlp
<fsmunoz> How quaint, BSD flags to ps :D  [09:01]
<twb> I'm old
<fsmunoz> So is SystemV though ;)
<fsmunoz> I actually used "ps aux" when I started, it was the most common syntax
	  in the early 90's
<billyoc> I still do that.  [09:02]
<fsmunoz> Then I changed to "ps -ef" & friends, I think because of exposure to
	  other stuff
* billyoc goes try it
<billyoc> I'll keep my aux  [09:03]
<twb> Bizarrely, auxf doesn't work on solaris
<twb> Frozenlock: oi fatty, are you pasting that shit?
<Frozenlock> twb: I am  [09:04]
<Frozenlock> http://pastebin.com/P66k4Azg
<Frozenlock> Remote machine is first
<twb> Urgh, it's all wwrapped  [09:05]
<twb> Is the swank server running as your user?
<twb> Oh, ew, it's not lisp
<twb> 32. tcp 0 0 ::ffff:127.0.0.1:4005 :::* LISTEN 31416/java
<Frozenlock> Clojure  [09:06]
<twb> It's only binding to lo but that shouldn't matter...
<twb> Oh wait, that second 4005 is ssh.
<twb> Ok so the problem appears to be that your fucking stupid clojure thing is
      only speaking IPv6  [09:07]
<twb> But wait, then it should say "tcp6".
<twb> So how the fuck than it be tcp (v4) and have that ::fff... noise in front
<Frozenlock> Good question... technomancy you there? :P  [09:08]
<twb> well look, let's try a simpler test.  Let's just forward 80 for now, and
      make sure the SSH part is working
<twb> ssh -L8080:127.0.0.1:80 example.net  [09:09]
<twb> Then sensible-browser http://127.0.0.1:8080
<fsmunoz> twb: is there a webserver listening on 80 on that box?
<fsmunoz> Oh, you have read the paste, of course  [09:10]
* fsmunoz shuts up
<twb> fsmunoz: pfft, as if I READ things
<twb> You know I just put the 8p8c in my mouth and taste the bits  [09:11]
<Frozenlock> Eh 8080 is already taken... let me take another
<twb> Cos I'm such a hardass
* fsmunoz nods
<Frozenlock> channel 4: open failed: connect failed: Connection refused  [09:12]
<twb> pastebin the full, unmodified output of the ssh command (including the
      command itself).
<twb> Preferably without hard wrapping at your terminal width
<fsmunoz> There is something weird with the overall thing, maybe try with -vvv
	  as well  [09:13]
<Frozenlock> http://pastebin.com/JpFPPk7a
<twb> Why are you getting two last login's  [09:14]
<Frozenlock> I have no idea; it's my first ssh :(
<twb> It looks like your ssh is actually some kind of multiplex bullshit or
      something...
*** hdev``` (~user@dslb-188-100-143-017.pools.arcor-ip.net) is now known as hdev
<Frozenlock> I'm also sshed with eshell, if it's relevant.  [09:15]
<jaimef> nokogiri to the rescue
<twb> But you're doing this inside a real shell, right?
<Frozenlock> The last one I pasted, yes  [09:16]
<twb> OK step #1 is use M-x shell  [09:18]
<twb> Since eshell could be doing this in tramp or some shit
<twb> You can use a shell outside of emacs instead if you prefer.  [09:19]
<twb> eshell has a habit of shadowing some well-known commands with elisp
      equivalents that behave differently, and that could be what we're seeing
<Frozenlock> Ok so I reconnect using shell, then restart swank?  [09:20]
<twb> You don't need to restart swank  [09:21]
<twb> We can see from netstat that it's listening
<Frozenlock> So new shell, ssh -L4005:localhost:4005 remotehost  [09:23]
<fsmunoz> just do it  [09:24]
<fsmunoz> think differently
<Frozenlock> Connection refused :(  [09:25]
<jaimef> nicferrier: I have some code to make the xhtml much easier to
	 parse. will post it once it's cleaned up  [09:26]
<jaimef> will all be ruby, hope to remove the java portion  [09:27]
<twb> Frozenlock: alias ssh; which ssh; dpkg -l ssh  [09:28]
<twb> Er, dpkg -l openssh-client
<Frozenlock> http://pastebin.com/ygTTg7tS  [09:30]
<nicferrier> jaimef: nice  [09:33]
<jaimef> just might elisp help on wrapping it
<jaimef> e.g. get-docs-in-space  [09:34]
<nicferrier> >
<nicferrier> ?
<jaimef> elisp functions to wrap the external calls for pulling the list of
	 docs, fetching the doc etc
<nicferrier> sure. I didn't parse the first bit "just might elisp help"  [09:35]
<jaimef> just might need
<twb> Frozenlock: I have NFI what's going on  [09:37]
<twb> Frozenlock: what you're doing ought to Just Work, at least for the port 80
      traffic
<twb> Frozenlock: the ::ffff: stuff is very odd, though, you might want to talk
      to your distro support channel about that.  [09:38]
<Frozenlock> Well thank you very much for your help! It gave me a bunch of neat
	     little tricks, like netstat and port 80 :)  [09:39]
<mk`> I use visual line mode and I want to search by regexps. I want find two
      words. These words can be in different lines (but not necessarily). How do
      I seach for it?  [10:05]
<Buglouse> Validate my regex, http://slexy.org/view/s2wiLY8Vqq ?  [10:08]
<Buglouse> I think it may have something to do with its implementation .. It
	   works with (vc-print-log) but not entirely with (vc-print-root-log)
									  [10:11]
* offby1 drops down to elisp while humming Led Zeppelin's 1975 smash hit
  "Custard Pie"  [10:13]
<youlysses>   Is there a built-in way to set GNUS to save mail into a specific
	    folder, and not just the root of my home-directory?
<offby1> rudybot: let's
<rudybot> *offby1: Let's go buy tacos with $2 bills.
<Buglouse> Only if their pinto filled and topped with avocado   [10:15]
<youlysses> Buglouse: What's the deal with the recent avocado "craze"?! 
<jlf_> rudybot: quote  [10:17]
<rudybot> jlf_: Let's be an angry drunk.
<jlf_> way ahead of you budddy
<Buglouse> recent .. ? Personal consummation has always been healthily advocated
	   and heartily pursued   [10:20]
<youlysses> Buglouse: Well yeah, but you haven't seen the recent "health craze"?
	    (Are you in the States?)  [10:22]
<rryoumaa> Buglouse: consumption*  [10:31]
<Buglouse> I consent to no nationality, but if I refuse to pay the gang its
	   dues, yes, the IRS will attack me. youlysses   [10:32]
<rryoumaa> unless you really did mean that
<Buglouse> rryoumaa: _double entendre_  [10:33]
<rryoumaa> well, then
<rryoumaa> i guess you did mean it
<Buglouse> youlysses: All that I have recently seen, are DefCon lectures and
	   elisp ..  [10:34]
<Buglouse> The occasional developers blog..  [10:35]
<rryoumaa> is there an image-dired or thumbs setting that will fit images to
	   screen?  i just want to browse using spc and del.  [10:38]
<rryoumaa> window*  [10:39]
<offby1> jlf: I think I'll rewrite the "quote" command to do the same thing that
	 "let's" would do.  [10:41]
<shergill> rudybot: you down with that?  [10:42]
<rudybot> shergill: seriously, people will hunt you down, skin you alive, and
	  then eat your children if you mess with the indentation for lisp code.
* shergill looks around nervously  [10:43]
* Buglouse laughs @ -recent- health craze; after the child left the farm and
  abandoned all semblance of family|community values, consumers have been
  advertised as unhealthy by the methodical consumption of that which the
  advertisers advertise as _filling the emotional abandonment_ they resonate
  with ..
<jlf> offby1: isn't `quote' more general?  [10:44]
<Buglouse> rryoumaa: There is a thumb function for dired, havn't used it.
<jlf> i thought `let\'s' just used the general LRU-keyword matching thingie
									  [10:45]
<aidalgol> ,Lets ask fsbot  [10:47]
<fsbot> Let's flay the bot abusers.
* aidalgol begins to sweat.
<jlf> ,told aidalgol 
<fsbot> Awww! aidalgol got *told*!
<scombinator> ,homie-yow  [10:51]
<fsbot> i met tyler durden.
<fsbot> lol
<tali713> ,homie-yow
<fsbot> /me puts on ear-muffs!
<fsbot> lol
<scombinator> ,dl homie-yow
<fsbot> scombinator: homie-yow -- lisp (if (member nick '("homie" "wbooze"))
	(format "greetings, %s!" nick) (concat (random-choose (notes
	"homie-list")) "\nlol"))
<tali713> hmm, that lol is annoying, i think.  [10:52]
<scombinator> ,notes
<fsbot> Nooo!  Wrong number of arguments: (lambda (name) "Internal. Return the
	notes as a list.  Else nil" (sit-for 0) (let ((exnotes
	(erbbdb-get-exact-notes name))) (and (stringp exnotes) (erbn-read
	exnotes)))), 0
<tali713> realistic, but annoying.
<aidalgol> .seen homie  [10:53]
<birny> homie was last seen quitting at 2012-08-21 21:28:08 GMT (1 day, 5 hours,
	24 minutes, 54 seconds ago).
<aidalgol> Why do we have homie-yow if we already have homie?
<tali713> scombinator: please use private or even download the source, if you
	  just want to see the internals.
<tali713> aidalgol: sometimes we don't have a homie, and his inciteful comments
	  are excellent flame retardant.
<scombinator> Flames are already retarded  [10:54]
<tali713> ,s/ "\nlol"/ in homie-yow
<fsbot> Nooo!  Format: s/foo.../bar..../ in TERM &optional N
<tali713> ,s/ "\nlol"// in homie-yow
<fsbot> Replaced string " \"\\nlol\"" with "".
<jlf> tali713: i like it
<aidalgol> itym insightful
<jlf> it adds to the authenticity
<tali713> aidalgol: nope, I didn't.  [10:55]
<tali713> jlf, al right I'll put it back.
<jlf> ,homie-yow
<fsbot> hah, dying! tsk tsk
<scombinator> ,s/ ""/", lol"//
<fsbot> oops,  Format: s/foo.../bar..../ in TERM &optional NUMBER
<aidalgol> tali713: You didn't get rid of the `concat'.
<scombinator> ,s/ ""/", lol"// in homie-yow
<fsbot> Replaced string " \"\"/\", lol\"" with "".
<tali713> that was silly.
<scombinator> ,s/ ""/", lol"/ in homie-yow
<fsbot> Replaced string " \"\"" with "\", lol\"".
<scombinator> ,homie-yow  [10:56]
<tali713> scombinator: are you mad?
<fsbot> it uses rms brain like a sucker!
<scombinator> yes
<scombinator> ,dl homie-yow
<fsbot> homie-yow is, like, lisp (if (member nick '("homie" "wbooze")) (format
	"greetings, %s!" nick) (random-choose (notes "homie-list")))
<tali713> ,s/))))/)) "\nlol"))/ in homie-yow
<fsbot> Replaced string "))))" with ")) \"\\nlol\"))".
<scombinator> The concat is gone
<tali713> oh, well, not my fault.
<tali713> aidalgol: nope, I didn't, because if I did, it would make it harder to
	  restore.  but I guess you already figured that out.  [10:57]
<shergill> rudybot: when will fsbot support transactions?
<rudybot> shergill: If ACID in the database sense is what's needed, that won't
	  have any notion of 'transactions', though, but I'd guess you'd be
	  using a database for that.
<jlf> ,no homie-yow is lisp (if (member nick '("homie" "wbooze")) (format
      "greetings, %s!" nick) (concat (random-choose (notes "homie-list"))
      "\nlol"))
<fsbot> created.
<jlf> i wonder how the concat went away  [10:58]
<jlf> ,homie-yow
<fsbot> fbsot did bath in it already
<fsbot> lol
*** warrenbo` (~user@kilrog.com) is now known as warrenbot
<tali713> tail-recursion is messing with my mind, must stop and work on
	  something else.  [11:00]
<aidalgol> tali713: Don't blame the homie's understudy for your procrastination.
									  [11:05]
<scombinator> I wish the emacs window package wouldn't save the size of the
	      fucking window  [11:06]
<scombinator> workspace
<aidalgol> tali713: Just think of a dog chasing its tail.  That's tail
	   recursion.
<scombinator> aidalgol: No, tail recursion is when the tail itself has a tail
									  [11:07]
<tali713> aidalgol: easy, now do mutual tail-recursion.
<scombinator> tail713: Thats when a tails tail has the original tail as its tail
<aidalgol> scombinator: Good point.  I described loops, not recursion. :P
<aidalgol> OK, not scombinator is just putting creepy images into my head.
									  [11:08]
<aidalgol> ,shoot scombinator
* fsbot loads its finite automaton and rejects scombinator.
<tali713> aidalgol: and actually your analogy was more apt, because when you
	  optimize tail-recursion it /is/ a loop.
<scombinator> Here, I'll like a tutorial: http://bit.ly/RfVauR  [11:09]
<tali713> well, kinda a loop, since technically there can be more than one
	  optimizable tail-call.
<scombinator> s/like/link/
<aidalgol> ,(coerce "a string" 'integer)
<fsbot> whoops,  Symbol's function definition is void: fs-coerce
<tali713> scombinator: not only do i find your humor somewhat trite, I'm not
	  working on writing code that uses tail-recursion, I'm writing code
	  that implements tail-call optimization.  [11:10]
<aidalgol> eh?
<aidalgol> scombinator: Yes, this is not Facebook.
<scombinator> trite? The jumping spider
<offby1> jlf: sure, "quote" is more general; but it's more work!
<offby1> rudybot and I are both anti-work.
<rudybot> It's true.  [11:11]
<aidalgol> offby1: Are you, perchance, a rabbi?
* offby1 checks
<aidalgol> And rudybot your golem?
<offby1> Nope.
<rudybot> hmm ... 'golem' does have a nice ring to it
<aidalgol> disappoint...  [11:12]
<Buglouse> If I use 'special-dislay-regexps, the only way I can negate a match
	   is through a match within the passed function .. If I have
	   "*([^*]+)*" I can not ignore "*info*" ?
<tali713> aidalgol: see, self tail-call optimization is relatively easy, but now
	  I am hitting difficulty abstracting it to arbitrary tail-calls.
<aidalgol> What are you trying to implement?  [11:13]
<scombinator> A tail-call is anycall where there is nothing to do after the
	      function call
<tali713> scombinator: yes, very good young sir.
<tali713> aidalgol: tail-call optimization.
<jlf> ur mom optimizes tail calls
<aidalgol> tali713: I mean what's the application?  Compiler?    [11:14]
<Frozenlo`> Is it possible for a security software to block outgoing traffic? I
	    can bind to a port, but there's nothing coming out...
<shergill> twss
<tali713> aidalgol: oh, just modifying elisp.
<aidalgol> Frozenlo`: Yes, it's called a firewall.
<Frozenlo`> ah-ah  [11:15]
<Frozenlo`> But you still can bind with the port without any error?
<tali713> aidalgol: the self-call version is "usable"
	  already. https://github.com/tali713/misc/blob/master/tail-call.el
<aidalgol> yep
<aidalgol> tali713: neat  [11:16]
<Frozenlo`> Wow. I think I just wasted 5 hours of my life.
*** Frozenlo` (~user@cable-15.246.173-182.electronicbox.net) is now known as
    Frozenlock
<aidalgol> Frozenlo`: It just doesn't let the packets go anywhere.
<scombinator> I didn't know that elisp had goto for you to do tail calls
<aidalgol> Some are configured to REJECT packets, so the sender gets an error.
<aidalgol> But it's more common to just DROP packets, precisely to mess with
	   attackers.
<Frozenlock> I will be so sad if it's only that...  [11:17]
<Frozenlock> /s/sad/MAD
<scombinator> Stupid firewalls, making nmap harder to use
<aidalgol> What's the trippiest game you've ever played?  [11:19]
<twb> aidalgol: one-up
<bpalmer> I only play the most dangerous game. 
<twb> bpalmer: trivial pursuit?  [11:20]
<jlf> ,rr
<fsbot> jlf is one lucky punk... *CLICK*
<bpalmer> twb: the danger there is rather trivial, I must say.
<aidalgol> The Void is pretty out there.
*** hdev` (~user@dslb-094-220-119-152.pools.arcor-ip.net) is now known as hdev
<offby1> "tail call" == "booty call".  Discuss.
<jlf> offby1: <jlf> ur mom optimizes tail calls
<aidalgol> See?  This is why we can't have nice things.  [11:21]
<scombinator> aidalgol: http://www.tigsource.com/2012/08/19/zineth/
<tali713> offby1: with a frame like that, you got to call 'er.
<scombinator> tali713: She is *stacked*
<shergill> optimizing tail calls away is clearly a sign of not optimizing for
	   the right things
<aidalgol> scombinator: dafuq is that?
<aidalgol> It looks like someone puked onto a screen. o.O  [11:22]
<scombinator> <aidalgol> What's the trippiest game you've ever played?
<aidalgol> You win, good sir.
<offby1> jlf: well, yes; you were indeed the inspiration
<tali713> shergill: and you say this because?  [11:23]
<shergill> tali713: because of jlf and offby1. in other words ignore me
	   today. mind is mulling over math, and hands are typing random crap
									  [11:24]
* offby1 is again in the throes of salt-and-pepper pistachios
<offby1> perhaps it's time for an intervention
<tali713> shergill: ahh, sokay.
<jlf> sounds nutty  [11:25]
<Buglouse> Insert in a rectangle (a column) a sequence?
<offby1> jlf: and yet there's a kernel of truth to it  [11:26]
<jlf> cracking wise again i see  [11:27]
<legumbre> Buglouse: C-x r N if on 24  [11:29]
<cbpage> What xterm mouse input modes are supported by emacs? Is it document
	 somewhere?  [11:30]
* Buglouse feels -sheepish-
<jlf> ,mouse
<fsbot> [->] I heard XTermMouse is [0] (info "(emacs)XTerm Mouse")
<fsbot> [1] Look at the Emacs21 built-in library xt-mouse.el.,
<fsbot> [2] M-x xterm-mouse-mode
<legumbre> otherwise there's a similar thing in cua-mode
<twb> M-x xterm mouse mode
<twb> (when (and (fboundp 'xterm-mouse-mode) (tty-type) (featurep 'mouse))
      (xterm-mouse-mode +1) (when (fboundp 'mwheel-scroll) (global-set-key (kbd
      "<mouse-4>") 'mwheel-scroll) (global-set-key (kbd "<mouse-5>")
      'mwheel-scroll)))
<offby1> M-x xterm-pistachio-mode
<cbpage> Thanks, but I know how to enable mouse mode. I want to know what
	 terminal mouse modes are supported.
<twb> cbpage: as in what escape sequences?  [11:31]
<cbpage> twb: Exactly.
<jlf> huh, i didn't know +1 evaluated to a number
<twb> Probably only the xterm one.  You'd have to RTFS
<Buglouse> rectangles does fine, ty
<twb> (unless is-click (unless (and (eq (read-char) ?\e) (eq (read-char) ?\[)
      (eq (read-char) ?M)) (error "Unexpected escape sequence from XTerm")))
<cbpage> xterm supports at least three modes, depending on how you count them.
									  [11:32]
<twb> So it looks like ^[[M is the only one
<twb> Just at a glance -- I have never checked this code before
<cbpage> twb: Thanks.  [11:34]
<aidalgol> ,+1  [11:36]
<fsbot> I heard 1+1 is 2
<aidalgol> ...
<aidalgol> ,(+1)
<fsbot> Nooo!  Symbol's function definition is void: fs-1
<aidalgol> ,(1+)
<fsbot> err..Wrong number of arguments: (lambda (fs-num &rest fs-args)
	(erblisp-check-args fs-num &rest fs-args) (sit-for 0) (fs-+ 1 fs-num)),
	0
<aidalgol> right, confused sorted
<gits1225> I put (setq indent-tabs-mode nil) in my .emacs, but I don't see any
	   change. What am I doing wrong?  [11:37]
<bpalmer> you have to do it in the relevant modes' hooks. indent-tabs-mode is
	  buffer-local.
<twb> aidalgol: use /msg you jumgrubble
<gits1225> relevant modes' hooks? How do I do that?  [11:38]
<legumbre> or setq-default
<gits1225> I want it to be a global change
<gits1225> so (setq-default indent-tabs-mode nil)?
<legumbre> yes
<gits1225> k, lemme try
<sellout42> gits1225: What, you don't trust legumbre?  [11:39]
<gits1225> sellout42: newbie know no one, so pardon me :P  [11:40]
<legumbre> I wouldn't trust me either
<aidalgol> So I download a several-GB game through Steam.  First time I run it,
	   stupid thing wants to download a ~1GB patch.
<legumbre> hehe
<bpalmer> you were just going to waste that bandwidth.
<aidalgol> I wouldn't mind if it was possible to download on another system
	   (without installing the game and copying over all files).
									  [11:41]
<aidalgol> Oh, and some things use the registry to keep track of what's
	   installed, such as GFWL.  [11:42]
<aidalgol> The joys of gaming.  [11:43]
<aidalgol> I wonder if I could take my hard drive out, boot up from it via USB
	   into Windows from a portable machine (i.e. laptop).  [11:45]
<gits1225> I was trying to change the default tabstop to 4 like this:
	   (setq-default tab-stop-list 4). But didn't work.
<aidalgol> Knowing Windows, it would probably commit suicide from confusion.
<aidalgol> gits1225: Try Customize: M-x customize-group <RET> indent <RET>
<legumbre> gits1225: tab-stop-list is supposed to be a list  [11:46]
<gits1225> I am new, is there a primer of sorts to understand emacs speak? I
	   feel confused   [11:47]
<jlf> gits1225: C-h t  [11:48]
<gits1225> But thats just a tutorial, I am halfway through
<legumbre> also M-: (info "(emacs) Glossary")
<jlf> gits1225: yes, but the tutorial uses various emacs terms of art  [11:50]
<offby1> "watercolor"
<offby1> "wash"
<bpalmer> I support the roccoco school.  [11:51]
<offby1> "chiaroscuro"
<offby1> etc
* offby1 glares at bpalmer
<jlf> color me amused
* offby1 colors jlf Kubrick
<bpalmer> just another kubrick in the wall.  [11:52]
<offby1> gits1225: the first thing you need to learn: instead of saying "doesn't
	 work", you should ...  [11:53]
<offby1> ,repro
<fsbot> tell us EXACTLY 1) what you typed; 2) what you saw; and 3) what you
	expected to see.
<offby1> otherwise we don't know what you mean
<tali713> gits1225: mostly the tutorial should get you up to speed with
	  terminology, further reading is available at C-h r.  the terminology
	  predates many more modern terms, unfortunately the emacs standard
	  terminology and key-bindings weren't adopted by later standards.
									  [11:54]
<offby1> it's like those Emacsers have a different word for _everything_
	 ... "frame" means "window"
<aidalgol> legumbre: The annoying thing about Team Fortress 2 is that you have
	   to keep downloading (large) updates.  [11:55]
<legumbre> aidalgol: :-(
<tali713> silly, it's the other way around, X oddly refers to frames as windows,
	  even though it is obvious that a window frame may hold more than one
	  window.
<offby1> obvious.
<gits1225> phew, finally I got my defaults all setup in emacs.  [11:57]
<gits1225> firing up emacs manual...
<legumbre> you're never done with "defaults"  [11:58]
<offby1> sad but true
*** bitrot (~smd@ppp-70-253-76-241.dsl.austtx.swbell.net) is now known as
    sduckett
<gits1225> hehe
<legumbre> such is the way of the Emacs
<gits1225> but I do stick to the bare minimum needed
* offby1 riffles through 20 years of revision-control history of his .emacs
<offby1> gits1225: wise chocie
<offby1> choice
<gits1225> :D
<offby1> conform or be cast out, as they said in the '80s
* legumbre sleeps  [11:59]
<jlf> what about the voice of geddy lee? 
<jlf> how did it get so high?
<offby1> what about it?
* offby1 plugs his ears  [12:00]
<twb> offby1: I don't think McCarthy was 80s
<offby1> lotta weed, I guess
<tali713> the bare minimum needed is a .emacs file of no less than a thousand
	  lines. :)
<offby1> *whew* 1389 lines  [12:01]
*** jlf (~user@pdpc/supporter/active/jlf) has set the topic for #emacs: ""An
    .emacs of a thousand lines begins with a single form" -- Lao Tzu | Emacs
    mugs at http://shop.fsf.org/ | http://emacswiki.org/EmacsChannelFaq |
    http://paste.lisp.org/ | No public logging! What happens in #emacs stays in
    #emacs | Sexism will not be tolerated. Yes, I'm looking at you."  [12:03]
<offby1> :)  [12:04]
<offby1> a single left-paren
<jlf> mine begins with ;  [12:05]
<offby1> you're just hemming and hawing.  Get to the point!
<aidalgol> My init file is 171 lines
<mdim> if I want to store sent email from Gnus in INBOX/Sent Items folder, how
       do I specify that in .gnus.el? I tried like this:
       http://pastebin.com/ss6dS9g3 but that doesn't seem to be working
<aidalgol> (Not including Customize file.)  [12:06]
<twb> What would I expect to pay, ballpark, for a VPS or cloudcloudcloud
      instance with about 256MB RAM / 256MB disk / 1G/mo data?  [12:07]
<mdim> it is working except for a.b.edu account
<loke_erc> twb: A few dollors  [12:08]
<loke_erc> US $
<twb> $boss is balking at $20/mo for linode-512 (which is way more than we need)
<bpalmer> you can get a  micro-instance for amazon EC2 for US$0.02 / hr  [12:09]
<twb> bpalmer: yeah, that's where I was heading  [12:10]
<bpalmer> and the first 1GB/month is US$0.00/gb 
<twb> What I actually want it for is pretty obscene
<bpalmer> so , US$15/month.
<twb> So $boss has a demo network of a prisonpc server and some desktops, and he
      wants to go out to an airgapped site and do training
<twb> And he wants to demonstrate email to and from the internet.  [12:11]
<billyoc> lol
<twb> So the least worst solution I can think of is to have him take his 3G
      doodad out there, which is fine, except  gmail or whatever will want to
      talk to port 25  [12:12]
<billyoc> tell him you need the linode-512 for the "cloud".
<twb> And no 3g is going to allow that
<twb> billyoc: if I do that, he will tell me to HTFU and host it from the office
<jlf> ssh tunnel?
<billyoc> gmail will want 587 for smtp.  [12:13]
<twb> ....so the solution is to basically run a server somewhere with a public
      IP address, and use netcat (or ssh) to direct its public 25 to the 3g's
      high port.
<twb> billyoc: wrong.
<twb> billyoc: MX to MX will use 25; you are thinking of MUA to MTA
<billyoc> i am.
* offby1 is paying $20-$30/month for his EC2 box  [12:14]
<jlf> it varies?  [12:17]
<offby1> I think so, a little
<shergill> amazon micro reserved instance would be your best bet. if you don't
	   care about cpu, then there's ... hmm i forget the name. it's what
	   johnw uses. their 'io' servers are even cheaper than amazon
									  [12:18]
<shergill> twb: ^
<shergill> twb: serveraxis.net  [12:19]
<twb> Thanks
<gits1225>  NOTICE: The main purpose of the Emacs tutorial is to teach you                                                                                                                    
<gits1225>  the most important standard Emacs commands (key bindings).                                                                                                                        
<gits1225>  However, your Emacs has been customized by changing some of                                                                                                                       
<offby1> $20-$25 in the last few months anyway
<gits1225>  these basic editing commands, so it doesn't correspond to the                                                                                                                     
<gits1225>  tutorial.  We have inserted colored notices where the altered                                                                                                                     
<gits1225> How cool is that?
<offby1> gits1225: it'd be more cool if you hadn't pasted it into the channel
	 :-|  [12:20]
<gits1225> yeah sorry
<twb> gits1225: and not so many goddamn spaces
<offby1> and stop tracking mud across my nice clean kitchen floor!
<twb> get off my lawn  [12:21]
<offby1> that too.
<twb> your stupid fat heat is too combustible
<shergill> twb: actually unless you want large amounts of ram, amazon reserved
	   micro would probably be best. just checked serveraxis and the
	   attraction for their io vps's was just increased ram for same cost
<offby1> Also Amazon keeps lowering their prices, little by little  [12:22]
<offby1> bastards
<twb> shergill: really all I need is a public IP address and enough to run
      netcat
<shergill> offby1: is that the cheapest? i was under the impression you oculd
	   get reserved instances for cheaper. in any case serveraxis has stuff
	   around $15/month  [12:23]
<tali713> gits1225: lesson time, for long pastes, a) use lisppaste, or b) make
	  it fit in a single message, by replacing all white space with a single
	  space.  [12:24]
<tali713> ,lisppaste
<fsbot> From memory, lisppaste is [0] an (probably not) auto-announcing listing
	host (pastebin) <http://paste.lisp.org/new/emacs>,
	<http://emacswiki.org/wiki/lisppaste> ..[Type ,more]
<mdim> any thoughts about my aforementioned archiving problem in Gnus?  [12:28]
<twb> Oh, the other thing is the public IP would have to be the same one for at
      least 48hrs are a time  [12:30]
<twb> So that the MX has time to propaate
<twb> Well, I  guess I could dial the MX TTL down to 1hr, so say that it has to
      be a constant public IP for an 8 hours stretch (1 hour TTL plus 7 hours of
      training).
<shergill> in this context, what do you mean by training?  [12:32]
<twb> training as in $boss teaching prison staff how to use the system  [12:33]
<twb> Since we all love car analogies, it is the equivalent to when you go test
      drive a car  [12:34]
<gits1225> where do we find the names associated with keys? For eg. C-w is
	   'backward-kill-word'
<twb> gits1225: that's easy -- it's w for backward
<twb> like M-w is w for copy  [12:35]
<shergill> oh right. that kinda training.
<gits1225> So, where do we 'names' of other keys?
<tali713> C-w isn't backward-kill-word
<tali713> it's kill-region.  [12:36]
<gits1225> oops yeas
<tali713> gits1225: and the answer is READ C-h C-h.
<gits1225> k
<tali713> C-h is the help map prefix, C-h after a prefix describes its
	  bindings. C-h is doubly help, or help-for-help.  [12:37]
<tali713> C-h C-h rather.
<gits1225> tali713: exactly what I was looking for. thanks.
<gits1225> Also, how do you guys press the Alt(Meta) key?  [12:38]
<tali713> alt is not meta, and with my thumb.
<gits1225> Thumb? 
<gits1225> kk
<aidalgol> nose  [12:39]
<gits1225> ...
<tali713> if you have seperate keys for alt and meta, then you can have bindings
	  for both alt and meta.  emacs has some alt bindings built in, albeit
	  tucked away.
<gits1225> you mean use esc as meta or re-bind some other key to meta?  [12:40]
<tali713> gits1225: re-bind??
<tali713> no, I /bind/ a key to meta, I bind a key to alt, I bind a key to
	  control.  [12:41]
<tali713> etc.
<gits1225> hmm
<fsbot> It is certain  [12:42]
<tali713> this should be handled by your keyboard configuration.  unfortunately
	  a common default keyboard configuration includes super and binds both
	  meta and alt to a single key.  this is silly.
<gits1225> I use super for window management.
<tali713> better to live without super, and have meta and alt on seperate
	  keys. or bind your right alt to alt and your left alt to super.
									  [12:43]
<gits1225> anything to the right side of the keyboard for me is officially
	   un-reacheable territory.
<scombinator> ,Tomcat is the shittiest application server
<tali713> gits1225: yup, I do that on one of my machines, I have super for
	  window management, alt as simply alt, and meta as meta,  
<fsbot> created.
<gits1225> tali713: same
<tali713> gits1225: yes, and how often do you really need alt?
<tali713> gits1225: no, you don't you liar.  you have alt and meta on the same
	  key. :)  [12:44]
<gits1225> yeah, I have alt and meta on same key. But 'super' the windows icon
	   is used for window management (awesomewm)  [12:45]
<tali713> i don't really care what pictures are on the keys, as along as the
	  keys are where they belong.
<gits1225> hehe
<gits1225> btw check this out. 'C-v runs the command scroll-up'  [12:46]
<gits1225> but its scroll down right?
<tali713> meta should be on both sides of space bar, alt should be next,
	  followed by control, which should be to the left of a on a qwerty
	  keyboard.
<tali713> gits1225: nope, it scrolls up.
<chu> It scrolls the screen up.
<rryoumaa> gits1225: the text scrolls
<gits1225> aah
<gits1225> hehe
<rryoumaa> go down = scroll up
<rryoumaa> but split horizontally and verttically ont he other hand is ambiguous
									  [12:47]
<rryoumaa> i guess page down means scroll up
<gits1225> emacs has created #.emacs# and .emacs~
<gits1225> two tmp files
<gits1225> yuk  [12:48]
<billyoc> yum
<rryoumaa> autosave and backup
<chu> Yep ,,backup
<fsbot> From memory, backup is [0] (setq backup-directory-alist '(("." . ".~")))
	to keep backups out of the way in a .~/ directory ..[Type ,more]
<rryoumaa> there is also lock
<gits1225> ...
<tali713> gits1225: alternatively, one of your two alts could be replaced by
	  super.  depending on which is most valuable to you.  or you could buy
	  a better keyboard and have all of alt control hyper meta super on
	  separate keys.
<chu> "... buy a better keyboard ..." lol
<aidalgol> Just what *are* hyper meta and super?  [12:49]
<tali713> gits1225:  emacs isn't the only program to use ~ for backups.
<gits1225> I am sticking with alt as meta atm, maybe re-bind something like M-x
	   to some key combo
<gits1225> yeah
<gits1225> I am gonna do what fsbot  said. a directory for backups
<chu> fsbot's a good guy  [12:50]
<fsbot> 7 matches.  (c-state-cache-good-pos ediff-good-frame-under-mouse
	emacs-goodies-el emacs-goodies-el-defaults fs-good
	type-break-good-break-interval type-break-good-rest-interval)
<bpalmer> rudybot: do you feel jealous when people listen to fsbot?
<rudybot> bpalmer: This Prometheus of lower-case parens should protect himself
	  from the Olympians, lest they get jealous that he shared this
	  knowledge with mortals.
<loke_erc> aidalgol: Control, Hyper, Alt, Meta, Super ← alterntive keys
<gits1225> autosave will be cleaned after system reboot right?
<tali713> aidalgol: all of them are modifier keys.  with C- M- and A- being the
	  more unixy ones, though as I mentioned earlier, for some stupid
	  reason, many default keymaps put A- and M- on the same key and give
	  super it's own location, which is stupid.
<aidalgol> When is Meta used anymore?  [12:51]
<tali713> all machines should of C- and S- of course.  terminals can send meta
	  as escape to deal with the fact that they can't actually just send
	  modifier keys (control being special)  [12:52]
<tali713> aidalgol: in emacs damn it.
<tali713> aidalgol: every time you use a terminal.
<loke_erc> tali713: Speaking of that, I've had the hardest time trying to get
	   the windows key on a Linux system to consistently behave as Alt. I
	   used to know how to get it to work, but when I recently tried to do
	   it agan, I had immense problems. DO you know of a decent source of
	   information on how to do this?
<aidalgol> tali713: Aren't I using Alt?
<tali713> aidalgol: no.
<aidalgol> Or is it interpreted differently in different applications?
<loke_erc> aidalgol: On X?
<aidalgol> No, wait... Escape also is Alt.
<aidalgol> I mean Meta  [12:53]
<aidalgol> s/Alt/Meta/
<aidalgol> Ugh, this is confusing.
<loke_erc> aidalgol: No. Escape is not Meta. However, Escape works as a prefix
	   to emulate meta if you don' thave a meta key
<loke_erc> (or if you simply don't want to use th emeta key_
<aidalgol> So why can I use Alt as a Meta key?
<tali713> aidalgol: you are pressing a key labeled Alt, which in your keymap is
	  bound to both Alt and Meta, but emacs doesn't care, because if it
	  doesn't see a meta, it will itself translate alt to meta, but
	  terminals never send alt, they only send meta as escape, but they will
	  treat any modifier besides control and shit as meta (typically).
<aidalgol> ow, brain hurty...  [12:54]
<loke_erc> aidalgol: it gets worse. X has more than one way of handling modifier
	   keys.
<tali713> indeed.
<aidalgol> Now what the hell are Super and Hyper?
<twb> aidalgol: more modifiers
<twb> ,space cadet keyboard
<fsbot> hmm, spacecadet is http://en.wikipedia.org/wiki/Space-cadet_keyboard
<twb> It's for space cadets
<loke_erc> aidalgol: There are the Keycodes Meta_L and Meta_R. However, these
	   map to modifiers mod1 to mod5, where mod3 (if I remember correctly)
	   is often interpreted as meta  [12:55]
<twb> It had the Front and Top modifiers as wll
<twb> loke_erc: those are keySYMs not keyCODEs
<tali713> aidalgol: on many unixy machines because of prior mentioned
	  braindamage, a key with the picture of some sort of floating demonic
	  window ghost is often bound to super.
<loke_erc> aidalgol: This is done, in particular, by the Java VM
<loke_erc> twb: yes, sorry
<twb> In X, modifiers are modifiers and that's all there is to it
<twb> A modifier (e.g. mod1) can be alt_l or meta_l or anythign else, including
      e.g. KP_8
<aidalgol> loke_erc: Ah, yes, I often see that in video games: e.g. "Run:
	   L_Shift"
<loke_erc> twb: well, Java has this idea of using the modifier numbers to map to
	   Meta and Alt. So if you don't get those right, everything seems to
	   work, except for Java applications  [12:56]
<twb> HOWEVER, some very old and stupid programs e.g. Ratpoison and Emacs, will
      sometimes check both the modifier *AND* the keysym
<tali713> loke: 1 and 4 I believe are the correct locations for maximum
	  probablity of all program doing the right things, since some look for
	  keys the wrong way.
<tali713> as twb just pointed out.
<twb> What you should ideally do is not use modifiers except for Control
<aidalgol> tali713: Did Super exist before the stupid Windows key?  [12:57]
<twb> And use Control + [ to mean Escape to mean Alt/Meta
<gits1225> sweet nibblets. M-n and M-p is undefined.
<loke_erc> twb: Oh, I had no idea that Emacs looks at both. Do you have a
	   reference that details exactly how this is done?
<twb> aidalgol: yes, on Sun keyboards
<tali713> aidalgol: see space-cadet keyboard.
<twb> aidalgol: well that might have been Meta
<loke_erc> Yes, Sun keyboards
<aidalgol> oh, I see: "MIT Lisp machines"
<twb> aidalgol: it depends on software
<aidalgol> Is hyper mapped to anything on typical PC keyboards?
<loke_erc> http://xahlee.info/kbd/i/kb/sun_keyboard_left.jpg
<tali713> gits1225: not everywhere, those are usually history forward and
	  history back.
<tali713> aidalgol: no.
<twb> Physically, a USB mac keyboard's command key sends the same code as a USB
      MS keyboard's Windows key.
<gits1225> hmm
<twb> aidalgol: whether the penguin key is hyper or super or meta is a matter of
      taste  [12:58]
<tali713> aidalgol: but it could be, if you wanted.
<billyoc> turbo
<twb> On my keyboard, in fbcon, both penguin and alt send ^[
<aidalgol> I wonder if these modifiers would be recognised by Winblows...
<tali713> loke_erc: and that is the right way to arrange your keys.  [12:59]
<twb> aidalgol: who cares
<loke_erc> I want a SCK
<loke_erc> http://xahlee.info/kbd/i/lm/Space-Cadet_keyboard-2m.jpg
<tali713> aidalgol: on the (fuckin) xahlee link you will see a little diamond,
	  that is meta.  in some rare programs in GNU/linux you may see a diamon
	  in a menu, same meaning.  very very rare, I can't even remember which
	  program I saw that in.  [13:00]
<gits1225> Achievment unlocked: First successful binding of keys to something
	   different :D
<aidalgol> Hey, that rings a faint, distant bell...
<loke_erc> Yeah, sorry for linking that. I didn't see where it came from
<aidalgol> I think I saw a diamond key on some old machines in the '90s, when I
	   was little.  [13:01]
<tali713> it's okay, xahlee is not without use.  that's one of them, photos of
	  keyboards.
<aidalgol> And by "old," I mean old for the time.
<gits1225> someone who had 1000+ lines in.emacs must be a wise guy :P
<tali713> gits1225: I have over 2000, it is a mess, trying to clean it up right
	  now.  [13:02]
<gits1225> ...
<loke_erc> Was there ever an application that actually made use of all those
	   modfier keys on the space cadet keyboard?
<aidalgol> Early Emacs, I suspect.
<tali713> loke_erc: lisp.
<derrida> at that size, modularization is necessary
<derrida> i want the datahand  [13:03]
<loke_erc> I mean, what did the, hmm... NETWORK key do? And the Ⅳ key?
<tali713> loke_erc: but it's worth than that, it isn't a mere n modifier keys,
	  bucky bits are special in that you can use more than one at a time.
	  so it is 2^n modifications, obviously 5 bucky bits is insanity.
<derrida> keyboards cannot compare to the .. datahand
<loke_erc> I can count 7 actually.  [13:04]
<tali713> derrida: with foot pedals?
<derrida> http://www.datahand.com/images/DatahandTabletop.JPG
<tali713> loke_erc: yeah, I skipped greek and shift.
<tali713> but that only makes it worse.
<tali713> derrida: of course, you should /not/ buy your foot pedals from them,
	  you can get cheaper foot pedals easily.  [13:05]
<loke_erc> datahand... wtf  [13:06]
<loke_erc> you ever used one of those?
<twb> foot pedals are way too expensive to buy
<gits1225> anyone know what the auto-save-list in emacs.d is?
<derrida> loke_erc: in my dreams
<derrida> tali713: they make a datafoot?
<derrida> man, imagine the possibilities, all four appendages typing at once...
									  [13:07]
<twb> twb SMASH
<tali713> http://www.datahand.com/products/accessories.htm search for foot
<twb> So, smartctl -a output
<twb> Is COMPLETELY DIFFERENT for different vendors, even for the same field
									  [13:08]
<tali713> derrida: but those are $150 dollar foot pedals, that is unacceptable.
<twb> For example: Power_On_Hours 15366 sda 1584 sdb 1588 sdc 15364 sdd
<loke_erc> derrida: make that 5:
	   http://www.technovelgy.com/graphics/content09/tongue-drive.jpg
<derrida> who's that, zuckerberg?
<twb> tali713: I'm sure you could make one with $10 of hardware from fry's or
      whatever
<derrida> loke_erc: lol, i thought that was a tongue piercing :P  [13:09]
<tali713> yup, or buy ones made for gaming or music for around 20-40 and save
	  myself the work.
<rryoumaa> gits1225:   16662 total
<derrida> gits1225:
	  http://www.gnu.org/software/emacs/manual/html_node/elisp/Auto_002dSaving.html
<rudybot> http://tinyurl.com/cm7gsso
<loke_erc> Oh, and I actually have this one (using it for my flight simulators):
	   http://competition.lfs.net/lx_autox/images/products/TrackIR_ad.jpg
									  [13:10]
<tali713> use the online manual, not the manual online!
<twb> loke_erc: you still use excel?
<loke_erc> twb: Never
<loke_erc> twb: why?
<twb> You said flight sim
<twb> excel is a flight sim
<loke_erc> Flight simulators yes
<tali713> also the elisp manual is probably a bit much (info "(emacs) Auto
	  Save") is at a better level.  [13:11]
<tali713> gits1225: you can use M-: to evaluate that sexp and go straight to the
	  section in your local manual.  if you are in erc, just use C-x C-e
	  after the closing paren.
<derrida> For some reason, I never managed to find flight simulators anything
	  but incredibly tedious and boring  [13:12]
<twb>   • 1997 Excel 97 (version 8.0) included in Office 97 (for x86 and
      Alpha). This version of Excel includes a flight simulator as an Easter
      Egg.
<gits1225> thats handy
<gits1225> .emacs~ is the backup right? then what is #.emacs#?  [13:13]
<tali713> auto-sabe  [13:14]
<sjihs> hi, how can i get to know the RGB value (in hex) of the face/font at
	point? 
<twb> I liked Chuck Yeager's Air Combat
<tali713> s/sabe/save/
<twb> Because you could just say "put me in a P-51 and let me fuck up some
      MiG-21s"
<tali713> gits1225: it disapears when you save, but periodically it will be
	  updated in case emacs crashes.
<gits1225> tali713: two save files?
<tali713> gits1225: no, one is a backup, the other is an autosave, the autosave
	  only lives for as long as you haven't yet saved for real.  [13:15]
<gits1225> hmmm nvm
<gits1225> yeah, got it.
<loke_erc> derrida: then you probably won't find this exciting at all (the
	   startup sequence in my favorite combat flight simulator):
	   http://www.youtube.com/watch?v=2sZ58EE-5Vw  [13:16]
<tali713> gits1225: btw, just hanging around here is a good idea if you want to
	  pick up emacs tricks, also,,emacsniftytricks
<fsbot> EmacsNiftyTricks is, like, at
	http://www.emacswiki.org/cgi-bin/wiki.pl?EmacsNiftyTricks
<gits1225> yeah, since I have vowed to use emacs for text editing for 2
	   weeks. I'll be here al'right :D  [13:17]
<tali713> oh, what motivated this?  [13:19]
<tali713> cheaper foot pedals:
	  http://www.newegg.com/Product/Product.aspx?Item=N82E16812999116
<gits1225> change from vim and an article by steveyegge :P
<tali713> ahh, well, hope you enjoy the experience, any languages in particular
	  that you prefer?  [13:20]
<gits1225> I only code in C and learning Go atm
<gits1225> and Guile in near future  [13:21]
<gits1225> thats it really
<tali713> okay, C isn't too bad, and you can easily establish your own
	  indentation styles. and guile is a scheme (at least in significant
	  part) so emacs will work with it quite nicely.  no experience with go.
									  [13:22]
<gits1225> I am looking forward to learn scheme with SICP  [13:23]
<tali713> gits1225: now, I'm not suggesting you use customize, but if you M-x
	  customize-group RET c RET you will see a lot of variables that are
	  useful.
<billyoc> SICP, good move.
<tali713> ,sicp
<fsbot> SICP -- [0] Structure and Interpretation of Computer Programs, a CS
	textbook using Scheme <http://mitpress.mit.edu/sicp/> (HTML)
<fsbot> [1] <http://www.neilvandyke.org/sicp-texi/> (texinfo), ..[Type ,more]
<tali713> you can even read it /in/ emacs ^^
<tali713> ,more
<fsbot> [2] Accompanying video lectures are available gratis
	<http://swiss.csail.mit.edu/classes/6.001/abelson-sussman-lectures/>,
<fsbot> [3] http://web.mit.edu/alexmv/6.001/sicp.pdf (PDF)
<gits1225> tali713: k  [13:24]
<gits1225> oh shit
<gits1225> fsbot: is a bot
<gits1225> ...
<fsbot> [Too many DB matches] I am a human.  You?
<billyoc> we're all bots here.  [13:25]
<gits1225> bites everyone :P
<tali713> rudybot: is fsbot really a bot?
<rudybot> tali713: I'd like a bot that could be interactively modified
<lcc> there are also sicp videos from the university of berkeley california
      webcast.
<Buglouse> Regex assistance ? http://slexy.org/view/s20gr3di7A
<gits1225> lcc: but its the same thing right?  [13:26]
<lcc> get an earlier one, because now they are using python for some reason.
<lcc> gits1225: yeah, sicp.
<tali713> gits1225: well mit is the home of the sicp, berkley is the home of ...
<lcc> the bsd os
<gits1225> berkleydb  [13:27]
<gits1225> :p
<tali713> and potheads, but yeah.
<gits1225> bsd is bell labs' child
<gits1225> well
<tali713> I guess which lecture series you would prefer is a west coast east
	  coast thing.
<gits1225> there are 2 lecture series?  [13:28]
<tali713> gits1225: bsd is berkley, unix is bell.
* billyoc gets gat
<twb> Hey, is our tromey the same one that's on the SFC board?
<gits1225> ye
<twb> Huh, it is.
<tali713> and so is plan 9. :)
<gits1225> plan 9 is Rob Pikes work right?
<gits1225> when he was in bell labs?  [13:29]
<tali713> ,plan9
<fsbot> I think plan9 is the new iteration of unix by bell labs;
	http://www.cs.bell-labs.com/plan9dist/; see http://swtch.com/plan9port/
	for a unix port
<gits1225> ^^
<twb> 15:27 <tali713> and potheads, but yeah.  [13:30]
<twb> tali713: LSD
<lcc> http://webcast.berkeley.edu/
<twb> ,sicp-videos
<fsbot> [google]    http://www.emacswiki.org/emacs/EmacsChannelDemographics
<twb> Lame
<tali713> twb: sorry, I shouldn't have forgotten the LSD.  that helped with a
	  lot of research.
<twb> 15:31 <fsbot> [2] Accompanying video lectures are available gratis
      <http://swiss.csail.mit.edu/classes/6.001/abelson-sussman-lectures/>,
									  [13:31]
<twb> I don't know what this "webcast" shit is, but it's probably Wrong
<Sketch> so plan9 is a replacement for unix, but there is a port to unix?
<tali713> yes  [13:32]
<twb> Sketch: backport
<twb> Of some features, e.g. /proc
<tali713> because unix is good enough, so why change.
<twb> tali713: "inertia"
<lcc> http://webcast.berkeley.edu/playlist#c,s,All,3E89002AA9B9879E this is the
      one you want.
<twb> Once plan9 gets "blowjobs are just files" then it will suddenly become
      very popular
<tali713> lol
<tali713> why promote the Berkeley lectures, when you can listen to the
	  /authors/ lecture.  [13:33]
<lcc> true, but I'm just letting him/her know what else is out there.  [13:34]
<twb> Hm, http://web.mit.edu/alexmv/6.001/sicp.pdf was rendered with html2ps,
      which suggests it's based on my work... but it's clearly a very old crap
      render.
<twb> Pity I lost the better versions
<twb> lcc: dude, 0/0 is out there
<lcc> 0.o
<lcc> I'm getting high just watching those videos.  [13:35]
<twb> You should probably only watch 50cc at a time
<twb> If you're just starting out
<billyoc> Berkeley counts it in micrograms.  [13:36]
<tali713> about 80 will do the trick, but scale it up a bit if you want a real
	  ride.  [13:37]
<twb> Does LSD dosage scale with body mass  [13:38]
<tali713> yes but not by much.  blood doesn't.
<tali713> and you typically consume sublingually.  [13:39]
<twb> Aldous told me to try LSD
<billyoc> It can lead to Lisp.  [13:40]
<twb> I haven't gotten around to it
<tali713> you are certainly intelligent and knowledgeable enough that it
	  wouldn't be a waste.  but there are some things that once done, cannot
	  be undone.
<twb> tali713: like zippers
<muhoo> that's lovely. emacs24 has gotten into an unkillable lockup, attempting
	to read a fusermount sshfs that went away  [13:41]
* muhoo REFUSES to reboot just to make emacs regain control of its bladder
<tali713> profound experiences change people, for better or worse.  a strong
	  dosage of LSD is one of the more profound experiences you will have in
	  your life.  I can't recommend it, or argue against it.  it simply is
	  that way.
<twb> next time mount sshfs -o soft  [13:42]
<muhoo> never heard of that option, doesn't appear in docs
<muhoo> oic, it's a standard mount option
<synonymous> hi..is this #lsd? Good, just wanted to ask an emacs question :-)
<synonymous> On 23.3 I used to use window-size-change-functions hook to
	     save/restore window size on emacs startup. Now on 24.2 (trunk from
	     today) there's no such hook. I fould no mention of it on the
	     internet. How can I be notified whenever window size/pos changes?
<twb> Then file a feature request
<muhoo> naw, i rember soft from nfs days  [13:43]
<tali713> synonymous: hmm, i didn't build today, but I see
	  window-size-change-functions here.
<tali713> emacs-version => 24.2.50.1  [13:44]
<synonymous> tali713: does it depend on the system? OSX here. Yep 24.2.50.1
<twb> tali713: git describe --always surely
<scri> what's the right way to change my XML, nXml, and html syntax tables so
       autopair knows about my pairs  [13:45]
<muhoo> gawd, how in the fuck 
<scri> i'm wondering if i can make them all inherit something
<tali713> synonymous: xdisp.c, so probably
<twb> scri: pairs as in < and >
<twb> scri: or pairs as in <foo> and </> ?  [13:46]
<scri> yeah, i can change it but
<scri> should i set it with a hook, or directly
<scri> like <>
<scri> cause autopair reads the major mode syntax to tell what are pairs  [13:47]
<twb> Not sure, tbh
<twb> You could always just hamfist it with insert-pair
<scri> echh
<scri> well is there a way to see what syntax table inherits from what  [13:48]
<scri> or should i just look at definitions
<scri> (describe-syntax doesn't give the names)
<scri> huh, well the modes are autoloaded so i guess ill use hooks  [13:50]
<twb> NFI, that's heap big magic to me
<twb> I stay away from syntax tables
<twb> I suppose syntax tables are part of major modes so they follow the
      inheritance of define-derived-mode  [13:51]
<scri> yeah looks like it
<tali713> synonymous: perhaps you would prefer a different solution to your
	  problem?  [13:54]
<muhoo> fyi, there is no "-o soft" option to sshfs :-P  [13:55]
<twb> muhoo: 15:42 <twb> Then file a feature request  [13:56]
<DucBlangis> Finnaly got my old AIX box up that I have been toying with all day
	     when I should have been working
<DucBlangis> Need to find a way to connect to the internet with it now
<DucBlangis> NetScape, Starwriter, heh, nostalgia 
<twb> DucBlangis: please don't put AIX on the internet  [13:57]
<DucBlangis> Whys that?
<twb> Because it's aix
<twb> It would be like putting windows or php on the internet
<tali713> lol
<twb> Like putting poop in the punch bowl
<DucBlangis> It's for old times sake. I have an Ultrix/Tru64 box here too that
	     my Uncle brought over earlier  [13:59]
<DucBlangis> he kept a ton of his oldmachines
<twb> I used to know a girl who had a PDP-11 in her garage  [14:00]
<DucBlangis> Shit that would be interesting to play with  [14:01]
<DucBlangis> It would be like standing at an old arcade game though
<DucBlangis> was 11 the final in the series?
<dlam> is there a way to get a buffer to highlight like erc does in a text file?
       i saved a chat log etc.  [14:02]
<twb> NFI
<twb> I'm not a hardware weenie
<synonymous> tali713: ok, it's there, i was just looking for it in the wrong
	     place :-/ Still, the functions associated with the hook are not
	     being called. So, nothing appears in *Messages* after I run the
	     following and resize the frame http://pastebin.com/Tykw2d1f
									  [14:09]
<synonymous> tali713: what alternative did you have in mind?
<tali713> don't know, since I am not sure exactly what you seek to accomplish,
	  but, if I knew, I might have a suggestion.  [14:10]
<tali713> I assume you want to restore your frame to the size it was when you
	  closed emacs last?  [14:11]
<synonymous> tali713: precisely  [14:16]
<tali713> synonymous: also your hook is wrong, because it is a special hook,
	  hence being named /functions/. your function needs to accept an
	  argument.
<synonymous> yep, it has &optional unused
<tali713> oh, you wrote it differently than what you pasted?  [14:17]
<synonymous> yes, i didn't know why &optional was there, i copied it from
	     someone else a long time ago. now i know:)  [14:18]
<tali713> still why not save the window size in delete-frame-functions?  [14:19]
<synonymous> tali713: no reason (except maybe being more crash tollerant)
									  [14:20]
<tali713> or even better kill-emacs-hook
<tali713> synonymous: ahh, fair enough.
<tali713> so did you get it working?  [14:21]
<synonymous> well, something made it work when i restarted emacs (very uncleanly
	     with errors). Now it doesn't work again. I'll try to reproduce
									  [14:22]
<synonymous> the errors and what i did
<twb> 16:11 <tali713> I assume you want to restore your frame to the size it was
      when you closed emacs last?  [14:24]
<twb> Can't elscreen or desktop.el or something do that?
<twb> The correct solution, of course, is just to run Emacs full-screen all the
      time ;-)  [14:25]
<synonymous> twb: i think desktop.el couldn't do that last time i checked. not
	     sure about elscreen
<ivan-kanis> twb: did you have a date with the girl with a PDP 11?  [14:31]
<tali713> tiling window managers make this whole thing moot for me.
<synonymous> twb: i'll check out these thinks in a bit and i'm certainly
	     planning to make it more intelligent when it comes to fullscreen
	     and multiple displays, i just can't give up right now:)
<synonymous> tali73: i found that my function is being called when i split the
	     window but not when i resize...  [14:33]
<tali713> ahh, I see.  well, easy enough to switch it to one of the other hooks
	  mentioned.  [14:35]
<synonymous> yeh..  [14:40]
<twb> ivan-kanis: she was married to a playstation developer  [14:43]
<twb> Also she CLAIMS to have met me in person, but I don't remember it  [14:47]
<halpurt>         [14:48]
<halpurt> exit
<twb> halpurt: /quit
<twb> You chucklehead
<twb> Hmm, that's a pain in the arse.  ntfsprogs merged with ntfs-3g, so now you
      can't have the ntfs manipulation tools installed unless you install fuse
									  [14:57]
<aurelien`> twb, by the way, using non free things have always been be a pain in
	    the *ss.  [14:58]
<twb> aurelien`: ntfs-3g is free software.  [14:59]
<aurelien`> twb, hmm and which gnu/linux distro need it to make run a gnu os?
<twb> "free" is not the same thing as "needed to run a gnu os"  [15:00]
<aurelien`> sure but this tool is to make run non free things
<aurelien`> so
<twb> What non-free things?
<aurelien`> non free os
<twb> What non-free OS?  [15:02]
<aurelien`> twb, my mother want me to stay polite
<gits1225> *quietly re-assigns tmux key bindings
<twb> Your mother can go fuck herself  [15:03]
<aurelien`> twb, you certainly not says that sort of things in front of me
	    (physically)
<twb> Probably not; I daresay the French would not even give me a visa.  [15:04]
<aurelien`> i am Corsican twb.
<twb> Well the French certainly won't give me a visa for Corsica!
<aurelien`> why not?
<twb> Oh I take that back.  I assumed corsica was one of those little island
      nations in the mediterranean  [15:05]
<twb> Incidentally, my mum is in Franch right now if you want to go swear at her
<twb> *France
<aurelien`> don't speak from behind your mother, assume your felonies!  [15:06]
<aurelien`> be a man.
<twb> aurelien`: you were the one that brought up mothers
<aurelien`> twb, yes but that was speaking about respect.  [15:07]
<aurelien`> not to says, talk to my mother.
<aurelien`> which is not the same.
<twb> Oh, corsica is an island, it's just run by france  [15:12]
<twb> So I wasn't too far off
<aurelien`> We have not the same phylosophy.
<twb> What, so you're like the basques?  [15:13]
<aurelien`> no, just Corsican.
<twb> "A mercenary, bouncing off Bothari, stumbled past Mayhew who at last found
      a use for the stunner, black-jacking the man to his knees. Mayhew hit him
      a couple more times, rather experimentally. Bothari, hurtling past, paused
      to say disgustedly, "Not like that!" grab the stunner, and smash the man
      flat with one accurately placed blow."  [15:23]
<lcc> I want to make a function to format txt into a circle.  [15:25]
<scri> who wouldn't
<twb> lcc: metapost
<twb> Hell, you can do it in SVG in about three lines, IIRC
<ivan-kanis> twb: care to repeat what you've told me? My dumb ass computer
	     crashed...  [15:28]
<twb> ivan-kanis:     943:16:43 <twb> ivan-kanis: she was married to a
      playstation developer
<twb> That's all that matches twb.*ivan  [15:29]
<ivan-kanis> twb: thanx
<ivan-kanis> twb: obviously she is a keeper ;)
<twb> Probably
<twb> OBVIOUSLY it would depend if she was a hottie as well  [15:30]
*** gezgin (~gezgin@78.179.235.131) is now known as Guest94161  [15:35]
<srhb> SHouldn't this approximately be an "identity" advice?   [15:44]
<srhb> (defadvice erc-insert-timestamp-left (around hide-seconds activate)
       (ad-set-arg 0 '(ad-get-arg 0)) (ad-do-it))
<srhb> oops, without the quote
<twb> I'd have thought an identity advice would be more like (defadvice f
      (around))  [15:45]
<twb> I'd have thought an identity advice would be more like (defadvice f
      (before g ()))
<srhb> Right, sorry, more specifically I need to alter that first argument, but
       I can't even get the above to work
<twb> Dunno, sorry.
<taylanub> you guys are Canadians aren't you  [15:49]
<twb> Pfft, as if  [15:50]
<taylanub> with C-h f i can only find `ad-set-argument' here, shrb, no
	   `ad-set-arg'  [15:51]
<taylanub> same for -get
<srhb> taylanub: You are right! I have no idea how I made that mistake.  [15:52]
<taylanub> and that takes three args ... it could be that i have no idea what
	   i'm talking about 
<taylanub> (like some special functions that are valid inside advice definitions
	   ?)  [15:53]
<taylanub> or was that really the mistake ?
<twb> I think it's safe to say none of us have a fucking clue  [15:54]
<twb> Hmm, /me notices build host has 16GB of RAM.  /me decides not to bother
      ever writing the data to the HDD  [15:57]
<forcer> Shouldn't the kernel make that decision for you?  [15:58]
*** treehug_ (~treehug@cpe-70-124-83-7.austin.res.rr.com) is now known as
    treehug
<twb> Well if I used /root it'd try to write everything to disk every 60 seconds
      or so  [15:59]
<twb> But if I just put the entire build tree in /tmp it won't ever bother
<twb> As you can imagine, this is a built of a cowboy build box  [16:00]
<twb> As you can imagine, this is a bit of a cowboy build box
<nullie> /tmp is usually limited in size  [16:01]
<twb> nullie: yes, and in this case it's limited to 8GB
<twb> Since the PXE ROMs I'm building are only 80MB when compressed, plus
      perhaps half a gig of intermediary working tree, this is not a big deal
									  [16:02]
<nullie> nice
<twb> It's a terrible waste, but then this hardware was sitting idle until
      I... repurposed it  [16:03]
<twb> And guess what, the build has already fucking finished
<twb> epic
<twb> http://paste.debian.net/185223/
<taylanub> i would put an in-memory FS on /tmp on archlinux  [16:05]
<twb> "would" ? Meaning you don't already?  [16:06]
<taylanub> haven't bothered to do the same on OpenBSD
<twb> My /tmp has been a tmpfs for years and years
<taylanub> would as in used to
<nullie> tmpfs on /tmp type tmpfs (rw,nosuid,nodev,relatime)  [16:07]
<taylanub> there should be an international "fuck English" day
<nullie> it's by default in modern distros
<nullie> oh
<twb> nullie: IME it isn't.
<taylanub> maybe arch made it default as of now.  they're modernizing stuff up,
	   putting everything in /usr and switching to systemd and whatnot
									  [16:08]
<taylanub> how was that again .. symlinking /lib to /usr/lib ?  i think that's
	   what they did
<gits1225> archlinux is really a pain. It breaks every 2 weeks or so.
<twb> Moving /var/run into /run because "nobody boots off NFS anymore"
<nullie> breaks?
<gits1225> well yeah, some update, some change. There it goes.  [16:09]
<taylanub> gits1225: i used the testing repo for a long time and had no issues
<taylanub> were you using a DE and stuff ?
<gits1225> weird
<gits1225> Yeah
<taylanub> well then, might be that
<gits1225> Once setup gentoo is perfect
<taylanub> IMO not using a DE is the perfect solution :P  [16:10]
<gits1225> heh, not feasible thou
<twb> gits1225: har har har
<twb> Good one
<gits1225> ...
<taylanub> gits1225: i hope you meant "not feasible for me" ?  [16:11]
<gits1225> hehe yeah
<taylanub> that's fine, but tiling WMs are honestly not that much of a stretch
	   :P  [16:12]
<gits1225> but then, you can't run any software. It all looks ugly.
<taylanub> you just have three buttons and a border less for each window, and
	   they don't float around
<gits1225> dwm is really a class piece of software thou
<gits1225> flies
<taylanub> gits1225: do you use GIMP and stuff, or what ?  most things work just
	   fine with a tiler  [16:13]
<taylanub> but yeah, some other things tend to break hard
<twb> gimp and tiling WMs have worked fine for DECADES, gimp users are just
      whiny little bitches
<gits1225> well ... I use base kde
<twb> Now, xgo, that is a problem
<taylanub> xgo?  [16:14]
<gits1225> xgo?
<twb> It has a resize race
<twb> Because it tries to resize itself to be square all the time
<twb> And the WM tries to resize it back
<gits1225> xgo is wm ?
<twb> No, it's a go GUI
<twb> Duh
<taylanub> aha
<gits1225> oh
<taylanub> wait, go as in the board game ?  :P  [16:15]
<gits1225> golang :P
<taylanub> i thought it's some Google go stuff
<twb> taylanub: yes, obviously the game
<taylanub> Google should really rename go to issue9
<gits1225> hehe
<twb> You don't think I would stick my dick in google's blender, do you?
<taylanub> LOL
<gits1225> go is pretty neat thou
<twb> Says the gentoo weenie  [16:16]
<gits1225> ...
<tralala> anything in elisp that does (func list1 ... listN) -> ((E11 E21
	  ... EN1) ... (EN1 ... ENN))
<gits1225> google use gentoo btw for their chromeos
<gits1225> :P
<tralala> i.e. what zip does in python
<twb> tralala: yeah, a right fold of cons
<tralala> twb, thank you
<twb> wait, zip isn't quite the same as foldr (:)  [16:17]
<twb> If you know it's called zip you should be able to just write it from first
      principles, though.
<twb> I don't think there's a pre-defined function for it
<tralala> I can write it, I just wanted to avoid it.  [16:18]
<tralala> Actually my problem is vector arithmetics
<tralala> maybe I should use calc's functions
<taylanub> why don't i have any fold functions ?..  [16:19]
<twb> taylanub: because RMS hates you and because elisp is a shitty language
									  [16:20]
<twb> cl.el probably has reduce
<taylanub> LOL ok
<taylanub> i'll wait for guilemacs to be usable for me  [16:21]
<taylanub> i think it currently segfaults during build on 32b arches, while it
	   works fine on 64b
<penryu> ooh. are we talking about schemacs? is that making progress? I haven't
	 checked in a while.  [16:22]
<taylanub> http://git.hcoop.net/?p=bpt/emacs.git;a=summary penryu 
<penryu> thanks
<taylanub> if you're on 64b, you should be able to just build and use it sanely
<taylanub> i heard it still uses eamcs's elisp interpreter, but uses guile's GC
	   (libgc/boehm-gc) and SCM objects instead of Lisp_Object  [16:23]
<twb> Building and Emacs on top of guile isn't a win if it's still using elisp
      instead of r6rs as its default dialect  [16:25]
<penryu> I was just wondering that.  [16:26]
<twb> Er, R5RS
<twb> R6RS is the "pragmatic" one, i.e. not a real scheme
<twb> If you want pragmatism well perl and python are >over there<
<twb> Time for me to fuck off home
<tali713> taylanub: like always, if you want fold you can easily write it
	  yourself.  it doesn't have much usage in an editing language.
<taylanub> tali713: the devs still don't officially accept elisp as a
	   general-purpose language ?  :P  [16:28]
<bipt> twb, i can't say i agree  [16:30]
<tralala> can I map arithmetic operators? e.g. (map '+ (1 2 3))
<bipt> elisp with bignums, concurrency, continuations, etc. > elisp today
<taylanub> tralala: why not ?
<bipt> even if scheme is a better language
<taylanub> tralala: i mean, they are functions in lisp, you don't have
	   "operators" :P
<twb> bipt: how do you have those if you're still using elisp  [16:31]
<aidalgol> tralala: Short answer: yes.
<bipt> twb, by implementing elisp atop the guile vm (actually, just using
       libguile as the basis for the interpreter makes those things much easier)
<twb> taylanub: (apply #'+ '(1 2 3))
<taylanub> twb: the guile VM supports them so adding elisp syntax to use those
	   features would be trivial i guess
<taylanub> tralala: what twb said  [16:32]
<bipt> guile has a working, practical emacs compiler (you can run real
       batch-mode elisp programs with it)
<twb> Sorry, wrong nick
<bipt> er, elisp compiler
<aidalgol> Anyone here tough enough to have played Amnesia?
* aidalgol is a chicken.
<twb> Also of course mapc, but no foldr in elisp by default except for reduce
<twb> bipt: I already use emacs -batch! :-)
* aidalgol sees first monster, runs, hides, and quits.
<twb> http://cyber.com.au/~twb/snarf/ed.el
<tralala> twb, taylanub, thank you  [16:33]
<voltagex> Hi, using emacs via a PuTTY session, is there any reason
	   right-click-paste wouldn't work? I have mouse-mode enabled and that's
	   the only thing I can think would conflict with it  [16:34]
<tralala> twb, there do I read about this #'+?
<bipt> haha
<bipt> another step towards posix compliance for the emacs operating system
									  [16:35]
<newcup> ,df +
<fsbot> + is a built-in function in `C source code'.
<fsbot> (+ &rest NUMBERS-OR-MARKERS)
<fsbot> Return sum of any number of arguments, which are numbers or markers.
<loke_erc> voltagex: that's exactly why you have a problem  [16:38]
<taylanub> tralala: #'foo returns the function named by the symbol foo  [16:39]
<taylanub> section Functions > Anonymous Functions talks about this  [16:41]
<taylanub> it's shorthand syntax for the macro `function', just like ' is
	   shorthand for `quote'
<tralala> taylanub, thanks. I tried '+ and #'+ and they work the same.
<taylanub> yeah, i think elisp does some magic to allow the former too  [16:42]
<taylanub> but using #' is "more correct" i think
<tralala> all right, thanks
*** Guest94161 (~gezgin@78.179.235.131) is now known as gezgin  [16:50]
*** gezgin (~gezgin@78.179.235.131) is now known as Guest74534
<loke_erc> d  [16:56]
<loke_erc> oops
<tali713> tralala: it is possible that when compiled #' compiles correctly,
	  while ' does not.  [16:58]
<tali713> ,(macroexpand #'nil)
<fsbot> nil  ..(symbol)
<tali713> ,(macroexpand '#'foo)  [16:59]
<fsbot> (function foo)  ..(cons)
<tali713> ,(macroexpand ''foo)
<fsbot> (quote foo)  ..(cons)
<tali713> now, let's say you wanted to make < n-ary instead of binary... you
	  would want to save the function value of < first,,(symbol-function
	  #'<)  [17:01]
<fsbot> BEEEP: Symbol's function definition is void: fs-symbol-function
<tali713> fsbot: you suck.
* fsbot is broken, like any other bot.
<tali713> (symbol-function '<) => #<subr <>
<penryu> bots ~= mail clients?
<mindbender1> how do I reference an existing emacs process?  [17:03]
<tali713> i.e. (defvar real< (symbol-function '<)) (fset '<2 real<) (defmacro <
	  (num1 num2 &rest nums) "Return t if numbers are in increasing order.
	  All must be numbers or markers." `(and (<2 ,num1 ,num2) (if ',nums (<
	  ,num2 ,(car nums) ,@(cdr nums)) t)))  [17:11]
<mindbender1> Is there a way to list open emacs sub-processes  [17:30]
<loke_erc> M-x list-processes  [17:32]
<mindbender1> why does `switch-to-buffer-other-window` return nil instead of the
	      buffer name.   [17:45]
<resure> Emacs shell is so inconvenient after zsh. Lack of normal autocomplete
	 kills my performance  [17:59]
<tali713> support exists, just hasn't been setup.  [18:01]
<aidalgol> OK, so I've marked a bunch of spam messages in Gnus as "processable."
	   Now how do I delete them (all at once)?  [18:04]
<ijp> B-DEL
<aidalgol> Ah, so same action, it just gets applied to all marked messaged.
									  [18:05]
<aidalgol> thanks, ijp!
<ijp> rudybot: quote  [18:13]
<rudybot> ijp: let's applaud those sensitive to the needs of others
<nicferrier> laudable
<ijp> quite
<nicferrier> quite laudable? you are not a generous man.  [18:14]
<taylanub> resure: eshell is sure no match to something like zsh, but many
	   things zsh does can be done with other emacs tools, like dired
									  [18:17]
<resure> taylanub: you are right, but it's hard to switch from tool, where I can
	 type `e ~/c/pn/a/m/a<tab><return>` to edit
	 ~/Code/project-name/app/models/ability.rb.  [18:20]
<resure> taylanub: and there are a lot of functions like convenient ssh host
	 autocomplete.  [18:22]
<resure> Small question: why emacs shell doesn't use system PATH? `echo $PATH`
	 is ok, but I can't use bins from there  [18:24]
<ijp> are you on mac os?  [18:28]
<ijp> ISTR there's an issue on that platform
<nicferrier> yeah, I thought it did use the system PATH.  [18:29]
<nicferrier> I like eshell, I am trying to gradually move over to it  [18:32]
<ijp> ,macenvironmentvariables  [18:33]
<fsbot> MacEnvironmentVariables is [0] (info "(emacs)Mac Environment Variables")
<fsbot> [1] to set your PATH variable to be the same as $PATH in your current
	shell, in a terminal type: defaults write $HOME/.MacOSX/environment PATH
	$PATH, ..[Type ,more]
<nicferrier> I would like to hack on it tbh to make it do more.
<ijp> I knew I'd remember the botbbdb entry eventually
<tali713> for completion see for example pcomplete/cvs
<tali713> ,df pcomplete/cvs
<fsbot> pcomplete/cvs is a compiled Lisp function in `pcmpl-cvs.el'.
<fsbot> (pcomplete/cvs)
<fsbot> Completion rules for the `cvs' command.
<EnglishGent> hi all  [18:34]
<EnglishGent> I'm still battling getting ELPA to behave itself here... if I try
	      to add marmalade to the list of package archives using:
	      (add-to-list 'package-archives  [18:35]
<EnglishGent> 	     '("marmalade" . "http://marmalade-repo.org/packages/") t)
<EnglishGent> I get told: (void-variable package-archives)
<EnglishGent> I *have* run both (require 'package) & (package-initalize)
<EnglishGent> anyone have any bright ideas? :)  [18:36]
<EnglishGent> (note: this is emacs 24 native version for windows)
<nicferrier> you don't need any of that to make marmalade work  [18:38]
<EnglishGent> hi nicferrier :)
<nicferrier> but if you're getting a void-variable error it means packaging
	     isn't loaded.
<nicferrier> can you M-x list-packages
<nicferrier> ?
<EnglishGent> ah - well I'm just following instructions from various blogs
<EnglishGent> yes - that works (M-x list-packages)  [18:39]
<nicferrier> the only thing you need to look at *should* be that wiki page I
	     gave you yesterday
<EnglishGent> um.. sorry - can you send that again?
* EnglishGent does appreciate the help btw :)
<nicferrier> http://emacswiki.org/emacs/ELPA
<nicferrier> and looking at it might be wrong coz that add-to-list syntax looks
	     wrong  [18:40]
<nicferrier> try the setq version at the top there
<nicferrier> with or without melpa (melpa tends to be more cutting edge
	     packages)
<tali713> ,marmalade
<fsbot> marmalade is, like, [0] spreadable elisp at http://marmalade-repo.org
<fsbot> [1] an emacslisp package repository you can add to your package archive
	list for extra add ons,
<fsbot> [2] with latest news details in ,marmalade-status
<nicferrier> ,marmalade-status  [18:41]
<fsbot> marmalade-status is [0] marmalade is up
<fsbot> [1] the tar upload bug is fixed!
<EnglishGent> one sec
<tali713> that add-to-list should work in an eval-after-load  [18:42]
<EnglishGent> ty btw :)  [18:43]
<nicferrier> EnglishGent: it's no problem, I maintain marmalade, I am happy to
	     do it.
<EnglishGent> :)  [18:45]
<EnglishGent> ah... well using the setq statement from
	      http://emacswiki.org/emacs/ELPA works without error... but when I
	      do package-list-packages  [18:47]
<EnglishGent> it says: Failed to download `marmalade' archive.
<EnglishGent> though it *does* present me with a long list of packages
<nicferrier> ok.   [18:48]
<resure> ,macenvironmentvariables
<fsbot> MacEnvironmentVariables -- [0] (info "(emacs)Mac Environment Variables")
<fsbot> [1] to set your PATH variable to be the same as $PATH in your current
	shell, in a terminal type: defaults write $HOME/.MacOSX/environment PATH
	$PATH, ..[Type ,more]
<resure> ,more
<EnglishGent> (I've used emacs for quite a while - though I'm not at all
	      familiar with ELPA/Emacs 24 & the new approach to package
	      management)
<fsbot> [2] note, unless you add this to your .bashrc it will not update.
<nicferrier> lemme check there isn't a problem.
<tali713> i see marmalade currently
<nicferrier> marmalade is fine
<EnglishGent> hi tali713
<nicferrier> can you see marmalade from your web browser?  [18:49]
<EnglishGent> I was about to say if I go to the url in a web browser it looks ok
<nicferrier> ok.
<nicferrier> this is pretty strange
<EnglishGent> yup - http://marmalade-repo.org/packages loads without problems
<EnglishGent> let me see what happens if I skip my .emacs
<EnglishGent> (that was the source of problems yesterday)  [18:50]
<nicferrier> hang on
<nicferrier> I have a test script you can use
<EnglishGent> ok :)
<nicferrier> https://gist.github.com/3273143
<resure> Awesome, now emacs shell works well  [18:51]
<nicferrier> save that and then you can go: bash marmalade-test.el
<nicferrier> for example
<resure> Is there good examples of eshell configs? Like oh-my-zsh
	 (https://github.com/robbyrussell/oh-my-zsh) for zsh
<EnglishGent> ah ... on windows - no bash unless I run cygwin (which is still
	      stuck on emacs 23) - cant i just evaluate it in a buffer?
									  [18:52]
<nicferrier> emacs -Q -l marmalade-test.el  [18:53]
<nicferrier> then
<EnglishGent> ok :)
<nicferrier> you might need to call that function still
<tali713> resure: not really, you can read the source. or what exists of the
	  manual  [18:57]
<EnglishGent> hmm... I get a whole bunch of warnings about fakir.el when I run
	      it - do you want me to stick them in a pastebin somewhere?
<EnglishGent> no error as such
<nicferrier> you could, just so I could check.  [18:58]
<EnglishGent> ok - one sec
<nicferrier> fakir is just the package I download to test. it's fairly stable so
	     I know when it changes.
<EnglishGent> http://pastebin.com/mahzDycu  [18:59]
<EnglishGent> I started emacs as you said & then just did M-x marmalade-test --
	      that was the output :)  [19:00]
<nicferrier> yeah, that's fine  [19:04]
<nicferrier> just warnings about my sloppy coding.
<EnglishGent> ok..   [19:05]
<nicferrier> so if that worked it's your config  [19:06]
<EnglishGent> I just did:  (setq package-archives '(("gnu"
	      . "http://elpa.gnu.org/packages/")
<EnglishGent>                            ("marmalade"
	      . "http://marmalade-repo.org/packages")
<EnglishGent>                            ("melpa"
	      . "http://melpa.milkbox.net/packages/")))
<nicferrier> so you can check by looking in the tmp/elpa is creates
<EnglishGent> & then package-list-packages
<nicferrier> M-x list-packages should be enough
<taylanub> resure: C-x f of emacs also does nice completion, especially with ido
	   mode.  effectively you'd be typing the same thing you described
<EnglishGent> & then I get (in *Messages*)
<EnglishGent> Contacting host: elpa.gnu.org:80
<EnglishGent> Saving file
	      c:/Users/MARTIN~1.WAT/AppData/Local/Temp/marmalade-11660/.elpa/archives/gnu/archive-contents...
<EnglishGent> Wrote
	      c:/Users/MARTIN~1.WAT/AppData/Local/Temp/marmalade-11660/.elpa/archives/gnu/archive-contents
<EnglishGent> Contacting host: marmalade-repo.org:80
<EnglishGent> Failed to download `marmalade' archive.
<EnglishGent> Saving file
	      c:/Users/MARTIN~1.WAT/AppData/Local/Temp/marmalade-11660/.elpa/archives/melpa/archive-contents...
<EnglishGent> Wrote
	      c:/Users/MARTIN~1.WAT/AppData/Local/Temp/marmalade-11660/.elpa/archives/melpa/archive-contents
<EnglishGent> :|  [19:07]
<nicferrier> what the actual fuck?
<YoungFrog> could the missing ending '/' be possibly causing this ?
<nicferrier> try it  [19:08]
<EnglishGent> ok
<EnglishGent> ah ha! that seems to fix it!
<EnglishGent> no warning this time
<nicferrier> ffs.
<nicferrier> sorry.
<nicferrier> was the ELPA page wrong?
<EnglishGent> hi - and thanks YoungFrog :)
<EnglishGent> yes .. the code on the emacs wiki http://emacswiki.org/emacs/ELPA
									  [19:09]
<EnglishGent> has no slash
<nicferrier> fixing now
<EnglishGent> and I didnt spot that at all!
<EnglishGent> thank you everyone :)
<YoungFrog> Yep, hello
<nicferrier> fixed.
<EnglishGent> :)  [19:10]
<nicferrier> YoungFrog: cheers dude
<EnglishGent> again thank you for the help nicferrier & YoungFrog :)  [19:11]
* EnglishGent hopes he will be able to contribute something back one day :)
<resure> taylanub: yes, C-x C-f with ido mode is great. It's bad, that there are
	 no the same thing for eshell commands  [19:22]
<nicferrier> EnglishGent: elisp is up and coming. it's a great language now!
	     make stuff!  [19:27]
<tralala> can elisp tell me how many days are between date A and B?  [19:29]
<nicferrier> it can tell how much time there is, yes  [19:30]
<tralala> how?  [19:31]
<nicferrier> tralala: ,,df time-subtract
<fsbot> time-subtract is a compiled Lisp function in `time-date.el'.
<fsbot> (time-subtract T1 T2)
<fsbot> Subtract two time values, T1 minus T2.
<fsbot> Return the difference in the format of a time value.
<tralala> thank you, nicferrier
<tralala> ok, this returns a time list, how do I tell how many days are in it?
									  [19:33]
<nicferrier> I think time-to-days will help  [19:34]
<nicferrier> something like (- (time-to-days t1) (time-to-days (time-subtract t2
	     t1)))  [19:35]
<tralala> nicferrier, thanks a bunch, (- (time-to-days t1) (time-to-days t2))
	  does it  [19:39]
<nicferrier> I wish I understood emacs character encoding  [19:54]
<nicferrier> I've just done this (url-unhex-string "%C3%B6") which should
	     produce ö but it doesn't.  [19:55]
<nicferrier> as far as I can see my buffer is in UTF-8
<taylanub> what did it produce ?  [20:06]
<nicferrier> "Ã¶"  [20:07]
<taylanub> :/
<nicferrier> which clearly means it think the two bytes are two characters
<taylanub> same here
<nicferrier> but C3 is clearly utf-8 encoded upper byte
<nicferrier> maybe I have to do some coding system thing  [20:08]
<nicferrier> frustrating sometimes.  [20:10]
<nicferrier> I had to use a browser to prove it was correct
<taylanub> nicferrier: i think the problem could be that the implementation
	   converts escaped sequences one-by-one  [20:11]
<taylanub> during which i guess the byte c3 is taken to be something non-utf-8 ?
									  [20:12]
<taylanub> a better implementation would turn it into a bytevector and back into
	   a string, or something
<nicferrier> well, that would be a problem.
<nicferrier> so it's just broken?
<taylanub> it uses `byte-to-string' on individual bytes  [20:14]
<nicferrier> right. that's nuts.
*** PuercoPop (~PuercoPop@190.41.173.174) is now known as Guest75729  [20:26]
*** Guest75729 (~PuercoPop@190.41.173.174) is now known as PuercoPop420  [20:27]
<JordiGH> Huh.  [20:38]
<JordiGH> I'm about to be sworn in as a GNU maintainer.
<JordiGH> I solemnly swear to uphold software freedom, and the principles for
	  which it stands...
<JordiGH> Four freedoms, under no god...
<JordiGH> And the GPL, which protects them, as handed down to us by patriarchs
	  rms and Eben.  [20:39]
*** theos (~theos@unaffiliated/theos) is now known as Guest42013  [20:40]
<youlysses> JordiGH: Octave?  [20:42]
<JordiGH> youlysses: Yes.
<youlysses> Coolio! Are you excited, or just "whatever"?
<JordiGH> It means i can now participate in the secret GNU list.  [20:43]
<JordiGH> Where we decide the fate of the free world.
<JordiGH> Well, the free software world.
<JordiGH> I also get a cool hat:
	  http://images.halloweencostumes.net/lodge-man-hat-zoom.jpg
									  [20:44]
<youlysses> The Gnuminati?  [20:46]
<JordiGH> Yes.
<JordiGH> I wonder if I'll get jordigh@gnu.org too...
<fledermaus> woo, laptop working again.  [20:47]
* fledermaus strokes his precious, precious computer.
<youlysses> I'd be better if you guy's wore FEZs. Also, yeah probally.
<youlysses> fledermaus: What was "wrong" with it?
<JordiGH> fledermaus: http://jordi.inversethought.com/blog/were-back-in-the-air/
									  [20:48]
<fledermaus> youlysses: bug in the cryptsetup tool left me without access to any
	     filesystems... but it looked like total hard disc failure. 
									  [20:50]
<taylanub> using dictionary keys to store data <3
<JordiGH> fledermaus: Did you recover your data?  [20:51]
<fledermaus> JordiGH: nothing was actually gone. 
<taylanub> { "type": "foo", "content": "bar" }  can be written as  { "foo":
	   "bar" }  just as well
<fledermaus> the bug just prepared an initramfs that didn't know about your
	     cryptloop 
<fledermaus> but I ended up installing my new work laptop anyway.  [20:52]
<tamouse__> good morning  [20:59]
<JordiGH> Hm, how's this? http://codepad.org/Sfab0r4a  [21:00]
<tamouse__> i'm having a problem with emacs and mh-e mode
<tamouse__> when i try to compose a message, it goes into an infinite loop using
	    up all the cpu
<tamouse__> if i compose a message from the commandline, using prompter, it
	    works fine  [21:02]
<srhb> I have this vague idea of having Emacs start up with an org-mode buffer
       with recent projects etc. in view, sort of a menu that can easily be
       altered. Has anyone done something similar? Any pointers on how to
       achieve it?  [21:03]
<srhb> Perhaps org isn't really the best way to do it, hm  [21:04]
*** PuercoPop420 (~PuercoPop@190.41.173.174) is now known as PuercoPop
<JordiGH> ,session  [21:06]
<fsbot> [->] hmm, SessionManagement is [0] at
	http://www.emacswiki.org/cgi-bin/wiki.pl?SessionManagement
<fsbot> [1] http://emacs-session.sourceforge.net,
<fsbot> [2] desktop.el,
<fsbot> [3] http://emacs-session.sourceforge.net/related.html
<youlysses> fledermaus: That would've sucked. Glad you got it resolved!  [21:07]
*** resure_ (~resure@static.210.91.47.78.clients.your-server.de) is now known as
    resure  [21:29]
*** Guest68635 (~user@2.edbed1.client.atlantech.net) is now known as Macphisto
									  [21:35]
<tech1> is there a command to show navigate previous(+forward) files shown on a
	buffer/window? or do i have to set this up myself in the config
	file... eg say theres a file im reading in a buffer, then i open a new
	file in the same buffer/window, but want to go back to the previous
	opend file in the same buffer/window etc  [22:05]
<JordiGH> What determines the indentation level in elisp? It's smaller than the
	  tab width, right?  [22:06]
<srhb> tech1: Forward or backwards one buffer or just want to switch to _some_
       buffer?  [22:07]
<srhb> tech1: You either want C-x b, C-x <LEFT> or C-x <RIGHT>  [22:08]
<tech1> well i use C-x C-f to switch to a new file....... so i meant forwards or
	backwards yeh.. ok ill try that
<srhb> tech1: There's also a full-buffer buffer menu with C-x C-b
<srhb> tech1: (You should do the tutorial)
<tamouse__> switch-to-buffer (C-x b) switches to another buffer, the default is
	    the last buffer visited before the current one
<tech1> oh cool. C-x *arrow works :)  [22:09]
<tech1> which tutorial? iv looked at several but none told me how to do that bit
<srhb> tech1: The builtin one, I think it goes over that.
<tamouse__> the inbuilt emacs tutorial, tech1 
<srhb> tech1: C-h t
<tech1> oh i see. ok ill do it too  [22:10]
<srhb> It's a bit tedious, but really, those are the absolute basics that you
       need to know.
<tech1> yeh. just been reading stuff from google so far
<srhb> tech1: For buffer switching I think a lot of people use ido-mode, you
       should probably put that down in your notes for a few weeks from now. :-)
									  [22:11]
<tech1> ok ill make a note of that too
<ljp`> Hi, I want to get a beautiful css for org-mode when i export org file
       into a html  [22:14]
<ljp`> who can help  [22:15]
<ljp`> I just need a css template for org-mode
<tamouse__> css? in emacs?  [22:16]
<tamouse__> what am i missing?  [22:17]
<arussel> I'm using emacs (standard, not aqua) on OSX, where is the standard way
	  to put new .el file ? (htmlize.el)  [22:23]
<tamouse__> arussel: you can put them anywhere on the emacs load-path. a
	    convention is to put them in ~/.emacs.d/  [22:25]
<fledermaus> use htmlfontify because it's built in 
<arussel> fledermaus: then what do I need to do for orgmode export to use it ?
*** PuercoPop (~PuercoPop@190.237.7.137) is now known as Guest54844
<fledermaus> and htmlize hasn't (afaik) been updated to handle all the new
	     possible face specs
<fledermaus> arussel: you need to hassle the org authors :)  [22:26]
*** Guest54844 (~PuercoPop@190.237.7.137) is now known as PuercoPop  [22:28]
<EnglishGent> does anyone know how to make the windows native version of emacs
	      understand cygwin shortcuts?  [22:42]
<EnglishGent> :)
<fledermaus> ,cygwin  [22:45]
<fsbot> From memory, cygwin is [0] A Unix environment for Windows. See
	http://cygwin.com/
<fsbot> [1] a perfectly solid Unix in the sense that a solid house built on top
	of a giant cabbage would still be a solid house.
<fledermaus> ,ge cygwin
<fsbot> [google]    http://emacswiki.org/emacs/NTEmacsWithCygwin
<fsbot> http://www.emacswiki.org/emacs-es/cygwin-mount.el
<sm> morning all  [22:49]
<kodein> good afternoon  [22:50]
<sm> does someone have automation for easily scrolling erc windows so that
     everything you've read is hidden (but new message will still appear - which
     they don't if you C-lC-l to put ERC> at line 1) ?  [22:53]
<sm> or, a fix for that last issue, in fact
<tech1> is there a website anywhere with lots of .el files/templates?  [22:54]
<wbooze> ,emacswiki  [22:55]
<fsbot> hmm, EmacsWiki is [0] http://www.emacswiki.org
<fsbot> [1] Best Emacs resources ever, along with #emacs,
<fsbot> [2] being backed up. See http://www.emacswiki.org/cgi-bin/wiki/Backups,
<fsbot> [3] sadly not written in a Lisp language
<wbooze> ,koders
<fsbot> [google]    http://www.emacswiki.org/emacs/ExpandMemberFunctions
<fsbot> http://emacswiki.org/emacs/TrampMode
<wbooze> uups
<fledermaus> turn on erc-keep-place in erc-modules 
<wbooze> koders.com or so
<fledermaus> "keep-place: Leave point above un-viewed text"
<wbooze> has some too
<tech1> ok ill look at wiki
<wbooze> and elpa
<tech1> cool  [22:56]
<EnglishGent> hi sm, kodein  [23:00]
<EnglishGent> and ty fsbot :)
<sm> fledermaus: thanks, actually I have that turned on. Maybe I should turn it
     off ? I don't know what "Leave point above un-viewed text in other
     channels." means exactly.  [23:01]
<fledermaus> sm: it means the point (cursor) should stay at the last bit of text
	     that was read, I think.  [23:05]
<JordiGH> Why does Emacs behave the way it does with tabs by default?  [23:07]
<zellio> JordiGH: why does emacs do anything it does by default with tabs
<zellio> or with anything
<JordiGH> By default it uses a mix of tabs and spaces to indent and align. The
	  alignment level = tab-with*tabs + spaces.
<JordiGH> This algorithm does nothing but pointlessly use tabs and break
	  alignment if you ever change the tab-width.  [23:08]
<zellio> Because that is one of the chrches of tabbing
<JordiGH> It serves no useful purpose to use tabs this way. Or does it? I don't
	  know of one. Save a few bytes in the source tree?
<zellio> because it marks a difference between alignment and lexical scoping
									  [23:09]
<zellio> like Tabs for scope. spaces to align
<zellio> it's another method to help describe your code
<JordiGH> No, no, it's not smart tabs.
<JordiGH> That's not what Emacs does by default.
<JordiGH> It's the division algorithm.
<sm> fledermaus: I turned it off, but no effect on the
     not-showing-new-messages-when-scrolled-fully-down issue. 
<JordiGH> m = qn + r.
* sm looks for erc issue tracker  [23:10]
<JordiGH> The trailing number of spaces is always the remainder after dividing
	  the indentation or alignment level by the tab-width.
<JordiGH> By default, anyways.
<fledermaus> oh gods is someone proposing dumbtabs again?  [23:12]
<jlf> untabify ALL teh elisp
<JordiGH> what jlf said.
* billyoc summons the Grand Inquisitor.
<zellio> ,doom
<fsbot> zellio, I think Doom is at http://www.emacswiki.org/cgi-bin/wiki.pl?Doom
<zellio> ...
<zellio> I hate you sometimes fsbot   [23:13]
<JordiGH> It's so difficult to get people to even understand what the problem
	  is, because (1) they have defaults in which the problem isn't there
	  and (2) whitespace is mostly invisible.
<JordiGH> So their defaults don't coincide with yours, they think the problem is
	  you, not that there is code that needs certain defaults to be
	  readable.
<jlf> JordiGH: screenshots!
<fledermaus> tbf as long as no one makes whitespace semantically important you
	     can always trivially reindent.  [23:14]
<JordiGH> I hope they don't make the argument that dumbtabs save bytes in the
	  source code...
<fledermaus> and no-one wold be that stupid or crazy, not since cobol, right?
<jlf> srsly, screenshots of a recent emacs, -Q, editing selected emacs elisp
      files
<jlf> fledermaus: you can reindent but you have to back out whitespace changes
      that are unrelated to your changes before committing  [23:16]
<jlf> i guess you could tell diff to ignore whitespace changes when producing
      patches, then apply the resulting patches to the original file, but that's
      ridiculous  [23:17]
<fledermaus> yeah. if I'm taking over a file I tend to just hae one change to
	     purge all the tabs 
<fledermaus> then start doing the real work  [23:18]
* ashawley seconds JordiGH's motion to throw `indent-tabs-mode' over the side of
  the boat
<fledermaus> ashawley: you have to keep it because sometimes people need to
	     conform to retarded house styles 
<JordiGH> fledermaus: They don't want to clutter bzr annotate output, though.
<JordiGH> bzr diff seems to have an ignore whitespace option, but annotate
	  doesn't.
<fledermaus> "fuck bzr"
<JordiGH> Argh.
<zellio> fledermaus: let em write a macro
<JordiGH> fledermaus: Fucked or not, gotta work with them.
* Odin- throws a snake at fledermaus.  [23:19]
<jlf> 'What you propose will make most lines in elisp files to be "new" from
      Bazaar's POV, sabotaging the usefulness of "bzr annotate".'
<fledermaus> zellio: no. the default should be no tabs anywhere. but making life
	     difficult for users already dealing with retarded house styles is
	     not good.
<jlf> tl;dr if bzr ain't happy, ain't nobody happy
<fledermaus> jlf: we're using bzr, so we're already unhappy, so nothing will be
	     lost   [23:20]
<tromey> just stick something in .dir-locals.el
* zellio hasn't used default emacs in god knows how long
<Odin-> Does anyone?
<JordiGH> tromey: The elisp source files aren't always in the tarball or bzr
	  repo, e.g. emacs-src package in Debian.
* ashawley likes to dance to house style  [23:21]
<tromey> ship the .dir-locals.el file
<tromey> or make a zillion local-variables sections
<jlf> tromey: ha, make each source file specify the secret sauce needed to
      unfuck it  [23:23]
<JordiGH> tromey: Or get rid of tabs, make sure it looks good even if you're not
	  using Emacs.
<tromey> wait, not using emacs?  why bother at all
<wbooze> what happened to escreen in 24 ?  [23:24]
<wbooze> no tabbing anymore ?
<wbooze> erm sorry i meant the android port  [23:25]
<zellio> is there a jsp-mode for emacs that isn't made of suck?  [23:31]
<loke> For Java and JSP, the best tool is really IntelliJ IDEA. I'm also sad
       that Emacs isn't really useful for that, but IDEA is fantastic for what
       it is  [23:34]
<cluck> :)  [23:40]
<dca> zellio: netbeans can do jsp as well  [23:45]
<zellio> T_T
<tech1> what problems does emacs have with java?  [23:49]
<tech1> because im planning to do java/android on emacs
<JordiGH> tech1: It doesn't help you much other than with editing the source
	  code.
<JordiGH> Java doesn't get a lot of love on Emacs.  [23:50]
<JordiGH> It does have a few other features, but I ended up using Eclipse to
	  build and Emacs to edit the source code.
<tech1> i see
<fsmunoz> tech1: I think it is related with all the automation that other
	  editors do in terms of XML files for the build process, etc, etc. 
<ashawley> Emacs helps if you're using Clojure, no??
<fsbot> Highly likely.
<tech1> i only really need syntax colors and compiling stuff..... i hated
	eclipse's auto completion etc  [23:51]
<zellio> Gosmacs
<ashawley> heh
<fsmunoz> ashawley: yes, mostly because of leiningen that makes the build
	  process less "javaish"
<Macphisto> ashawley: Totally.
<Macphisto> ashawley: I heard if you use emacs and write clojure, technomancy
	    shows up at your house and does your dishes.
<Macphisto> I've tested this rumor and when I get back home, my dishes are done.
									  [23:52]
<fsmunoz> Macphisto: I can confirm, we also ended up singing karaoke in the
	  night, good stuff. And leiningen isn't bad as well.
<Macphisto> The man scours a chaffing dish like a professional.
<fsmunoz> But regarding java, using RSA or Eclipse automates a lot of stuff,
	  boilerplate and accessory files are created automatically and one
	  presses "BUild", "Debug", "Package", etc. With Emacs it is, as JordiGH
	  said, more a matter of editing code, the rest is pretty much done by
	  hand. At least last time I saw.  [23:54]
<fsmunoz> Although there was something that was trying to mend this  [23:55]
<fsmunoz> Also,
	  http://www.computerworld.com.au/article/207799/don_t_use_emacs_says_java_father/#closeme
<rudybot> http://tinyurl.com/cz863h9
<fsmunoz> "James Gosling has urged coders to stop using the antiquated Emacs
	  text editor and move to a more modern IDE like Sun's own open source
	  NetBeans."  [23:56]
<zellio> Gosling can suck my dick on that one
<zellio> NetBeans isn't bad, but it's not as good as emacs
<fsmunoz> He also talks a lot about AJAN and stuff, and this pearl: "While
	  NetBeans is open source, Gosling said almost nobody bothers to modify
	  its code because of its complexity."
<fsmunoz> What better reason would I need? "Use this, it's open but it's so
	  complex that nobody touches it"  [23:57]
<tech1> i think emacs requires more configuration -but once thats done it works
	faster than an ide
<fsmunoz> ,jdee  [23:58]
<fsbot> [->] I think JavaDevelopmentEnvironment is [0] at
	http://www.emacswiki.org/cgi-bin/wiki.pl?JavaDevelopmentEnvironment
<fsbot> [1] project home is at http://jdee.sourceforge.net/

[Fri Aug 24 2012]
<fsmunoz> Maybe we are all wrong? Maybe we are ultra-conservative Luddites that
	  persist on using antiquated stuff?  [00:00]
<sellout42> fsmunoz: I checked Yegge's post – I'm a liberal.
* fds is.
* ashawley knows people who work for Sun and write Java in Emacs
<fsmunoz> What a frightening idea, I will post someting to my gopher blog about
	  this.
<zellio> fsmunoz: the emacsen will not be question, hail the parenthesis  [00:01]
<fsmunoz> sellout42: ahh, yes, that, the programming political compass
<ashawley> But maybe ultra-conservative Luddites work for Sun!
<ashawley> s/Sun/Oracle/
<fsmunoz> zellio: sorry brother, it was a moment of weakness.
<zellio> fsmunoz: it happens to the best of us, say three our RMSes and do two
	 conses  [00:03]
<fsmunoz> :)  [00:04]
<gits1225> "An .emacs of a thousand lines begins with a single form"  [00:08]
<gits1225> Truer words were never spoken
<zellio> followed by, what are you carzy? break that shit up into more than one
	 file  [00:09]
<fxiny> why ? .emacs confusion is the primeval form of encryption  [00:10]
<zellio> hahaha
<srhb> I can never figure out which file I put what in. -_-  [00:12]
<srhb> But in theory, I have a very nice .emacs.d layout
<jaimef> is there a way to open a file as a specific format from dired? have .s
	 gzipped files which it assumes are assembly  [00:16]
<jlf> ,dv auto-mode-alist   [00:18]
<fsbot> Alist of filename patterns vs corresponding major mode functions.
									  [00:19]
<fsbot> Each element looks like (REGEXP . FUNCTION) or (REGEXP FUNCTION
	NON-NIL).
<fsbot> (NON-NIL stands for anything that is not nil; the value does not
	matter.) ..[Type ,more]
*** hansy (~hansy@190.237.7.137) is now known as hellhound  [00:23]
<nokhod> hi guys, can you please tell me how could i make TABs to act like
	 "Gedit" or "Vim"? each time i press the TAB, i want exactly 4 space,
	 everywhere and in any modes. i set "c-basic-indent", 'tab-width",
	 "indent-tabs-mode", "standard-indent", but none of them works for me
	 the way i want :(  [00:29]
<fledermaus> well, if you want inferior editor behaviour, you can
	     (global-set-key (kbd "TAB") "    ")  [00:32]
<technomancy> fledermaus: how does elim store credentials?
<technomancy> is there any way to use authinfo.gpg?
<nokhod> @fledermaus tnx, i will try that now
<jlf> ,tweet  [00:33]
* fsbot tweets some mindless bullshit.
*** rajeshsr_ (~rajeshsr@101.63.226.45) is now known as rajeshsr
<Lareth> part
<fledermaus> technomancy: it'll end up doing whatever libpurple does.  [00:34]
<bpalmer> nokhod: it won't quite work; the trouble is that "global" behavior is
	  what is used whenever local behavior isn't specified  [00:35]
<bpalmer> almost every mode will locally specify specific stuff for tab to do
<technomancy> fledermaus: so probably plaintext then? damn.
<bpalmer> nokhod: you either need to use a minor mode that overrides the tab key
	  or prepare to override it in many hooks.
<fledermaus> technomancy: well, you can configure accounts not to save passwords 
<nokhod> @fledermaus thank you so much, it works. but does it have any side
	 effects? doesnt it affect some modes or plugins where TAB must be used
	 differently?
<fledermaus> nokhod: pleas don't use the '@' it doesn't mean what you think it
	     means   [00:36]
<technomancy> fledermaus: yeah, I'd like to find some middle ground between
	      security and convenience
<technomancy> authinfo.gpg is tops
<jlf> wait, fledermaus isn't a perl array??
<fsbot> It is certain
<technomancy> ugh; pidgin is opinionated in idiotic ways  [00:37]
<fledermaus> technomancy: wouldn't be too hard to implement, I think... just
	     make accounts not save passwords by default and then splice in a
	     bit of code to injetc the passwords on startup from <wherever>
<nokhod> ok, thank you
<technomancy> "we never will encrypt passwords because it's not a good idea; IM
	      is inherently insecure and you shouldn't re-use your IM password
	      for any other accounts" <- no, it's because you're lazy and a
	      jackass.
<fledermaus> nokhod: if a mode requires other behaviour it will do so by
	     overriding the glbal binding, so no, there shouldn't be any side
	     effects   [00:38]
<fsmunoz> hehe
<technomancy> fledermaus: yeah, seems reasonable; I'll add it to my long todo
	      list
<technomancy> "The problem is that Pidgin runs on so many different
	      environments, each of which has their own system for
	      keyrings. It's difficult (but not impossible) to make Pidgin
	      integrate with all of these" <- aha; at least they're honest about
	      it lower down in the faq  [00:39]
* technomancy has made the assumption that gpg-agent works well cross-platform
  which turned out to be false, and can empathize a bit with that
<fsmunoz> didn't knew about elim  [00:40]
<fsmunoz> I use bitlbee for this stuff, but will take a look at elim.
<technomancy> saying "you shouldn't re-use your IM account password" when >50%
	      of pidgin users connect to google talk accounts is bafflingly
	      ignorant though
<pmade> I find that bitlbee + rcirc is the best way to handle all that stuff.
									  [00:41]
<bpalmer> you say ignorant, I say potato.
<fsmunoz> Which is why I never explored alternatives, but given that fledermaus
	  made it and technomancy uses it, well...
<technomancy> fsmunoz: it's good stuff.  [00:42]
<nokhod> for the last question, i use 4 space everywhere, but if i want to have
	 2 space only in clojure mode how this will be work?
<technomancy> bitlbee is quite nice too though
<technomancy> nokhod: I think you have to go out of your way to not use 2 space
	      indents in clojure-mode
<jlf> nokhod: you'd be better off letting emacs figure out how much to indent
<nokhod> yes i know, but im new to emacs after 4 years of vim, it a little bit
	 unsual for me  [00:43]
<jlf> you're making it harder on yourself
<gits1225> But emacs indents with a mix of spaces and tabs  [00:44]
<technomancy> jlf: not necessarily; sometimes you need to comply with existing
	      project coding standards
<bpalmer> gits1225: it doesn't need to.
<jlf> gits1225: (setq-default indent-tabs-mode nil)
<gits1225> yeah 
<gits1225> I was just saying
<technomancy> gits1225: yeah, you can't trust the defaults
<fds> The problem is some things rely on tabs (makefiles?)
<gits1225> +1
<technomancy> fds: python even  [00:45]
<fds> I generally use spaces only, but it has bitten me before.
<bpalmer> no; python works well with spaces
<jlf> technomancy: fair point, but "i want exactly 4 space, everywhere and in
      any modes." doesn't sound like that case to me
<nokhod> gits1225: i try that too, not what i want, they act the way they
	 want... for example C modes dont let me to indent the way i like.. it
	 force me to some indent level
<bpalmer> go, on the other hand, will fight you if you don't use tabs.
<technomancy> bpalmer: not if you've got an existing file that's indented with
	      tabs
<nokhod> tabs and space is not a good idea in python
<jlf> s/ in python//
<technomancy> if you mix two styles you can get a file that breaks for invisible
	      reasons
<bpalmer> that's right; (setq-default dont-use-spaces-always-use-tabs t)  [00:46]
<technomancy> bpalmer: just saying you can't always assume that everyone else in
	      the world has that set, sadly
<fds> Let's ban tabs.
<wbooze> let's bean tabs ?
<bpalmer> technomancy: I think part of working on a foreign python file is being
	  aware of the indentation style used.  [00:47]
<wbooze> let's beam tabs ?
<fds> Let's be tabs.
<bpalmer> let's slam Tab(tm)s.
<wbooze> let's spot the out!
<technomancy> sure; I was just agreeing with fds's "some things rely on tabs"
	      assertion
<tech1> i only use spaces for making aligned columns of text
<technomancy> sad but true
<technomancy> Let's construct a detailed argument against the existence of an
	      omnipotent yet benevolent God that centers around the widespread
	      usage of tabs as indentation.  [00:49]
<zellio> technomancy: that sounds .... brilliant
<nokhod> why this should be so hard in emacs :) i just want to have control
	 about my indention level, of course i can just use space bar for that,
	 but tabs are easier   [00:50]
<technomancy> nokhod: it's hard because c-based languages have a lot of legacy
	      baggage around them  [00:51]
<enymo`> ,g elisp how do i change spacing structure in php?
<fsbot> [google]    http://www.emacswiki.org/emacs/JorgenSchaefersEmacsConfig
<fsbot> http://www.gnu.org/software/emacs/manual/html_mono/elisp.html
<nokhod> if i was just code in C, i didnt care about tabs or space, but in
	 python you cant mix theme
<gits1225> nokhod: I have this in my .emacs
<gits1225> setq-default tab-width 4)
<gits1225> (setq-default tab-stop-list '(4 8 12 16 20 24 28 32 36 40 44 48 52 56
	   60 64 68 72 76 80))
<technomancy> (that's the charitable version that doesn't claim c-based
	      languages to be legacy baggage themselves)
<gits1225> (setq-default indent-tabs-mode nil)
<gits1225> works the way I want it.
<nokhod> belive it or not, i try all off theme in .emacs
<nokhod> no luck  [00:52]
<nokhod> in vim i just say, ok i want 4 space everywhere, except fot lisp
<nokhod> but emacs try to help me too much  [00:53]
<gits1225> nokhod: what I c&p does exactly what you want
<nokhod> gits1225: i try all of them before, i use emacs 24,   [00:54]
<nokhod> i have these in my .emacs: 
<nokhod> (setq-default tab-width          4)  [00:55]
<sm> is there a way to add emacs to a new user group without restarting, like
     newgrp at the shell, so dired etc. has that group's permissions ?
<nokhod> (setq-default c-basic-indent      4)
<nokhod> (setq-default indent-tabs-mode nil)
<nokhod> (setq standard-indent   4)
<gits1225> well thats not what I pasted here, is it?
<nokhod> gits1225: : its all there except for tab-stop-list  [00:56]
<nokhod> let me try that  [00:57]
<gits1225> backup and erase you .emacs
<gits1225> and just put in those 3 lines of code I pasted
<gits1225> and try
<nokhod> ok give me a minute
<bpalmer> tab-stop-list only affects when indent-line-function is
	  tab-to-tab-stop  [00:58]
<nokhod> gits1225: nop, didnt work  [00:59]
<srhb> (setq indent-line-function 'insert-tab) should be all that's needed with
       the two other lines
<gits1225> hmm  [01:00]
<srhb> that is, disable indent-tabs-mode and set tab-width to 4
<srhb> (I think)
<nokhod> srhb: i set that before
<srhb> nokhod: The indent-line-function?
<nokhod> srhb: no i didnt see that, let me try it  [01:01]
<pinkiesOut> I have some elisp that relies on functions in the reftex
	     package. Because reftex is set to auto-load, my code fails to work
	     until reftex has been used. What is the proper way to load such
	     packages within a program (aside from manually switching the mode
	     on with M-x)?  [01:02]
<fledermaus> ,df eval-after-load  [01:03]
<fsbot> eval-after-load is a compiled Lisp function in `subr.el'.
<fsbot> (eval-after-load FILE FORM)
<fsbot> Arrange that, if FILE is ever loaded, FORM will be run at that time.
<fsbot> If FILE is already loaded, evaluate FORM right now. ..[Type ,more]
<nokhod> srhb: no luck... it odd, i have tab-width 4, but it still make 8 char
	 tab, and python and c mode stil force me thier indentention level
<srhb> nokhod: Is your elisp file even being loaded?
<nokhod> yes i have all other things works just fine  [01:04]
<srhb> nokhod: Try without anything else there. Those three lines do work.
<srhb> I know, because I just tested. :-)
<nokhod> it shouldnt be that hard, i just want a simple TAB like other
	 editors. (global-set-key (kbd "TAB") "    ") works fine, but i dont
	 know hot to change that for a specific mode  [01:05]
<bpalmer> (add-hook 'c-mode-hook (lambda () (local-set-key (kbd "TAB") "    ")))
									  [01:06]
<enymo`> nokhod: i have this for my objc custom key binding: (define-key
	 objc-mode-map (kbd "M-N") 'ios/next-pragma-mark))
<pinkiesOut> fledermaus: thanks
<enymo`> ,define-key
<fsbot> Try: e-a-l eval-after-load ModeSpecificKeyBinding remap tabs
<taylanub> enymo`: do you have a github or so ?  [01:07]
<nokhod> bpalmer:  hmmm i think this should be work, let me try that
<wbooze> nokhod, there's also standard-indent and lisp-offset
<taylanub> i'd like to see your emacs-iOS stuff
<wbooze> which you should consider setting
<enymo`> taylanub: i should...lms
<taylanub> on the meanwhile i'm merging auto-complete-clang-async with the
	   latest auto-complete-clang version, and have forked
	   https://github.com/TaylanUB/xcode.el  [01:11]
<nokhod> thanks guys, it works. use (global-set-key (kbd "TAB") "    ")  for all
	 modes, and use (add-hook 'c-mode-hook (lambda () (local-set-key (kbd
	 "TAB") "    "))) or something like this just for 1 or 2 mode that you
	 want to indent with different level
<nokhod> i used something like this solution in vim too  [01:12]
<nokhod> everyone, thanks for your time and your help :)
<Pio> what module / service would you guys recommend for sending emacs
      buffers/regions to pastebins?  [01:16]
<fledermaus> ,lisppaste  [01:17]
<fsbot> hmm, lisppaste is [0] an (probably not) auto-announcing listing host
	(pastebin) <http://paste.lisp.org/new/emacs>,
	<http://emacswiki.org/wiki/lisppaste> ..[Type ,more]
<fledermaus> ,more
<fsbot> [1] if down, try <http://hpaste.org>, <http://pastebin.ca>,
	<http://imageshack.us>, <http://www.porsbo.org/pastebin> or
	<http://pastebin.com>, ..[Type ,more]
<fledermaus> ,more
<fsbot> [2] The TeX pastebin with on-board LaTeX, MetaPost and ConTeXt compiler:
	http://pastebin.tlhiv.org/,
<fsbot> [3] see also ,pastebin
<fledermaus> ,paste
<fsbot> Please do not paste multiple lines of text into the channel. Use
	http://paste.lisp.org/new/emacs and just paste the URL.
<fledermaus> hrm
<fledermaus> there used to be a .el 
<fledermaus> ah, there is from that second link   [01:18]
<Pio> i saw pastebin.el on emacswiki but seems people are down on pastebin.com
      lately
<Pio> thanks  [01:19]
<cluck> great... give "them" just the excuse big brother needs to ban home 3d
	printing... :S
	http://www.forbes.com/sites/andygreenberg/2012/08/23/wiki-weapon-project-aims-to-create-a-gun-anyone-can-3d-print-at-home/
									  [01:27]
<rudybot> http://tinyurl.com/chhtcpp
<technomancy> sounds like cryptonomicon
<cluck> at this rate i'll never get a chance to 3d print a lisp machine at home
	:(  [01:28]
<technomancy> you can probably build one in minecraft
<technomancy> space cadet keyboard might be tricky though  [01:29]
<karlpinc> Hi.  I'm having the same problem as
	   http://debbugs.gnu.org/cgi/bugreport.cgi?bug=7526 .  I can't seem to
	   navigate the bug tracking system.  Sorry.  This seems to be fixed,
	   but I can't tell when or how.  I'm looking for reassurance that
	   line-move-visual is nil-like when collecting and executing macros.
									  [01:33]
<gits1225> Why is there two irc clients in emacs? As well as two vi-emulators?
									  [01:37]
<penryu> only two? :)  [01:38]
<fds> How else could we argue about which one was better?
<gits1225> so which is better?
<gits1225> :P
<Ulrar> Hi, can someone tell me how to configure multi-mode.el to works with
	html / php (at least) ?
<Ulrar> I can't find how online
<fds> gits1225: To be honest, I don't use either.  I IRC with irssi and don't
      understand Vimthink.  But, I've been told that the cool kids use ERC.
									  [01:39]
<fds> gits1225: However, there are people in here that would disagree, of
      course.  [01:40]
<gits1225> k, me myself use irssi. But I was just taking a look around.
<technomancy> they're both really good
<gits1225> emacs really is an os :P
<technomancy> erc is more complicated, but it has more third-party modules
<JordiGH> The erc module has modules?  [01:41]
<JordiGH> Is it modules all the way down?
<karlpinc> I like erc, but it could use some help.  (Although right now my brain
	   is blank as to the simple things that could be done to improve it.)
									  [01:42]
<fds> Also, JordiGH, congratulations on becoming a GNUdist. :-)  [01:43]
<JordiGH> fds: I liked my oath.
<pmade> Using visual-line-mode with rcirc seems to push point above the prompt
	line occasionally.  I suspect it has something to do with
	markers. Anyone seen this before?
<gits1225> as in a free free GNUist?
<technomancy> my only ERC complaint now that the ignore-lurker-part
	      functionality exists is that it silently accepts input into closed
	      query buffers
<JordiGH> Wow.  [01:44]
<pmade> ERC drove me crazy with popping up buffers all the time.
<fds> JordiGH: What did it say?
<JordiGH> emacs-devel actually pulled the "tabs save disk space" argument.
<technomancy> ...
<JordiGH> fds: http://codepad.org/Sfab0r4a  [01:45]
<resure_> ,rbenv
<fsbot> resure_: when the humans take over, you will be first against the wall,
<technomancy> well, it was fun while it lasted, guys
<technomancy> any further emacs development is clearly doomed
<zellio> ...  [01:46]
<fds> JordiGH: :-D
<resure_> Strange things. When I put path config from that page
	  (http://marc-bowes.com/2012/03/10/rbenv-with-emacs.html) in scratch
	  and eval buffer, it works well, but it doesn't work when I put the
	  same to ~/.emacs.d/$USERNAME.el  [01:47]
<jlf> a few bytes here, a few bytes there, before you know it you'll have saved
      a kilobyte
<JordiGH> http://lists.gnu.org/archive/html/emacs-devel/2012-08/msg00717.html
<zellio> jlf: you are right with the cost of space on harddisk these days
<jlf> this is great news for the vic-20 port
<technomancy> JordiGH: that's not exactly "pulling the saves-disk-space
	      argument"  [01:48]
<zellio> okay, so they said it was once a concern
<zellio> and while it's "Techically" still true
<zellio> cause well, it is
<zellio> that is hardly avocating it
<JordiGH> technomancy: Well, admitted that today it's not a big deal.
<Ulrar> So, no one can help me for multi-mode ?  [01:56]
<penryu> 10:47     JordiGH |
	 http://lists.gnu.org/archive/html/emacs-devel/2012-08/msg00717.html
<penryu> apologies
<ersatzmaus> I'm using ERC Version 5.3 with GNU Emacs 24.1.1
	     (x86_64-pc-linux-gnu, GTK+ Version 2.24.10, multi-tty) of
	     2012-08-23.  [01:59]
<ersatzmaus> woot, as they say on the intertubes.
<cluck> showoff   [02:00]
* cluck ducks
<ersatzmaus> damn right.
<JordiGH> Can you create new tails in git?
	  http://inversethought.com/hg/master/graph/tip  [02:02]
<fledermaus> I don't know enough hgology to know what that term means 
<JordiGH> What do you think a tail should be?  [02:03]
<technomancy>
	      http://images3.wikia.nocookie.net/__cb57525/sonic/images/7/72/Tails_35.png
<JordiGH> You know what a head is... what is a tail?
<JordiGH> Yes, that.
<ijp> furries ruined sonic the hedgehog forme  [02:05]
<JordiGH> One way to create new tails in hg is to pull from an unrelated repo.
<youlysses> Is there a way to "script" in eshell, like in bash, or equivalant
	    "real" shells?
<JordiGH> Another way is to update to the null revision and create a new commit
	  there (one without a parent).
<johnw> it's called Lisp
<johnw> otherwise, no
<johnw> I specifically avoid getting into that nest of worms
<JordiGH> eshell understands lisp?
<johnw> avoided
<ijp> JordiGH: yes  [02:06]
<technomancy> JordiGH: that's like, the entire point of eshell
<ijp> johnw: any change of eshell supporting input indirection?
<youlysses> johnw: I don't underntand how I didn't grasp that a second ago ...
	    XD
<johnw> ijp: it's Emacs that needs to change for that, not Eshell
<ijp> I'm sure you're right, but how so?  [02:07]
<johnw> Emacs has no way of reading or writing directly to a device
<technomancy> eshell is great precisely because it doesn't have a scripting
	      language
<johnw> everything (and I mean everything) has to be backed by a buffer  [02:08]
<youlysses> ijp: By taking in more info reguarding-input direction, and/or
	    provide a function to do this easily?
<ijp> ,shoot youlysses
* fsbot loads its fish catapult and buries youlysses in flounder.
<technomancy> ijp: are there things you can't do without input indirection, or
	      are you just annoyed at having to rephrase your commands in a way
	      eshell accepts?
<ijp> the latter
<technomancy> gotcha  [02:09]
<youlysses> technomancy: This whole week I've been in a haze, but yeah I just
	    got this. Which is probally better in the first-place, integration
	    wise. :-)
* technomancy never learned those bad habits of eshell-unsupported ways =)
<parmegv> why does not Emacs have built-in Lua-mode??? I thought that language
	  was going to become GNU's official language for a lot of things
* jaimef looks for a zsh $PS1 that is emacs terminal friendly and has git stuff
  in it  [02:10]
<ijp> lol, lua
<JordiGH> No, GUILE is supposed to be it.
<youlysses> parmegv: I've never heard this... As what, an extension language
	    ...?
<zellio> jabot: magit?
<technomancy> parmegv: for something to be built-in to emacs, they have to sign
	      copyright assignment paperword.
<JordiGH> I can't believe that the GNU coding standards still say we're supposed
	  to use Guile for extending things.
<ijp> JordiGH: why not? you get four scripting languages for the price of one
									  [02:11]
<technomancy> parmegv: it's likely the authors of lua-mode want to continue to
	      be allowed to develop their mode in peace without having to wade
	      through that nonsense
<JordiGH> Btw, guys, part of my oath involved Guile.
<JordiGH> I guess I gotta add a Guile parser to Octave now.
<forcer> Hm. I was pretty sure Emacs can interact with devices by now.
<ijp> JordiGH: what oath is this?
<youlysses> forcer: Deldo?
<forcer> youlysses: Thanks, but no thanks. Enjoy, though.  [02:12]
<kodein> when is nimoy going to do a song on deldo?
<ijp> ,slap youlysses
* fsbot slaps youlysses with a fish.
<youlysses> forcer: I'm asking what type of devices? :-P
<Munchor> I want to rebind C-h to C-x C-h, how can I go abou tdoing this?
<JordiGH> ijp: I thought I told you: http://codepad.org/j4Hh0KpF
<JordiGH> :-)
<parmegv> JordiGH: it's true, it was Guile
<ijp> JordiGH: besides, writing a "guile" parser seems misguided, when you could
      just shell out to guile for that
<forcer> Hmhm. Wonder which function I had found a few months back.
<ijp> unless by guile, you mean tree-il
<forcer> Munchor: That's a tricky one.  [02:13]
<Munchor> forcer, really? I think it's easy
<Munchor> I just need to know what command C-h invokes
<forcer> Munchor: Well, cool, if it's easy, why do you ask? :-D
<Munchor> forcer, I think it's easy, but I don't kno
<ijp> why would you rebind the most useful command in emacs?
<Munchor> ijp, I really want C-h  [02:14]
<youlysses> Is there a listing in the info-page of what all eshell covers? Like
	    is it a "full" replacement, like has built-in ways to mount, or? 
<Munchor> to another thing :$
<ijp> ,slap Munchor
* fsbot slaps Munchor with a fish.
<forcer> I'm not sure how the prefix + C-h => list key map thingy works, so not
	 sure if you can override that
<Munchor> :(
<Munchor> forcer, ahh you think C-h is unoverridable?
<Munchor> That's too bad
<ijp> it's bound to help-command I think
<youlysses> ** The more I look into eshell though, the more I'm digging it.
<johnw> youlysses: cool!  [02:15]
<Buglouse> Will someone scroll up to my regex question and evaluate the
	   expression ?
<forcer> Munchor: (lookup-key global-map (kbd "C-h")) says `help-command' so try
	 that.
<ijp> Buglouse: I haven't read it, but judging from the usual emacs regex
      complaints, you probably don't have enough \s
<Munchor> forcer, M-x help-command doesn't exist  [02:16]
<Munchor> yeah it's unoverridable maybe
<ijp> it's not a function, it's a keymap
<youlysses> johnw: I'm hoping once I get my elisp skills "up-to-it" I can help
	    out, in anyway needed. :-)
<Buglouse> I use ' +'
<Buglouse> ijp: I think I found my prob, rtfm  [02:17]
* Buglouse talks a bit  [02:18]
<ijp> Buglouse: good, but as a last resort I was going to recommend
      (global-set-key (kbd "C-x C-h") (lookup-key global-map (kbd "C-h"))) based
      on forcer's advice
<ijp> JordiGH: that's a pretty clumsy attempt at poetry  [02:20]
<JordiGH> ijp: Blame Jack Kirby.  [02:21]
<ijp> the last line in particular
<JordiGH> I think it's his fault.
<JordiGH> Oh, no, the last line is my fault.
<ersatzmaus> ,haiku
<fsbot> The ice cream lady 
<fsbot> scrubs the tile floor, knees rasping. 
<fsbot> I've got plenty more. 
<jlf> hmm, it'd be nice if apropos-command interpreted a prefix argument as (not
      apropos-do-all) instead of forcing it true  [02:23]
<ijp> rudybot: who would win in a sumo wrestling match: ballmer or stallman?
									  [02:24]
<rudybot> ijp: sumo tarballs
<ijp> I think that's a vote for stallman
<bitonic> ,  [02:25]
<fsbot> Try: flame-howto quickstart TLD
<youlysses> ijp: Ballmer.
<bitonic> oops.
<ijp> youlysses: nah, without his chairs, ballmer is weak  [02:28]
<youlysses> ijp: He's the aggressive type of crazy, not the idealogical
	    leader-type though.   [02:30]
<youlysses> Plus I could imagine ballmer actually doing something like this,
	    atleast alot more-so, than RMS.  :-P  [02:31]
<youlysses> But if I was to cast for a movie between the two, RMS would be the
	    obvious choice.   [02:32]
<taylanub> youlysses: mandatory:
	   http://hyperboleandahalf.blogspot.de/2010/04/alot-is-better-than-you-at-everything.html
									  [02:40]
<rudybot> http://tinyurl.com/6sgqe4s
<ijp> ,shoot taylanub
<resure_> Really dummy question: how can I clean emacs shell buffer?
<ijp> stupid bot
* fsbot loads its Batarang and knocks taylanub down.
<taylanub> Batarang?
<fds> Like a boomarang, but battier.  [02:41]
<ijp> taylanub: batman's boomerang
<resure_> taylanub: http://batarang.jpg.to/
<taylanub> LOL, ok
<cluck> taylanub: batman's boomerang (it's shaped like his batsign)
* ijp adds 2 points to taylanub's geek license  [02:42]
<taylanub> yay \o/
<cluck> ijp: you should subtract points, he didn't know
<taylanub> if we'd be back in the comic times, you'd rather subtract them, no ?
									  [02:43]
<taylanub> heh cluck
<wbooze> let's send a gnu to mars!
<wbooze> lol
<cluck> taylanub: what kind of geek doesn't read detective comics as a kid! :|
<ijp> cluck: it's the way the driving license penalty point system works in the
      uk  [02:44]
<ijp> get 12 in a 3-year period and you'll be disqualified
<taylanub> cluck: i was a kid between 1999 and 2008
<cluck> oh
<taylanub> for some reason assuming that one is a kid between the ages 6 to 14
<cluck> ijp: didn't know that  [02:45]
<cluck> taylanub: no excuse, being born later only gives you more good stories
	to read
<taylanub> ok, i give in, I'VE NEVER BEEN A KID
* taylanub cries
<fds> taylanub: Wait, you were between 6 and 14 for 9 years?!  [02:46]
* taylanub goes to watch Nichijou
<ijp> ,slap taylanub
* fsbot slaps taylanub with a fish.
<fds> Damn rounding.
<fds> Or offby1.  
<taylanub> fds: inclusive-between vs exclusive-between  [02:47]
<cluck> wbooze: let us call our space silicon gnus Signus!
<fds> taylanub: Indeed.
<taylanub> let's Randomly capitalize words in Our sentences.  [02:48]
* enymo` Is doing It!  [02:49]
<fds> It's the traditional Way.
<ijp> TayLanub: wAy ahead of YoU
<taylanub> zomg
<taylanub> man i need medicine  [02:50]
<jlf> ,homie-yow  [02:53]
<fsbot> grepping the good and sedding the bad!
<fsbot> lol
<fds> lol
<ijp> ,homie-yow  [02:56]
<fsbot> greko-roman internet style ringing rather!
<fsbot> lol
<taylanub> people who can't logic never cease to amaze me  [03:04]
<forcer> Well, people who do not know logic are dumb, and all humans are dumb,
	 hence no one knows logic, you see?  [03:05]
<jlf> i resent the implication  [03:06]
<ashawley> ,dl homie-yow
<fsbot> homie-yow is lisp (random-choose (list (if (member nick '("homie"
	"wbooze")) (format "greetings, %s!" nick) (concat (random-choose (notes
	"homie-list")) "\nlol")) "Get a job, deadbeat.") '(9 1))
<ashawley> lol
<forcer> You dislike my syllilogism?!
* clop claps for forcer  [03:07]
<jlf> more like sillygism amirite
<forcer> :o)  [03:08]
<jandrusk_> My co-worker asked me what I used for GTD, stuff and told him I use
	    org-mode in Emacs.  [03:11]
<jandrusk_> He then asks, "What's Emacs?"
<taylanub> turn around and start running
<enymo`> ,g define syllogism
<fsbot> [google]    http://www.thefreedictionary.com/syllogism
<fsbot> http://grammar.about.com/od/rs/g/syllogismterm.htm
<jandrusk_> I reply, "Basically text editor on steriods."
<fsmunoz> ... and then jandrusk_ kick-drops him and he lands in the head.
<enymo`> i say it's Batman
<fsmunoz> h, my bad.
<jandrusk_> I started to show him Emacs and he states, "You mean I have to use
	    the keyboard, forget it!"  [03:12]
<wbooze> a wild horn-gnu riding after you!
<wbooze> lol
<jandrusk_> Kids these days. The world must be ending soon. 
<taylanub> jandrusk_: now imagine the guy were your boss  [03:13]
<enymo`> i need to stay up and focused all day long and somewhat during the
	 evenings so i can work at the office and on personal projects and still
	 take care of my family as a stand up dad...what do you suggest i
	 take/do?
<jlf> get enough sleep
<enymo`> no coffee... that only works for a week than every other week, i'm weak
<jlf> exercise
<enymo`> i exercise quite a bit  [03:14]
<enymo`> but maybe not enough sleep
<jandrusk_> taylanub: It would be a worse situation if I tried to talk to my
	    boss about Emacs. 
<youlysses> jandrusk_: How old was-(s)he?
<jandrusk_> Mid to late 20's
<jlf> jandrusk_: ,,screencasts often lead to the light bulb  [03:15]
<fsbot> jlf: I heard EmacsScreencasts is at
	http://www.emacswiki.org/cgi-bin/wiki.pl?EmacsScreencasts
<jandrusk_> He does not have the geek nature, which I suspect is the crux of the
	    problem. 
<ashawley> Let's go watch football
<youlysses> jandrusk_: I'm 19, nearly 20, but this is way to common of a
	    trend. What field are you in?
<jandrusk_> youlysses: Information Security.  [03:16]
<enymo`> ,sleep
<fsbot> [0] what an unacceptable substitute for caffeine!
<fsbot> [1] For the wicked!,
<fsbot> [2] a function from libc that makes the current process sleep for a
	given number of seconds.
<enymo`> oh, i don't want to be more wicked
* enymo` is feeling old   [03:18]
<jlf> eh, off my lawn 
<proq> wow, this is brilliant trolling.  genius!
       http://blog.izs.me/post/30036893703/policy-on-trolling
<zhen> ,nnimap-split-fancy  [03:19]
<fsbot> HUGH BEAUMONT died in 1982!!
<taylanub> dafuq is "heterosexism" ?
<wbooze> does anyone know if april fools day is over ?!
<youlysses> I'm assuming xwidgets just crashed my session, but have no idea if
	    that was the case. :-P   [03:20]
<youlysses> What was I saying?
<wbooze> noise noise test test noise!
<wbooze> lol
* taylanub goes off to troll node.js
<jlf> seems reasonable enough to me
<proq> #1 sexist remarks are not allowed.  #8 most trolls are immature boys.
       edit: virtually every troll is male
<youlysses> Oh! How does one get an informational-security job without being
	    very competent in a system that is keyboard driven...? :-l
									  [03:21]
<jlf> proq: and?
<taylanub> GIRL: Guy In Real Life
<proq> that would be a sexist remark.  also, how would they know they are male
       on irc?
<jandrusk_> youlysses: Lucky and the org doesn't know any better.  [03:22]
<penryu> EVERYONE on the internet is a 40yo man.
<proq> oic
<penryu> it's the wisdom that's gotten me this far.
<jlf> i don't see what's sexist about any of that
* jlf afk  [03:23]
<youlysses> jandrusk_: It just seem strange. Like wouldn't you need to be farily
	    highly-trained via a cli, or am I confused about what you guys do?
	    :-P
<jandrusk_> I'm only going to be 40 for another month. 
<jandrusk_> youlysses: It depends upon what your duties are ,but overall I'm
	    surprised that I'm the only one in the group you really knows how to
	    use the CLI and code.   [03:24]
<penryu> I find the implication that most trolls are immature boys to be
	 innately sexist.  [03:25]
<penryu> there are some GENIUS female trolls.
<fds> How do you know they're female?  [03:26]
<proq> I've heard my wife talk about female trolls on the forums that she
       visits, lots of times
<youlysses> jandrusk_: It's likely going to get alot worse, before it gets any
	    better. Standards seem to keep on lowering...  [03:27]
<penryu> fds: of the ones I'm certain are female, they were usually classmates.
<jlf> penryu: i read that as `...because most _people_ on irc are male'  [03:28]
<jandrusk_> Yes, but I think the boss is trying to figure out why and how I"m so
	    efficient and the rest of the team is not. 
<proq> jlf: on freenode irc or all networks?
<jlf> afaict he's referring to a freenode channel  [03:29]
<youlysses> jandrusk_: Work-ethic, and actual knowledge of the tools you use?
	    Two things a majority of my generation seems to lack (sadly). :-P
<penryu> we know they're male irc users because they set the +Y user mode in
	 their client
<jlf> i seldom frequent other networks these days so idk about their
      demographics
<proq> what does the +Y user mode do?  [03:30]
<tali713> proq: just finished looking at that link, clearly we need to encourage
	  more females to get into trolling.  declaring trolling to be primarily
	  a male occupation is discriminatory and may make females feel
	  unwelcome in the troll community.
<penryu> provides proof that the user is a male.
<jandrusk_> Yes, I tried to tell the guy I explained Emacs to on the need to
	    "play" with technology at home, but I seem to be an oddball as to
	    that habit. 
<jandrusk_> "Why would you continue to bang on the keyboard for another 4+ hours
	    when you have done it for 8?"  [03:31]
<proq> tali713: I have a feeling that karma will catch up with their statements,
       and it will happen even if we don't
<penryu> tali713++
<fsmunoz> I feel that it is a bit of a tautology: most trolls are male because
	  most people in IRC are males, which is what (supposedly) the rules are
	  partially aimed at. But I have nothing against them per se.
									  [03:32]
<proq> fsmunoz: hmm... I guess that does weigh in favor of their argument.  but
       when why mention it at all?  [03:33]
<proq> *then
<forcer> proq: To troll people who then rage about "heterosexism" and
	 "misandry"?
<fsmunoz> proq: that's why I think it would likely benefit from being said in a
	  different way. Most trolls are male, but OTOH most non-trolls are also
	  male.  [03:34]
<penryu> I have never seen this word 'misandry'
<youlysses> jandrusk_: Why work on/with computers for a living, if you wouldn't
	    do it as a hobby in your free-time? I see it, and see it all the
	    time (I heard ~25-30 percent drop compsci and realated courses
	    within the first semester...)
<penryu> it sounds gloriously nonspecific
<jlf> misandry: ORIGIN 1940s: from Greek miso- ‘hating’ + anēr, andr- ‘man,’ on
      the pattern of misogyny .
<jandrusk_> youlysses: I know, it's a mystery to me. I started coding when I was
	    12 on an Apple IIe and have not looked back. 
<penryu> is this "man" in the male sense, or "human being" sense?  [03:35]
<penryu> in the case of misandry.
<jlf> the former
<penryu> oh. must be, given misogyny as counterpart.  [03:36]
<tali713> penryu: andro not anthro.
<penryu> tali713: yeah, I got mixed up for a secc.
<tali713> combine the two and you misandrogyny.
<forcer> "Misandry" is a form of sexism directed against males. For example,
	 cultural gender roles in a society that push men into the "strong
	 feeder" role are misandry. The term is sadly abused a lot by sexist
	 assholes who feel they are being discriminated against when they are
	 told they should stop being sexist assholes.  [03:37]
<jlf> also, what's with people calling women "females"?
*** cpt_nemo_ (cpt_nemo@2a01:4f8:130:62a2::7) is now known as cpt_nemo  [03:38]
<tali713> jlf: I don't discriminate against cats.
<penryu> huh. since "sexism" is most commonly referring to discrimination
	 against females, I assumed "heterosexism" was similarly discrimination
	 against heteros.  [03:40]
<penryu> this is apparently not the case.
<anxt> why cant we all just get along
<anxt> i got razzed for being a breeder once lulz  [03:41]
<penryu> because your body parts are different from mine.
<jlf> penryu: i think `heteronormative' is a more common term for that meaning
<penryu> anxt: I inadvertently offended a friend of mine by calling her a
	 breeder.  [03:42]
<penryu> I meant it in the purely literal sense, as she had 4 children.
<forcer> I think the term "homophobia" is discouraged because, quote, "you're
	 not afraid, you're an ass" <.<
<tali713> As in, I might be hetero sexual, but that doesn't mean that I want to
	  wear the pants.
<anxt> i dont even know if i should throw in on this convo  [03:43]
<tali713> heteronormative is odd, since it varies so much on location.
<forcer> Does it?
<anxt> no, you know, i dont.  i dont know that my communication skills are
       strong enough to have my intention make it through
<penryu> anxt++  [03:44]
<penryu> or whatever the #emacs equiv is
<tali713> forcer: yes.  gender roles are not uniform, playing into those gender
	  roles, whether it be birth gender or gender of identity is likewise
	  non uniform, and you can be gay and hetero-normative.  [03:45]
<jlf> penryu: (incf anxt)
<forcer> tali713: Yes, the exact implications of "the normal relationship for
	 humans is one male and one female" is not exactly identical everywhere,
	 but I don't think it's so vastly different that I'd call the term "odd"
	 ;-)  [03:46]
<jlf> on female vs. woman:
      http://www.nytimes.com/2007/03/18/opinion/18iht-edsafire.4943390.html
<tali713> yeah, I went to college, and too a surprisingly good course on sex,
	  gender and politics.  it was a surprisingly highly academic course
	  even though it was on very sensitive material.
<penryu> people suck. this is why we have computers.
<penryu> I typed "ls" into a Windows computer.  [03:47]
<penryu> and it didn't get pissed off, or jealous.
<anxt> i think computers all look the same
<tali713> forcer: yeah, but that isn't what hetero-normative is about.  when
	  someone asks the gay couple, "so which one of you is the woman."  you
	  are dealing with hetero-normative issues.
<forcer> tali713: Yes. What's your point, again?
<anxt> i think robots should work my cotton fields
<penryu> personally, it's a little offensive that eshell tries to impose it's
	 Unix-normative ways on all of its many implementation platforms.
									  [03:48]
<anxt> export PS1 "yes, massah?"
<penryu> (just to bring it back in a bit)
<jlf> charming
<johnw> huh?
<tali713> forcer: oh, no point.  just damn complicated issues.  I mostly think
	  that we should respect people as people and stop giving a fuck about
	  their gender or sexual preference, when whether they are programmers
	  or mathematicians or physicists is what counts.
<anxt> export PS1="yes, massah?"  [03:49]
<forcer> penryu: So you are saying that I should now get pissed off because you
	 imply that discrimination issues are mostly just "people getting pissed
	 off about nothing"?
<anxt> stupid export/setenv confusion
<forcer> tali713: Sounds good :-)
<enzuru> i honestly disagree. i am not going to respect a vi user  [03:50]
<enzuru> not real hackers imho
<enzuru> if we can find the 'vi gene' and wipe it from the human genome i think
	 that'd be completley fine  [03:51]
<penryu> forcer: I couldn't possibly tell you what to be pissed off about. but
	 if you DO get pissed off, the Internet is the best place to do it.
<penryu> Paid for by the Internet Tourism Development Agency
<jlf> nah, vi is a vital destination for people who like modal editing
<jlf> in its absence they'd overrun emacs  [03:52]
<enymo`> (incf jlf)
<jlf> if vi didn't exist it would be necessary for emacs to invent it
<enzuru> so you think it's essential for the purity of the emacs userbase that
	 we allow the undesirables to coalesce in their separate-but-equal
	 spaces?
<forcer> penryu: I rarely get pissed off, hence why I was making that joke. It's
	 just a common misconception that discrimination is an issue of "people
	 getting or not getting pissed off", and I find that view pretty odd.
<forcer> I just read "<jlf> if vi didn't sexist" ....
<jlf> haha  [03:53]
<enymo`> people get pissed off because of stress...
<proq> caffeine too
<forcer> I totally need to found the gender-philosophical school of
	 sexistentialism.
<enymo`> stress is anyone's enemy
<enymo`> caffeine adds more stress  [03:54]
<enymo`> sextress
<Odin-> forcer: It's rather directly related to the so-called tone argument.
<forcer> Odin-: "Tone argument"?  [03:55]
<Odin-> forcer: "Your point is invalid because you're angry".
<forcer> Ah!
<forcer> Fancy, googling for "tone argument" hits a geek feminism wiki
	 first. Nice :-)
<aidalgol> "GNU Alive is a periodic ping program. It functions similarly to
	   ‘ping -n -i PERIOD HOST’ (so if you are comfortable typing that at a
	   shell prompt you probably do not need GNU Alive)."
<penryu> forcer: my point wasn't that it's all a matter of getting pissed
	 off. it was that the computer dealt with a strange, unusual entity as
	 simply a failure to communicate ("Bad command or file name.") and
	 invited another attempt ("C:\>"), instead of attempting to subjugate or
	 exterminate it.  [03:56]
<aidalgol> Why the hell not just use ping?
<Odin-> forcer: A favourite amongst the don't-want-to-admit-misogyny crowd.
<jlf> istm `tone argument' is just an ad hominem  [03:57]
<penryu> forcer: you're getting hysterical. you should go see a doctor about
	 that.
<Odin-> forcer: (Which makes it distinctly noticeable in geek circles.)
<forcer> Odin-: The basic right of "freedom of speech" translates as "freedom of
	 opinion" in German. That allows for awesome exchanges of "that was
	 misogynic" "no it wasn't!" "well, it came across as such, so figure out
	 a better way to phrase what you mean" "are you censoring me?! Freedom
	 of opinion!" "Oh, so that *was* your opinion?"
<enymo`> i met my wife after a period of misogyny  [03:58]
<Buglouse> (not (null)) is same as (null (null)) ?
<forcer> penryu: What makes you think that?
<Buglouse> (since not is alias?)
<tali713> Buglouse: yes, they both error.
<forcer> tali713: :-D
<penryu> forcer: just an example of "the tone argument"
<Buglouse> (null (null nil)) .. then  [03:59]
<forcer> penryu: How did that make you think I am getting hysterical?
<penryu> forcer: it didn't. it was hyperbole.
<enymo`> alright ladies
<jlf> Buglouse: you can easily evaluate those and see for yourself
<forcer> penryu: What was a hyperbole?
<Odin-> forcer: He doesn't. He was just pointing out how the tone argument is
	often deployed.  [04:00]
<Buglouse> jlf: WhAt!?
<forcer> %)
<penryu> what Odin- said
<forcer> D'oh.
<forcer> penryu: Sorry.
<tali713> Buglouse: no, null and not are not the same,  null tests for nil, not
	  inverts a truth value.  the outcome may be the same but the meaning is
	  not.
<jlf> C-h f null
<jlf> C-h f not
<enymo`> ,df not  [04:01]
<fsbot> not is an alias for `null' in `subr.el'.
<fsbot> (not OBJECT)
<fsbot> Return t if OBJECT is nil.
<taylanub> ,df null
<fsbot> null is a built-in function in `C source code'.
<fsbot> (null OBJECT)
<fsbot> Return t if OBJECT is nil.
<taylanub> er, i thought one of either tells the reason of the alias ..
<Odin-> forcer: There's a kinda similar issue in .is, although the
	constitutional clause actually says "everyone is free to their opinion
	and may express it" (roughly). People seem to feel that the freedom to
	express the opinion that your opinion is crap is not an opinion,
	somehow.
<tali713> jlf: obviously he was asking a deeper philosophical question, since he
	  already admitted to having the documentation in front of him.
<taylanub> anyway, it's just for code clarity
<forcer> Odin-: That's a pretty common one. "You may not tell me that what I say
	 is stupid because that's infringing with my freedom of speech." It's
	 pretty silly.  [04:02]
<Buglouse> tali713: where do you get your information for that assertion?
<tali713> Buglouse: do whatever the fuck you want.  [04:03]
<jlf> tali713: perhaps, but i think it more likely that he asks #emacs the
      moment a question pops into his head
* Buglouse chooses to lern
<tali713> forcer: indeed you have the right to say stupid hateful things, and I
	  have the right to tell you they are stupid hateful things. ;)
<forcer> tali713: Exactly.  [04:04]
<jlf> Buglouse: it's more effective to experiment in a REPL and read the
      documentation than asking tons of questions
<enymo`> yea, but one should be afraid to ask questions
<Buglouse> The question was if nil is an alias are (not (null nil)) and (null
	   (null nil)) the same .. tali713 Suggested something other than what
	   the documentation detailed ..
<Buglouse> /s a/s, a/  [04:05]
<Odin-> forcer: It's particularly popular with religious nuts.
<jlf> Buglouse: they are functionally equivalent but semantically difference,
      similar to #'car vs. #'first
<tali713> Buglouse: look, not has the same meaning it has every where, that's
	  where I get my information, not is a logical operator.  null is a test
	  of whether a value is a null value, like anywhere else you would see
	  it.  Where do I get my information, from knowing these terms from many
	  other places.  Why don't /you/ know that not is a logical operator and
	  null is a test?
<jlf> different even  [04:06]
<Buglouse> Ok, see where the confusion could have arose ? tali713 Was inserting
	   semantics
<jlf> no, your question was underspecified  [04:07]
<tali713> that nil happens to be false, and that all other values happen to be
	  true, simplifies their definitions, since the have the same outcome on
	  the same data.
<Buglouse> How is that underspecified, it was literal code thus should be
	   interpreted as a question based on functionality, not visual
	   aesthetics.  [04:08]
<Buglouse> /visual//
<tali713> it's "semantics" not "aesthetics" say what you /mean/.  [04:09]
<Buglouse> I wrote what I meant   [04:10]
<enymo`> whoa
<enymo`> it must be Thursday
<penryu> if only there were a dictionary module for emacs...
* Buglouse does not appreciate reactionary responses.
* penryu checks for a +Y in Buglouse' user mode  [04:11]
* penryu lunches
<tali713> first is not the same as car, cdr is not the same as rest, yes they
	  have the same result on the same values, but one set is for list
	  operations the other is for cons cells.  meaning is important, since
	  you write code to be read by people, not machines.
<enymo`> i think machines would need to care about semantics even more so than
	 humans do  [04:13]
<tali713> nah, not particularly, machines don't care, they compute.
<tali713> as long as it is syntactically correct, it will run, it may even give
	  you the results you are looking for, especially if it is logically
	  correct.  but it might not be logically correct, and if it isn't and
	  you go in to fix the problem, and you mislead yourself through weak
	  semantics, whose fault is it?  [04:15]
<enymo`> women, of course.
* ivan-kanis just got "The Psychology of Programmers"  [04:16]
<ivan-kanis> should be a fun read ;)
<ijp> sounds very dull  [04:17]
<fourier> Are you a tech manager? Why one would need such a book
<ijp> ,shoot enymo`   [04:18]
* fsbot loads its Batarang and knocks enymo down.
<enymo`> lol
<ivan-kanis> more fun than a book on programming I am sure
<ivan-kanis> anyhoo
<enymo`> ,shoot ivan-kanis 
* fsbot loads its water gun and drenches ivan-kanis.
<ivan-kanis> night night #emacs
<ijp> let's write emacs for dummies  [04:19]
<Buglouse> Feels like a preference to me, like the tone of a sheet of paper,
	   only looking at would you notice any difference (apart from shade
	   conflicts). (insert 'preference-of-user) I understand the
	   significance though, readability; the question was valid and I do not
	   appreciate the attacks (jst wanted to mention).  [04:20]
<fourier> ljp: its already exist: Learning GNU Emacs . It is perfect for
	  newbee's
<youlysses> ijp: I thought o'reily practically had that, or something?   [04:21]
<fds> Let's rewrite Emacs for dummies.
<Buglouse> penryu: Capital?
<fds> (in Python..?)
<fourier> Dummies will not read a book about text editor
<youlysses> fourier: Is that the name of it (from o'reily?)
<enymo`> if someone decided to learn Emacs, ergo that person would not be a
	 dummy
* Buglouse likes ^ logic  [04:22]
<aidalgol> Apparently, there's Linux for dummies.
<fourier> youlysses: yes
<fds> That's not true.  I've been using Emacs for years and I'm still a
      dummy. :-)
<anxt> enymo`: i think emacs is better for noobs, anyways with all the buttons,
       vim is more for the power user (of course you can do elisps and stuff)
									  [04:23]
<aidalgol> And an Idiot's Guide to Linux.
<zellio> Idiots guide to linux : Lift computer, place in box, ship  back to
	 manfacturer and save us all some head-ache
<fourier> Dummy probably means complete newbie in the subject I believe
<youlysses> "The GNUru's guide to Emacs"  [04:24]
<enymo`> anxt: i still want to learn vi and use it like a champ... are you
	 saying it's possible to be as fast with vi?
<aidalgol> I think Facebook for Dummies is a bit redundant.
<anxt> enymo`: oh sure, you can be a total rockstar in vi too.
<aidalgol> How can there be a whole book on how to use Facebook?
<enymo`> anxt: i feel the colon and escape breaks the flow
<anxt> aidalgol: i saw "farmville for dummies" i shit you not.  [04:25]
<enymo`> aidalgol: there are a lot of dummies
<anxt> enymo`: i find that too.
<aidalgol> anxt: I've seen that, too.
<zellio> anxt: I will thank you fro not shitting me
<anxt> enymo`: but there are some true vim ninjas
<sea4ever> farmville for dummies wtf?
<fourier> antxt: emacs is not great for noobs, there are plenty of editors
	  around. IMHO emacs is ok to people who would like to learn the lisp in
	  the same time
<anxt> sea4ever: thats what i said, huh?
<enymo`> anxt: i don't doubt it, there's one at my work
<anxt> fourier: but elisp isnt a lisp is it?  [04:26]
<zellio> anxt: wat?
<ijp> At least in 20 years time we won't have to put up with "windows for old
      people"
<zellio> how is it not a lisp?
<anxt> hmm, that sounds dumb.
<fds> It's the third best Lisp in current usage!
<fds> After the other two.
<zellio> fds: disagree
<tali713> lol, true.
<billyoc> What's number 2?
<anxt> zellio: i thought cause it had dynamic scoping 
<fourier> Where is no lisp around. Only dialects, CL, ELisp, Scheme etc.
<ijp> fourth
<fds> billyoc: Common Lisp.
<zellio> anxt: it has lexical scoping
<ijp> fourier: that's a ridiculous statement  [04:27]
<billyoc> wait, what's number 1?  lol
<zellio> ahh a scheemer
<fds> ;-)
<anxt> is that like "i am 27 parens in, so i am local to that?"
<zellio> the order is obviously CL Clojure eLisp Scheeme =P
<ijp> that's like saying, there is no English, only cockney, scots, brummie,
      americanese....
<tali713> anxt: dynamic scoping does not make it not a lisp, just a weaker lisp.
	  but it has lexical scoping now.
<zellio> ijp: well which is true english?
<billyoc> who is number 1?!
<fourier> ljp: why? Anyone uses McCarthy's lisp ?
<anxt> tali713: so its a general purpose language now?
<anxt> tali713: does elisp have gtk bindings?  that is what makes it a REAL
       language  [04:28]
<ijp> zellio: as a scotsman, I feel qualifed to point out when you are making no
      true scotsman style arguments
<chrisb> scouse
<zellio> ijp: I know
<enymo`> here's a question for .emacs customizers: how do i edit/alter major
	 mode behaviors in terms of spacing
<zellio> it's fun
<ijp> fourier: no-one, because lisp 1.5 is fundamentally broken
<ijp> just like elisp used to be
<tali713> anxt: arguable.  it is certainly better than it used to be, but I
	  wouldn't claim it was a great performer.  but if manipulating text is
	  a large part of what you are doing, then yeah, it is quite good.
<taylanub> enymo`: i think it could be any number of variables involved,
	   depending on the mode :P
<enymo`> i want php to align the next line to the '=' if the current line
	 doesn't end with ';'
<ijp> fourier: unless you count new-lisp as mccarthy lisp  [04:29]
<enymo`> amongst other things
<zellio> Haskel is a pretty nice lisp IMO
<ijp> which is, by the transitive property of brokenness, also broken
* zellio hides
<fourier> ljp: that is what I'm going to say: lisp is not a language, it is a
	  family of different languages with the same origin. At least as I
	  understand
<zellio> fourier: something like that
<ijp> fourier: sure, and spanish is not a language its a family of language, and
      english isn't a language it's a family of languages, ...
<tech1> hmmm  [04:30]
<ijp> repeat until it gets in your head that you are speaking nonsense
<zellio> ijp: ehhh
<fourier> ljp: references to the natural languages are unpropriate
<ijp> plonk
<tali713> I don't know about this placing clojure above elisp, elisp has more of
	  the lisp nature. (even if clojure does have some good ideas).
<aidalgol> ijp: We won't?
<zellio> tali713: that i'm a trolling dick?  [04:31]
<zellio> Arguing which LISP is better is the same as arguing which Programming
	 lanaguae is better
<zellio> it depends on what you are trying to do
<zellio> and what you know
<zellio> and a whole host of other things
<tali713> zellio: shush, you are ruining the fun.
<zellio> =D
<anxt> and whether or not you are circumsized
<zellio> exactly
<ijp> bah, gnus handle's emacs crashes very poorlyt  [04:32]
<technomancy> emacs crashes?
<ijp> s/handle's/handles/;s/poorlyt/poorly/
<enzuru> as per my circumcision i use scheme
<zellio> tha being said, PHP is crap, enymo` don't fix the tabbing issue, use a
	 real language
<ijp> technomancy: well, it wasn't emacs' fault, but it was a victim
<enzuru> its minimalism appeals to a circumcised gentleman such as myself
<tali713> zellio: arguing which language is a worse language, otoh, is
	  objective.
<anxt> "would you like holy communion?" "no thanks, i use python"
<aidalgol> We need an Emacs MMO.
<anxt> enzuru: are you a cut above the rest?  [04:33]
<zellio> aidalgol: what do you think this is?
<aidalgol> Oh, right...
<tali713> damn zellio beat me to the punch.
<enzuru> aidalgol: so everyone can just write elisp scripts to mine gold
	 automatically?
<zellio> technomancy: never crashes, never ever ever, no sir
<zellio> hehe
* aidalgol flays zellio and collects 50XP.
<enzuru> anxt: ho ho ho, one could say that.
* zellio is dead
<youlysses> aidalgol: EMACS-centric or in EMACS?
<aidalgol> tali713: -10XP for missing the punch.
<zellio> youlysses: yes
<aidalgol> youlysses: take your pick  [04:34]
<tali713> ,nuke aidalgol 
* fsbot flies out to space and nukes #emacs from orbit.
<enymo`> zellio: sigh, if only 
<enzuru> maybe i should just write some elisp scripts to automate my
	 contribution to pointless debates in #emacs
<zellio> well there goes that game
<tali713> fsbot: you might have gone overboard there.
* fsbot is broken, like any other bot.
<zellio> enymo`: why are you stuck in crap hell?
<aidalgol> tali713: +1000XP for mass murder
<ijp> aidalgol: not worth it
<aidalgol> ijp: Not worth what?
<zellio> oy, if luke didn't get exp for every storm trooper on the deathstar
	 then tali713 doesn't get it for all of us in here  [04:35]
<zellio> just sayin'
<ijp> aidalgol: nuking #emacs is not worth 1000xp
<enymo`> zellio: i would not call it hell
<anxt> i wonder if there are more vegetarians rubyists than perl monks
<aidalgol> Right, amending tali713's XP
* enymo` winks at zellio
<aidalgol> tali713: -900XP
<ijp> aidalgol: I mean, that's only 20 flayings worth
<zellio> anxt: how many monks will admit to it?
<zellio> enymo`: o.O
<aidalgol> ijp: +10XP for snarkiness  [04:36]
<ijp> aidalgol: it should be at the very least 50xno of users
*** rajeshsr_ (~rajeshsr@115.184.93.240) is now known as rajeshsr
<enymo`> zellio: i would still call it crap
<aidalgol> xno?
<zellio> lol
<ijp> x No.
<aidalgol> ah
<zellio> Usually I just write perl and pass it off as PHP
<billyoc> hehe
<zellio> much easier that way
<zellio> because then I'm at least not writing PHP
<youlysses> aidalgol: Vi(m) has a shooter right?
<aidalgol> There is an instant 100XP penalty for praising PHP.
<aidalgol> youlysses: It does?
<anxt> PHP doesnt flatten lists, does it?
<aidalgol> ,XP  [04:37]
<fsbot> [Too many DB matches] [google]
	http://www.emacswiki.org/alex/%3Fdnd-xp.el
<fsbot> http://www.emacswiki.org/alex/2009-05-15_The_Real_One_Page_Dungeon
<enymo`> if it's cool, PHP doesn't do it
<ijp> enymo`: "if it's cool, PHP doesn't do it _right_"
<billyoc> PHP flattens everything it touches.
<youlysses> aidalgol: I forgot the name, but it's actually pretty damn cool. I
	    think emacs is a boss?
<aidalgol> youlysses: lol  [04:38]
<tali713> elisp is a better web programming language than PHP, just saying.
<anxt> PHP gives cleveland steamers to apache
<youlysses> I'll look it up, if xwidgets doesn't crash my session again.
<ijp> let's provide three ways to access a mysql database in the core language
<tali713> what could possibly go wrong?  [04:39]
* ijp gets on the telephone to pg, and suggests it for arc
<zellio> ijp: lets offer a way to convert from the french napoleonic callendar
	 to the roman imperial
<zellio> because you know, both of those happened after 1970
<sea4ever> wait, what? Those are built-in features of some language?
<sea4ever> er, system* ?
<zellio> sea4ever: php
<ijp> zellio: that sounds less like PHP, and more like something that would be a
      part of common lisp's FORMAT procedure  [04:40]
<zellio> check the stdlib
<sea4ever> my gods, I heard that PHP was a bloated bastard but wow
<zellio> ijp: touche
<technomancy> CL's format function supports roman numerals
<ijp> technomancy: 2 different kinds
<technomancy> ijp: whoa; really?
<ijp> yep
<technomancy> ijp: does the difference revolve around whether IIII is valid or
	      not?
<tali713> ,php 2
<fsbot> I heard php is [2] a barrel of laughs,
<fsbot> [3] not a language. PHP is a thin wrapper around C library calls -- Jeff
	Wheelhouse, ..[Type ,more]
<tali713> ,m  [04:41]
<ijp> technomancy: I believe that is the only difference, yes
<fsbot> [4] some of the worst supported languages in emacs, since most people
	good enough at elisp to write a mode would never use this language.,
	..[Type ,more]
<tali713> ,m
<fsbot> [5] a fractal of a bad design
	http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/,
<fsbot> [6] a purely dysfunctional programming language, ..[Type ,more]
<billyoc> IIII is stupid!
<billyoc> Roman Numeral Flame War!
<technomancy> billyoc: who are the authors of the ANSI CL standard to make that
	      judgment though?
<ijp> [3] is probably the most positive true assessment of PHP in existence
<billyoc> technomancy: Good question.  [04:42]
*** cuba33ci_ (~cuba33ci@114-36-227-19.dynamic.hinet.net) is now known as
    cuba33ci
<youlysses> aidalgol: It's "World War Vi".
<billyoc> lol
<sea4ever> Oh, when will we get a new CL standard?
<ijp> sea4ever: never
<sea4ever> :\ I'll have to become a schemer then
<technomancy> sea4ever: when you build a time machine and travel back to the
	      80s?
<tali713> ijp: [5] expresses how I feel everytime I have to use php.
<aidalgol> Ugh, I'm so used to Guile's iteration mechanisms that I keep falling
	   flat on my face when I need to do iteration in Elisp.
<ijp> tali713: yes, but it not a positive assessment
<ijp> sea4ever: if by scheme, you mean one specific scheme implementation, then
      sure  [04:43]
<technomancy> ISTR a post about how working with PHP can be exhilarating because
	      if you code something elegant you feel like you overcame
	      incredible odds to achieve it, whereas in other languages it comes
	      naturally
<technomancy> actually I think that was gigamonkey =\
<zellio> lol  [04:44]
<tali713> sea4ever: the CL standard doesn't need to change, it is already as
	  good as it will ever get.
<ijp> tali713: ISWYDT
<jlf> in this day and age we need a teramonkey at minimum
<ijp> best to skip the peta monkey, since they'd only just complain we were
      mistreating it  [04:45]
<tali713> ijp: I wish that that was just meant as humor, but CL already has too
	  much, but it is as lean as it can be and still support ancient legacy
	  code.
<fourier> CL contains a lot of stupidities, highly criticized, that's why it
	  should change in any case. Like Haskell, C++ and others did
									  [04:46]
<jlf> you used CL and lean in the same sentence, you lose
<tali713> fourier: vague assertion, what specific oddities?
<enzuru> jlf++
<ijp> rudybot: quote
<rudybot> ijp: Let's start a web 2.
<tali713> jlf: yeah, I know, that's what I mean, but how can you pare it done
	  without angering some gray bearded hacker somewhere?  [04:47]
<tali713> s/done/down/
<ijp> tali713: they'll always find something to be angry about anyway...
<technomancy> tali713: same way emacs turned transient-mark-mode on by default
	      =)
<tali713> ijp: yeah, so just let them have their fun.
<jlf> tali713: you can't, which is why CL and i parted ways  [04:48]
<jlf> well, one reason
<tali713> it's not like having all those extra features you don't really need
	  hurts the language, and there is always scheme (many dialects) elisp,
	  clojure, logo (for M expression lovers), etc.
<jlf> it hurts the ability to use the language effectively  [04:49]
<technomancy> extra features do hurt
<fourier> tali713: a lot of it can be found by googling. From what I see is
	  undefined API for networking, unicode conversion,
	  inconsistent(dependant on legacy code) function and arguments naming,
	  not standartized FFI etc.
<technomancy> they force you to introduce project-specific style guides and
	      mutually-incomprehensible sub-dialects
<aidalgol> Why does fsbot not (require 'cl)?  [04:50]
<tali713> fourier: okay, I understand your perspective now.
<technomancy> *cough*scala*cough*
<zellio> so long as I have macros I do not care
<jlf> like elisp's nth and elt, naturally with the order of their arguments
      reversed
<jlf> CL is _riddled_ with that shit
<ijp> ,give zellio the CPP  [04:51]
* fsbot gives zellio the CPP
<zellio> ijp: that is malicious misunderstanding
<tali713> jlf: yup, I know, but someone could just pare that down, what happens
	  instead usually is that when someone creates a new dialect of lisp,
	  instead of being a pared down version of the seriously bloated CL,
	  they instead make a newlisp or a clojure and so on.  [04:52]
<jlf> i don't see how you could start with CL and end up with the good parts of
      clojure  [04:53]
<jlf> i mean, i do but one step would have to be "throw away whatever's left of
      CL"
<ijp> I know people won't like me saying this, but clojure is probably lisp's
      best hope for the future  [04:54]
<tali713> clojure was a weak example, it is actually a rather unique lisp.  but
	  the is kind of the issue.  this means it isn't a CL replacement.
<Nafai> ijp: seems highly likely  [04:55]
<jlf> i agree 100% that arc and its ilk are ill-advised
<ijp> well, clojure or racket
<tali713> I don't have an issue with clojure being out there, but I don't prefer
	  it as a dialect.
<penryu> tali713: clearly you are wrong
<aidalgol> What?!  fsbot doesn't provide dolist?!!  [04:56]
<tali713> nope.  it's in cl.
<aidalgol> >_<
<aidalgol> OK, so what *isn't* in cl?
<tali713> you can have while, maybe.
<aidalgol> while?
<aidalgol> Just while?  [04:57]
<ijp> mapc?
<tali713> while is the iteration construct.
<fourier> Anyone has experience with Clojure on a production system, like
	  server-side data analisys etc. ? 
<jlf> doubtless
<fourier> For example something of the instagram scale
<ijp> speaking of which, why is mapc defined in C?
<tali713> though mapping can be used to express iteration, and mapc is
	  specifically for this, if you explicitly want to loop, while is it.
									  [04:58]
<Nafai> fourier: I bet technomancy has
<jlf> i'd guess because it's a very old feature
<zellio> forcer: I've been using it but not that scale
<zellio> technomancy is probably your guy
<forcer> zellio: You should use a better nick completion at your scale.
<ijp> let's become itinerant shoe salespersons  [04:59]
<technomancy> fourier: I worked at a place with a petabyte-level email pipeline
	      all written in clojure
<ijp> salespeople even
<zellio> fourier: see message to forcer 
<zellio> forcer: sorry
<zellio> I tab early and often
<forcer> :-D  [05:00]
<ijp> technomancy was a spammer?
<technomancy> haha
<technomancy> ijp: *alleged* spammer, please
<zellio> hehe
<technomancy> anyway, it was archival and indexing
<fourier> technomancy: that is sounds reasonable. Any problems except for JVM
	  ones ?
<technomancy> fourier: we hit a couple compiler bugs (this was 2009), but they
	      were all resolved within a week or two of their discovery
									  [05:01]
<technomancy> that kind of thing doesn't happen any more
<tali713> aidalgol: why do you want dolist anyways?  what sort of side effects
	  are desirable for fsbot?
<fourier> technomancy: ahha, cool. So clojure is quite mature now, yes ?
<cluck> :)
<aidalgol> tali713: Side affects in a `let' for building up a result.  [05:02]
<technomancy> fourier: sure
<zhen> Is it possible to ask gnus to split my old mails? I want to test if my
       rules are good.
<tali713> aidalgol: then you don't want iteration, you want mapping.
<aidalgol> tali713: Sure, except I want `reduce'.
<tali713> apply
<aidalgol> oh, riiight...  [05:03]
<zhen> I've already set (setq nnimap-split-predicate "UNDELETED")
<tali713> aidalgol: or reduce specifically?
<fourier> Interesting, I thought it is more/less something 'under
	  development'. You know it is hard to argument that thing to bosses
<technomancy> fourier: the main problems you see these days are nontechnical
<aidalgol> tali713: I think `apply ' will do the trick.
<technomancy> it's hard to hire for it if you can't hire remote workers, for
	      instance
<technomancy> and it's really hard to get patches applied
<dkh> zhen: B r runs the command gnus-summary-respool-article.  But it might not
      work on nnimap.  [05:04]
<zellio> technomancy: what makes it hard to patch?
<zhen> dkh: thanks i'll try that.
<zellio> technomancy: or do you mean the language in general
<dkh> zhen: I use it with nnml mail.  B q runs the command
      gnus-summary-respool-query, which is another good one to know.  [05:05]
<technomancy> zellio: the maintainers are unresponsive to patch submissions
<zellio> really  [05:06]
<zellio> sad
<fourier> Ahha thanks. To hire is not a problem, you can always have a week/two
	  to teach someone, so the new language is  not a problem. The
	  maturity(expectations in the future) - it is a problem
<aidalgol> ,xp tali713   [05:07]
<fsbot> 85960  ..(integer)
<tali713> wow.  that's a lot  [05:08]
<jlf> ,dl xp  [05:09]
<fsbot> From memory, XP is lisp (let ((i 1) (r 0)) (while (< i 5) (setq r (+ r
	(* (expt 10 i) (roll-dice)))) (setq i (1+ i))) (if (random-choose '(nil
	t)) (+ r 5) r))
<aidalgol> ,xp
<fsbot> 12185  ..(integer)
<jlf> lol noob  [05:11]
<jlf> ,xp
<fsbot> 5695  ..(integer)
<jlf> doh
<technomancy> rudybot: we'll never rescue the princess at this rate!
<rudybot> technomancy: after you watch the princess bride hyou will start
	  quoting parts of the movie
<anxt> buttercup is hot  [05:12]
<aidalgol> ,xp technomancy  [05:13]
<fsbot> 91180  ..(integer)
<technomancy> yessss
<zellio> ,xp zellio 
<fsbot> 1005  ..(integer)
<zellio> o.O
<zellio> I has xp?
<aidalgol> Still a ways away til the next praxis point.
<zellio> hahaha
<penryu> that sean penn's woman?
<jlf> rudybot: you keep using that word
<rudybot> jlf: I think there's a word for people who want to force their
	  personal preferences on the world; they call them lexicographers.
<sea4ever> ,xp
<fsbot> 87660  ..(integer)
<ijp> let's write vocaloid.el
<ijp> ,xp  [05:14]
<fsbot> 79990  ..(integer)
<ijp> I knew all that bot abuse counted for something  [05:15]
<tech1> is there some kind of philosophy behind the keybindings or is it just
	random.... like c-p c-f c-n c-b for navigating cursor north eash south
	west... wouldnt wdsa make more sense
<aidalgol> ijp: LOL
<ijp> tech1: previous/next forward/backward
<tech1> oh i see
<fourier> When working with Emacs, expect to see a lot legacy stuff :)  [05:16]
<tech1> id prefer wdsa
<ijp> then bind wdsa
<ijp> this is emacs, the "have it your way" text editor
<fourier> ljp: +1
<tech1> are c-wdsa or m-wdsa already mapped by default to something else?
<ijp> yes, but then you fix those  [05:17]
<forcer> C-h k <key> tells you what it's bound to
<fourier> yes 
<tech1> or maybe i can use the shift or caps key
<forcer> C-M-S-w/d/s/a sounds like a bit cumbersome to use
<fourier> why don't you want to use normal arrow keys ?  [05:18]
<tech1> good point
<tech1> i do actually
<tech1> lol
<technomancy> wdsa are nonsense on dvorak
<fourier> :))))
<tech1> i was just reading the C-p  b f n...... i wonder why they put that in
	then
<zellio> technomancy: emacs is nonsense to me in dvorak
<forcer> dvorak is nonsense.  [05:19]
<forcer> <.<
<fourier> tech1: old-school legacy 
<technomancy> zellio: at least it's consistently nonsense
* ijp gets the hose ready
<tech1> maybe old keyboards didnt have arrow keys
<zellio> true
<aidalgol> How much xp do you get for hosing idiots?
<ijp> it's like 2xp an idiot  [05:20]
<ijp> of course, there are multipliers for combos
<fourier> C-p C-b etc are not justified by any ergonomic reasons(unlike vim's
	  hjkl)
<tali713> tech1: many did not.  it is easy to remember and it doesn't matter
	  what keyboard you are using, since no matter what they will be based
	  on letter mnemonics, not location.
<jlf> years ago rms commissioned a series of focus groups, erghonomics, and
      usability studies, synthesized them into a set of optimal keybindings, and
      then did the opposite
<tech1> ah i see  [05:21]
<Pio> hehe
<tali713> more importantly if you find C-pnfb frustrating, stop using them, C-s
	  and C-r are far more useful in general.
<fourier> jlf: +1 :))))
<tech1> ill just use my arrow keys
<tali713> tech1: if you like, but there are much better ways to navigate a
	  document than by character.  [05:22]
*** ghast`` (~user@host83.190-30-155.telecom.net.ar) is now known as ghast
<tech1> yeh the words and lines too i know
<tali713> tech1: are you programming?
<anxt> arrow keys are teh fail sauce
<Pio> ctrl-arrow isnt bad
<tech1> not right this moment. but in general yes
<ijp> ,isearch-for-navigation++  [05:23]
<fsbot> Noted, ijp.  One lispy-point for isearch-for-navigation!
<tali713> tech1: than consider C-M-[udfbae]
<fourier> tech1: it is perfect solution. After all they were designed for that
	  :) 
<tali713> s/than/then/
<jlf> ijp: you misspelled ace-jump-mode, hth
<anxt> C-f and C-b end up in a suprisingly logical format on dvorak.
<ijp> jlf: is that the one where you get numbers for jump locations? Or am I
      thinking of something else?
<jlf> letters, but yeah
<jlf> i was a skeptic for a long time but it's pretty great  [05:24]
<tech1> hmm ok
<zhen> dkh: Thank you. I guess B r doesn't work with IMAP, but B q did show me
       something interesting. :)
<tali713> tech1: but when I am in a read-only mode I usually bind hjkl to
	  character movement.
<anxt> i actually jump around documents using the C-r C-s and enter as per yegge
       blog
<anxt> great trikc really  [05:25]
<anxt> much more ninja like
<fourier> anxt: incremental search rocks
<anxt> fourier: beyond cool, yeah
<tali713> see also C-u C-[rs] for regexps. (or C-M-[rs])
<anxt> oh shit, srsly?
<zhen> one more question: in gnus, how to remove "nnimap+server:" from group
       view?  [05:26]
<tech1> C-l seems pretty useful too
<anxt> tali713: that is a pwnage tip
<jlf> i keep meaning to make C-v go to point-max instead of stopping after
      moving the last full window height
<anxt> C-u just makes shit cool
<tali713> anxt: did you see C-u M-% makes it replace /word/?  [05:27]
<tali713> C-M-% is of course regexps.
<anxt> tali713: no, i am still in shock of the fucking awesomeness of regex
       incremental search  [05:28]
<tali713> don't forget \= is point. :)
* aidalgol tries...
<aidalgol> \=
<aidalgol> I just get "\=" inserted...
<Buglouse> Conditional to use in mode-line-format for inactive display?  [05:29]
<tali713> aidalgol: in a regexp?
<aidalgol> tali713: Oh, a regexp.
<anxt> i am used to PCRE but if i put on something sexy and cuddle with M-x
       rebuilder for a night i can get comfortable with a new lover
<aidalgol> How is point useful in a regexp?
<bipt> zhen, ,,dv gnus-summary-line-format
<fsbot> *The format specification of the lines in the summary buffer.
<fsbot> It works along the same lines as a normal formatting string,
<fsbot> with some simple extensions.
<fsbot> %N   Article number, left padded with spaces (string)
<fsbot> %S   Subject (string) ..[Type ,more]
<nounch> hello, is there any 'jump back to last/next n editing points in
	 current/other buffer'?
<tali713> aidalgol: not very in regexp-search, but it can actually be quite
	  handy.  [05:30]
* jlf discovered browse-kill-ring-insert-move-and-quit this morning
<nounch> hello, is there any 'jump back to last/next n editing points in
	 current/other buffer' that you have used and can recommend?
<nounch> there we go ;)
<nounch> oh no, still not
<tali713> nounch: like popping the mark?
<anxt> jlf, that must be part of icicles or somethnig
<nounch> hello, is there any 'jump back to last/next n editing points in
	 current/other buffer' package that you have used and can recommend?
<jlf> no, it's standalone.. ,,browse-kill-ring
<fsbot> [->] hmm, BrowseKillRing is at
	http://www.emacswiki.org/cgi-bin/wiki.pl?BrowseKillRing
<nounch> tali713: yes, exactly
<forcer> nounch: "editing point" is a bit tricky - C-u C-SPC for marks  [05:31]
<anxt> oh sweet lord, browse-kill-ring
<tali713> nounch: you appear to be repeating yourself.  please wait for people
	  to read and think before asking again.
<anxt> i cannot take anymore awesomeness
<anxt> i will fall over like a pentecostal in the spirit
<enymo`> ,,
<tali713> ,a pop.*mark
<fsbot> Try: flame-howto quickstart TLD
<fsbot> 6 matches.  (fs-pop-mark fsi-pop-mark pop-global-mark pop-mark
	pop-tag-mark pop-to-mark-command)
<nounch> tali713: i was correcting my grammer, sorry
<jlf> after binding the command i mentioned,  M-y C-s foo RET RET  from a buffer
      will insert the most recent kill-ring item containing foo
<tali713> nounch: see above, that ought to cover it.
<tali713> ,breadcrumbs  [05:33]
<fsbot> try:  AttributeBreadcrumbs LocationBreadcrumbs PathBreadcrumbs
<nounch> by 'editing point' i refer to any more sophisticated abstraction than
	 C-u C-SPC; e.g. make emacs automatically add a point in the buffer to
	 the list of last 'editing points' before jumping etc.
<tali713> http://www.emacswiki.org/BreadcrumbForEmacs
<anxt> lol there was an ascii penis in my killring  [05:34]
<anxt> i lulled
<nounch> breadcrumb still requires manually adding the bookmarks
<tali713> nounch: anything you can do manually you can do automatically.  you
	  are in a programmable editor.  [05:35]
<nounch> tali713: that's the standard answer and it's right; hence i was asking
	 for packages that already do that
<forcer> tali713: I think he was asking if anyone knew of an existing
	 solution...
<nounch> i think eclipse provides a nice 'jump to last editing point', if i
	 recall correctly  [05:36]
<tali713> nounch: there is no such discrete even in emacs, you would need to
	  establish a mechanism for dealing with movement vs editing.  and only
	  mark places where a movement command came after an editing command. 
									  [05:37]
<fourier> C-u c-space doesn't work ?
<forcer> nounch: If you want Eclipse, you know where to find it  [05:38]
<forcer> I suppose one could advice `self-insert-command' and use `last-command'
	 or something ...  [05:39]
<nounch> well, as far as i can tell your answer to my question would be 'no'
<nounch> ?
<tali713> the answer is, non-trivial.
<forcer> nounch: No one here seems to know of a pre-existing package, no
<Buglouse> I want to change the mode-line-format face for the properties of
	   evaluated elements when window is active/inactive (mode-line-inactive
	   does not overwrite properties), http://slexy.org/view/s2rbA0mix1
									  [05:40]
<jlf> ,dv after-change-functions
<fsbot> List of functions to call after each text change.
<fsbot> Three arguments are passed to each function: the positions of
<fsbot> the beginning and end of the range of changed text, ..[Type ,more]
<fourier> Sounds a bit strange, could you provide with some use-cases ?  [05:41]
<jlf> you could add logic to push (point) if appropriate, but it might bring
      emacs to its knees
<nounch> there are so many crazy things that *could* be done (differentiating
	 several levels of editing points which are differentiated by (editing)
	 distance and ranked by importance with the help of
	 pre-fetched/hand-crafted data and then recommended to the user with in
	 a somewhat soffisticated way); but i was just looking for some packages
	 that make life a bit more convenient since i have to jump a lot more in
	 lately for some reason
<nounch> jlf: that may very well be the case  [05:42]
<jlf> nounch: C-u C-SPC almost always does what i want
<fourier> Just explain use-cases: maybe it is something interesting for all
	  around and worth implementing
<jlf> C-SPC to leave breadcrumbs beyond those that happen automatically
<tali713> nounch: setting a mark is the easy way.  leaving bookmarks everytime
	  you edit, but popping the prior if the point hasn't moved some minimum
	  distance is easily doable. bot you want some method outside of marks
	  if you are doing this regularly.  [05:43]
<jlf> you could have a timer push (point) onto a stack every so many ms if it
      differed sufficiently from the top of the stack  [05:44]
<tali713> which is undoubtedly very close to how $ide is doing it.
<nounch> usecases? boring manual analysis of large data sets, game development
	 where you have to set/move variables all over the place, redoing
	 documentation,... (i didn't really have the need so far, though)
									  [05:45]
<jlf> time-based would be more efficient than in after-change-functions
<tali713> nounch: personally, I find code folding to be a better way of handling
	  large source files.
<tali713> jlf: agreed.
<nounch> i hate cold folding
<nounch> (mainly because i have never used it)  [05:46]
<nounch> different tastes
<jlf> narrowing is nice too
<nounch> (in org-mode etc. i'm constantly using it, though)
<jlf> and which-func-mode
<forcer> Hm. Well, the undo list already does set "break points" between editing
	 and moving actions. You could replicate that.
<tali713> and indirect buffers.
<jlf> hmm, it might be interesting to have a command that partitioned a parent
      buffer into a set of narrowed indirect buffers  [05:48]
<fourier> nounch: that is quite unprecise. Concrete examples could help
	  everyone(and me) to understand why it is better than manual bookmarks
	  or hooks around 'jump to last buffer' thing  [05:49]
<tali713> org does that for code editting (iirc), or it duplicates it.
<nounch> jlf: ... and then you run into the old 'how to position them in windows
	 in the best manner' issue
<jlf> could also be useful for mmm
<nounch> tali713: i've used that lately, right
<jlf> no, that's completely orthogonal
<nounch> mmm?
<fsbot> [->] From memory, MultipleModes is at
	http://www.emacswiki.org/cgi-bin/wiki.pl?MultipleModes .. + other
	entries
<tali713> jlf: that's just what I was thinking, but I hate encouraging polyglot
	  files.  [05:50]
<jlf> i've said too much
* jlf fades into the mist
<nounch> tali713: 'polyglot files', can you explain?
<nicferrier> tali713: folding. I'd like to hide/show flet bodies by default. do
	     you know of anything that does that?
* nounch hears a cry from the mist...  [05:51]
<tali713> nicferrier: nope but fold-dwim-org/minor-mode is how I do folding.
	  +hs of course.
<tali713> and it will certainly handle many structures, including flet.  [05:52]
<nicferrier> yeah. I use hs and I really like it except the having to do
	     it. mostly I just want the stuff hidden
<nounch> tali713: you mean like storing source files of various languages in one
	 big org file/buffer and then extract them?  [05:53]
<nicferrier> I will look at fold-dwim-org
<jlf> nounch: more often html, php, and js
<nounch> jlf: still php, really?  [05:54]
<jlf> people still pay for it
<tali713> nounch: no, I mean the php+js+html single file monstrosities.  org is
	  specifically designed for embedding languages.  [05:55]
<nounch> jlf: that's exaclty what i see as a major problem for extracting too
	 many regions into separate buffers, where should you put them if you
	 already have your html/css/... files splattered all over the screen, so
	 jumping is/could be a lot more comfortable in this regard
<nounch> tali713: 1) those polyglot files are just wrong for so many reasons 2)
	 yes, but i've seen people structuring small projects in huge org files
	 hierarchically and extract them afterwards for building a directory
	 structure from it etc.  [05:57]
<nounch> jlf: which-func-mode... funny, i've never used that  [05:59]
<jlf> nounch: i fail to see how a set of windows containing indirect buffers is
      harder to arrange than a set of windows visiting the same single buffer
<jlf> anyway, it doesn't exist :) 
<nounch> jlf: no, jumping around in one buffer vs. multiple buffers (in multiple
	 windows)  [06:00]
<nounch> jlf: no, it does exist; it's neat
<jlf> ok  [06:02]
<nounch> support for c, c++, perl, cperl, python, makefile syntax, sh (sh*?),
	 fortran, f90, ada, diff - that's it? no js? no ruby? no java? no...? -
	 you see my problem?
<tali713> it supports erc??  [06:03]
<fsbot> It is decidedly so
<jlf> nounch: you lost me
<nounch> jlf: which-func-mode only supports those major modes/languages; i'm
	 missing some major languages
<jlf> write a patch?  [06:04]
<nounch> (yes, i could always add it myself, i know; but i don't have enough
	 time to waste ;))
<fourier> what's the problem, update it
<nounch> i knew that answer would come
<nounch> jlf: ^
<tali713> nounch: does it /really/ not support java, or is that just not listed?
<tali713> also which-func-mode is deprecated as of 24.1 which-function-mode.
<jlf> nounch: so it's not worth /your/ time but it's worth /someone else's/
      time?
<fourier> It is emacs after all, it is DIY editor in elisp
<nounch> hah, it *does* support the others (hopefully), it is jus disabled (for
	 some totally logical reason, i guess)  [06:05]
<nounch> support for all the disables languages is good? sufficient? crappy?
									  [06:06]
<tali713> i just turned on which-function-mode, it started helping me in /erc/!
<anxt> its hailing like a son of a editor
<fourier> I believe this 0.5 hour you are complaining about here at #emacs could
	  be spent on implementing your own functionality
<anxt> yeg is getting its arse kicked
<tali713> nounch: so good that no one has found it lacking enough to make them
	  want to make support better.
<nounch> tali713: the which-func-mode doc does not say a word about the
	 deprecation  [06:07]
<nounch> maybe i have the old docs..
<tali713> are you in 24.1+?
<anxt> I'm using ERC Version 5.3 with GNU Emacs 24.1.1 (x86_64-pc-linux-gnu,
       multi-tty) of 2012-08-14.
<jlf> tali713: whoa, that's slick
<nounch> tali713: not this emacs, no, didn't notice, sorry
<tali713> jlf, well, kinda,  I don't think it really is all that useful in irc.
<jlf> idk, showing the first line of the docstring of unfamiliar variables
      people mention seems useful  [06:08]
<nounch> C-u C-SPC is supposed to jump back and forth between the current and
	 the last mark, right?  [06:09]
<enymo`> just back the mark ring
<tali713> ,C-h k C-SPC
<fsbot> set-mark-command is an interactive compiled Lisp function in
<fsbot> `simple.el'.
<fsbot> It is bound to C-SPC, C-@.
<fsbot> (set-mark-command ARG)
<fsbot> Set the mark where point is, or jump to the mark. ..[Type ,more]
<enymo`> i think you're thinking of C-x C-x
<enymo`> ,C-h k C-x C-x  [06:10]
<fsbot> exchange-point-and-mark is an interactive compiled Lisp function in
<fsbot> `simple.el'.
<fsbot> It is bound to C-x C-x.
<fsbot> (exchange-point-and-mark &optional ARG)
<fsbot> Put the mark where point is now, and point where the mark is
	now. ..[Type ,more]
<nounch> yup, C-x C-x marks the whole region visually, though - kind of annoying
<enymo`> you can remove the highlighting
<jlf> C-h v transient-mark-mode
<tali713> yeah, transient-mark-mode sucks.
<nounch> sure, but i want transient-mark-mode in general, just not for jumping
	 (since hitting C-g to un-highlight it for every jump is just annoying)
									  [06:11]
<jlf> so write a wrapper that sets the mark after such movements  [06:12]
<jlf> complaining about emacs' default behavior is boring and unproductive.
      learn to customize it or learn to live with it.  [06:13]
<nounch> nah, i'll just keep remembering the rough line number if possible of
	 just use C-s etc. - it's all a bit hacky anyway
<nounch> jlf: 'complaining ...' - another default answer, yay!  [06:14]
<jlf> did you ever wonder why?
<nounch> do you guys have your irc client set up for those standard answers?
<nounch> ;)
<jlf> nounch: i've been trying to help you but i see now that i've been wasting
      my time  [06:15]
<nounch> jlf: no, it's fine, i've learned about which-func(tion)-mode
<nounch> and i know how i *could* potentially make jumping more 'flexible' (some
	 day, some time)  [06:16]
<fourier> If it is not worth enough implementing even by you, why should others
	  care? Its their spare time to write a code after all :P  [06:17]
<nounch> is there a package that provides a quick jump list (display all
	 classes/functions/enums/... in the current file/buffer and jump there;
	 jump back to the last n functions etc.) for a wide variety of
	 languages?
<forcer> `imenu'?  [06:18]
<nounch> oh yeah, i forgot imenu (there are so many extension that i use so i
	 just keep forgetting the most important ones)  [06:19]
<nounch> something was wrong/laggy with the way imenu does it, that's why i'm
	 not using it anymore, i think, let me check
<nounch> no, imenu is fine for jumping, i guess  [06:23]
<enymo`> grounch
<nounch> oh, one more issue: using C-s and loccur mode somtimes causes
	 linum-mode to toggle spantaneously in all other windows but the current
	 one; is this a known issue?  [06:24]
<fourier>  No that is strange   [06:25]
<fourier> please report strange behaviour on github.com/fourier/loccur  [06:27]
<fledermaus> ,f;ex  [06:39]
<fsbot> [google]    http://www.emacswiki.org/emacs-ru/EmacsOnTerminal
<fsbot> http://www.emacswiki.org/emacs/ErcLoading
<fledermaus> ,flex
<fsbot> try:  EmacsFlexDebugger FlexMode
<fledermaus> ,flexmode
<fsbot> FlexMode is at http://www.emacswiki.org/cgi-bin/wiki.pl?FlexMode
<fledermaus> ,flexmode  [06:40]
<fsbot> hmm, FlexMode is at http://www.emacswiki.org/cgi-bin/wiki.pl?FlexMode
<kyllikki> fledermaus: by your command imperious leader ;-)
<fledermaus> kyllikki: ^
<kyllikki> fledermaus: cheers ;-)
<fledermaus> not tried either, but let me know if they don't work.  [06:41]
<kyllikki> wilco
<macrobat> rudybot: quote  [06:55]
<rudybot> macrobat: I blame oil companies
<macrobat> rudybot: your water is burning  [06:56]
<rudybot> macrobat: why do muslins love to chant "allah akbar" so much?  like
	  they show news from libya, everything is burning, but still there's
	  one retardedly sounding dude crying "allah akbar" in the background
<macrobat> rudybot: it's like the fabric of society back there
<rudybot> macrobat: i.e. if you don't maintain the fabric of society, then you
	  are not governing.
<Expez> Is emacs-clang-complete-async worth using? Is it an improvement over
	ctags for c programming?  [06:59]
<Expez> I see it has experimental support for on the fly syntax checking. That
	might be handy.  [07:00]
<nounch> this is a funny problem: if i'm in dired+ with ido and hit '+' to
	 create a new file/directory with the name 'foo' and there is already a
	 file/directory called 'foo.*', hitting ENTER will only select the
	 already existing 'foo.*' and open it, but does not let me create 'foo';
	 i've worked around this with M-!, but i think that ido probably already
	 adresses this problem with a certain function/keybinding; does it?
									  [07:11]
*** Frozenlo` (~user@cable-15.246.173-182.electronicbox.net) is now known as
    Frozenlock  [07:12]
<fledermaus> nounch: known problem. you need to temporarily disable ido or
	     something iirc.  [07:13]
<fledermaus> ,ido  [07:15]
<fsbot> [->] I heard InteractivelyDoThings is [0] at
	http://www.emacswiki.org/cgi-bin/wiki.pl?InteractivelyDoThings ..[Type
	,more]
<fledermaus> ,more
<fsbot> [1] an extended reimplementation of iswitchb that also covers operations
	like opening new files (as well as switching buffers like iswitchb),
<fsbot> [2] M-x finder-commentary RET ido RET,
<fsbot> [3] see also ,ido-hacks
*** homie (~user@xdsl-78-35-128-150.netcologne.de) is now known as Guest51780
									  [07:24]
*** jcubic` (~user@aeow32.neoplus.adsl.tpnet.pl) is now known as jcubic  [07:29]
<jlf> ,,...  [08:19]
<fsbot> [In the distance, you hear a dog bark]
<Frozenlo`> woof  [08:23]
<offby1> Has anyone in the history of the Universe ever actually downloaded
	 something from CPAN and had it build successfully?  Just asking.
<Buglouse> Am I included in history?  [08:27]
<Buglouse> /history/the history of the Universe/
*** Frozenlo` (~user@cable-15.246.173-182.electronicbox.net) is now known as
    Frozenlock  [08:29]
<bipt> ,,...  [08:31]
<fsbot> [In the distance, you hear a dog bark]
<bipt> ,yow
<fsbot> Actually, what I'd like is a little toy spaceship!!
<penryu> offby1: yes, but that was a full 10 years ago.  [08:34]
* Buglouse loves it when an un-terminated block causes init to not load  [08:35]
<Automorphism> How do I move an existing buffer to another window?  [08:37]
<Buglouse> That is like asking, "How do I get in the car?" There are a plethora
	   of methods which are all appealing, until you know where you want to
	   sit, then there is the most efficient.  [08:39]
<fsmunoz> Automorphism: what are you trying to do exactly?  [08:40]
<youlysses> Buglouse: Chainsaws?
<aidalgol> Great, I have a lot of work to do, and I have the programming itch.
<aidalgol> s/the/a/
<youlysses> aidalgol: Class-work, or work-work?  [08:41]
<aidalgol> youlysses: class work
<Automorphism> fsmunoz: I use C-x 3 to split Emacs in two halves. One is meant
	       to be used for IRC and web browsing, and the other one is meant
	       to be used for work/coding.  [08:42]
<Automorphism> fsmunoz: However, sometimes a buffer is in the wrong frame.
<youlysses> aidalgol: When did your classes start? Mine did Monday, but all I
	    need to do is readings. :-P
<aidalgol> youlysses: It's mid-semester study "break."
<jlf> Automorphism: just bury it in the first window and switch-buffer to it in
      the second  [08:43]
<Automorphism> jlf: How?
<Buglouse> If you wanted to get in through the hood, maybe a torch would suffice
<youlysses> aidalgol: How-long does that last?  [08:44]
<aidalgol> youlysses: Two weeks.
<Buglouse> (assuming the hood is where the engine and etc are located)
<youlysses> Oh that sounds nice, assuming the don't pack you with a-ton of
	    work...?
<mefesto> I'm trying to get color-theme working on my system (OSX 10.8).  I
	  installed emacs with homebrew and everything else seems to be fine.
	  I'm unable to install any other color-theme packages from marmalade.
	  It complains that I have color-theme 6.5.x when I need 6.6.x.  Any
	  ideas (I'm new to OS X)?  [08:51]
<aidalgol> youlysses: They hit us with tests the first week back.  [08:53]
<aidalgol> Sometimes, first *day* back.  [08:54]
<aidalgol> I have two tests to prepare for, and two assignments to finish.
<insomniaSalt> Automorphism: you can store your desired window/frame
	       configuration in a register, e.g.: C-x r w 1 then restore with
	       C-x r j 1  [08:58]
<insomniaSalt> Automorphism: and maybe you will find ,,buffer-move or
	       ,,winner-mode useful
<fsbot> try:  buffer-move buffer-move.el
	http://emacswiki.org/emacs/SwitchingBuffers
<Automorphism> insomniaSalt: Thanks. Let me see that.  [08:59]
<aidalgol> ,xp
<fsbot> 88795  ..(integer)
<aidalgol> ,xp jlf  [09:03]
<fsbot> 74720  ..(integer)
<stumbles> Is there defacto standard place for manually installing emacs
	   extensions in your home directory? As opposed to writing your own
	   extensions? I've seen people using .elisp and .emacs.d
	   directories. Any preferences?  [09:05]
<aidalgol> stumbles: I use .emacs.d/elisp/
<aidalgol> I also use .emacs.d/init.el instead of .emacs
<daveo> aidalgol is a USER  [09:06]
<aidalgol> daveo: What?
<daveo> nuffin, how goes the claseses?
<stumbles> thanks aidalgol
<aidalgol> ,shoot daveo 
* fsbot loads its lawyer and starts criminal proceedings against daveo.
<daveo> hah, i have f lee bailey in my back pocket  [09:07]
<dzho> now why would you go and do a thing like that?  it can't be very
       comfortable for him in there.  [09:08]
<rryoumaa> stumbles: .emacs.d is for emacs to use.  i would never use it.
<daveo> dzho: ouch! i think he just bit me!
<aidalgol> rryoumaa: Putting elisp in a subdir of .emacs.d is fine, though.
									  [09:09]
<stumbles> rryoumaa: I just read something similar in paragraph 4 here:
	   http://www.emacswiki.org/emacs/DotEmacsDotD
<fsmunoz> I used to put it in ~/src/elisp, but now I put them in ~/.emacs.d/lisp
<rryoumaa> aidalgol: probably but not my style
<rryoumaa> .emacs.d is like var; it is kind of a cache  [09:11]
<jlf> ,homie-yow  [09:12]
<fsbot> more good penises!
<fsbot> lol
*** rainrider|away (~rainrider@31-19-187-99-dynip.superkabel.de) is now known as
    rainrider  [09:13]
<rryoumaa> maybe homie is trying to make us all reach enlightenment
<jlf> homie is a regular chauncey gardner  [09:14]
<legumbre> what if god was one of us?
<stumbles> thanks for the tips folks
<rryoumaa> jlf: is that that movie character?  ,,g "chauncey gardner"  [09:15]
<fsbot> [google]    http://www.imdb.com/title/tt0078841/
<fsbot> http://www.imdb.com/title/tt0078841/quotes
<rryoumaa> guess so
<jlf> yeah, _being there_
<Frozenlock> legumbre: What if the universe is written with recursive functions?
<legumbre> Frozenlock: :-O  [09:16]
<rryoumaa> one person says it's ca
<Frozenlock> ca?
<rryoumaa> automata
<rryoumaa> like conway life
<rryoumaa> "a new kind of science"
<stumbles> Is there an equivalent of mail-self-blind for message mode? Using
	   mail-self-blind works, but it warns me I'm using message-mode, so I
	   suspect there's a better way.
<rryoumaa> a few lines of code, he says
<Frozenlock> rryoumaa: car, cdr, cons? :)  [09:17]
<rryoumaa> dunno, i'm not sure i understand the information theory constraints
	   onthat kind of speculation yet  [09:18]
<scombinator> what the ever loving hell?  [09:21]
<scombinator> ,homie-yow
<fsbot> isn't that the big GNU that shits free?!
<fsbot> lol
<scombinator> ,scombinator-yow  [09:22]
<fsbot> scombinator: What makes you believe ,scombinator yow? 
<scombinator> The truth value is out there
<aidalgol> <scombinator> what the ever loving hell? <-- What brought that on?
									  [09:28]
<scombinator> dealing with enterprisey bollocks  [09:30]
<aidalgol> ah
<aidalgol> ,xp scombinator
<fsbot> 3970  ..(integer)
<aidalgol> Hmm, not much.
<aidalgol> If you grind for a bit more, you can use it to level up your flay
	   ability.  [09:31]
<scombinator> ,dl xp
<fsbot> hmm, XP is lisp (let ((i 1) (r 0)) (while (< i (random-choose '(3 4 5)))
	(setq r (+ r (* (expt 10 i) (roll-dice)))) (setq i (1+ i))) (if
	(random-choose '(nil t)) (+ r 5) r))
<scombinator> thought so
*** PuercoPop (~PuercoPop@190.41.173.174) is now known as Guest62257
<aidalgol> Dammit, don't look in the box!!
* aidalgol wrote that this morning.  [09:32]
<aidalgol> I think it's more fun than ,karma and ,points.
<scombinator> I would be more impressed if fsbot gave everyone points based on
	      how novel, intelligible or conversation provioking their
	      utterances were  [09:33]
<aidalgol> If we had the technology to do that, I think rudybot would be much
	   more interesting.
<scombinator> The tech exists
<scombinator> novel = not seen before / unusual in language model
<scombinator> intelligible = likely given language model  [09:34]
<scombinator> conversation provoking = people talk back, or about the same
	      concepts
<aidalgol> How would it measure conversation provoking?
<aidalgol> The "same concepts" bit would require more advanced AI.
<scombinator> same concepts = PCA on language model
<scombinator> or ICA  [09:35]
<scombinator> if you're feeling non-normally distributed
<aidalgol> And parsing natural language would probably be too resource intensive
	   for fsbot's host.
<scombinator> language model is simply the occurances of terms within whatever
	      bucket you're dealing with. IRC lines, documents, sliding windows
<scombinator> aidalgol: None of this requires parsing natural language *at all*
									  [09:36]
<aidalgol> OK, then implement it.  Give us a points bot.
<aidalgol> Could be fun.
<scombinator> I'm lazy, and no to sure about the bot aspect of that
<tali713> rudybot: say something novel.  [09:39]
<rudybot> tali713: "To set this novel bacteriumand all its descendantsapart from
	  any natural creation, Dr. Venter and his colleagues wrote their names
	  into its chemical DNA code, along with three apt quotations from James
	  Joyce and others."
<crundar> attempting to set up the w32-symlinks. What does #filename# when
	  listing in dired indicate?
<dlams`> autosave?
<fsbot> AutoSave -- Try M-x customize-group RET auto-save RET .. + other entries
<chu> In the mode-line for C mode, it says "C/l" what does the "l" mean? :p
<dlams`> chu: try M-x describe-mode
<tali713> crundar: autosave or lock.
*** j0ni (~j0ni@tomos.lollyshouse.net) is now known as stillman  [09:40]
<chu> Yeah, I know about `describe-mode' it doesn't say anything about the "l"
      though (It's not a minor mode; I `diminish' all minor modes. It has
      something to do with the C mode, just wondering what it is in reference
      to)  [09:42]
<tali713> I alwaus assumed C Language  [09:43]
<chu> Ahh, that's plausible.
<tali713> C++ is C++/l  [09:44]
<scombinator> cc-mode
<scombinator> CCs are of course, a brand of nacho-chip
<chu> Haha  [09:45]
<tali713> i see.
<tali713> ,df c-update-modeline
<fsbot> c-update-modeline is a compiled Lisp function in `cc-cmds.el'.
<fsbot> (c-update-modeline)
<fsbot> Not documented.
<tali713> well, anyeays, check that.
<chu> Mmm, not documented.  [09:46]
<scombinator> No apropos matches for 'diminish'
<tali713> chu: sure it is, UTSL
<chu> scombinator: Yeah, diminish doesn't come by default  [09:47]
<chu> I just have too many minor modes enabled to have them all visible in the
      mode-line - I genetrally know which ones they are, so I just keep the
      major mode in there to tell me what's going on.
<tali713> chu: last time I used diminish, it was buggy. but otherwise, I really
	  appreciatted it.  [09:48]
<chu> what does UTSL mean? :p
<tali713> fsbot: tell chu about utsl
<fsbot> chu: I heard UTSL is [0] an abbreviation for Use The Source, Luke!
<fsbot> [1] an alternative to rtfm when there is no fm to r., ..[Type ,more]
<chu> I haven't had any problems with diminish
<chu> tali713: :)
<tali713> back to tail-recursion with me.  [09:49]
<scombinator> Enabled minor modes: Auto-Composition Auto-Compression
	      Auto-Encryption Blink-Cursor Column-Number Erc-...x17
	      File-Name-Shadow Font-Lock Global-Auto-Complete Global-Font-Lock
	      Ido-Everywhere Line-Number Mouse-Wheel Nxhtml-Menu
	      Nxhtml-Tag-Do-Also Popcmp-Group-Alternatives
	      Popcmp-Short-Help-Beside-Alts Rngalt-Display-Validation-Header
	      Rngalt-Minimal-Validation-Header Shell-Dirtrack Show-Paren Tooltip
	      Transient-Mark Workgroups
<chu> Seems to be something about electric flag, according to the sauce.
<scombinator> My mode-line shows only (ERC wg)  [09:50]
<tali713> not every minor mode has a lighter.
<crundar> tali713 I've followed the instructions in source religiously. .lnk
	  files are still in my colorscheme the same color as autosave files and
	  locked files. When I attempt to open it anyways, it says the file no
	  such file or directory, and surrounds the symlink name with
	  octothorpes  [09:55]
<chu> Why might someone "... feel squeamish about using anonymous functions in
      your hooks"?  [09:59]
<scombinator> Because they tend not to be documented>  [10:05]
<chu> Ahh, good point.
<tali713> chu: better reason, you might want to redefine later or remove,
	  lambdas are harder then named functions to simply redefine.
									  [10:09]
<tali713> so at minimum (add-hook 'foo-mode-hook (define my-hook () (do stuff
	  here)))  [10:10]
<dlams`> can anyone explain this snippet to me: https://gist.github.com/3444796
									  [10:19]
<dlams`> i know its super simple, just don't understand it
<chu> tali713: a hook is just a function right? So, what I have called
      `turn-on-general-programming-modes' which enables stuff like glasses-mode,
      hs-minor-mode, etc is more aptly called `general-programming-hook' (I ask
      because, adding a hook to a hook seems a bit odd to my (naive) reading, so
      to clear it up)  [10:21]
<JEG2> I think I may have a scoping issue.  I want to invoke sql-mysql without
       being asked to confirm my login details.  I tried:  (flet ((sql-get-login
       (&rest pars) () t)) (sql-mysql))
<dlams`> JEG2: we're doing the exact same thing right now, hah.  [10:22]
<JEG2> That should hide the function that prompts for and sets the login
       variables, but it doesn't.
<dlams`> JEG2: my solution was to set the sql vars, and then call
	 sql-product-interactive 'mysql 
<dlams`> JEG2: though it still prompts, just prefills them
<JEG2> The old function is still called.
<tali713> chu: yes, you had a function to a hook.  sorry for the ambiguity.
	  also normal hooks are thunks. (iirc)
<JEG2> dlams`: Yes, setting the variables works, but I'm trying to stop the
       prompting.  [10:23]
<dlams`> JEG2: let me know when you get it working, i'd love to get that
	 snippet!
<chu> Cheers tali713 
<JEG2> Is this an issue with the new scoping in Emacs.  If I do (flet ((whatever
       …)) (do-something)), should do-something's code see whatever?  [10:24]
<dlams`> JEG2: I think you need flet* to do that, but i'm unfamiliar with flet
									  [10:25]
<scombinator> labels  [10:37]
<scombinator> you want labels  [10:38]
<tali713> flet* doesn't exist, does it?
<scombinator> labels is equivalent to flet except that the scope of the defined
	      function names for labels encompasses the function definitions
	      themselves as well as the body. 
<dlams`> tali713: very possible, never used flet 
<scombinator> no flet* does not exist
<tali713> a minor annoyance, cl-flet is distinct from flet and works as you
	  would expect, flet is /not/ cl's flet even though it is defined in
	  cl.el.  [10:39]
<scombinator> Mine is defined in cl-macs.el
<tali713> and yes, labels is the correct thing to do if you want a recursive
	  function.  [10:40]
<tali713> or use my let-recur.
<tali713> scombinator: sure, same difference, if you look carefully you will see
	  that it is not cl's flet.
<scombinator> Unlike flet, the labels in emacs is fully CL spec'd
<JEG2> I just tried using labels, but it's still prompting me.  :(  Any tips on
       how to debug this?  [10:41]
<scombinator> 'prompting you'?
<tali713> not without knowing what 'prompting you' means.
<scombinator> toggle-debug-on-error
<tali713> i.e. you can't do something like (flet ((+ (&rest xs)) (apply '+ 1
	  xs)))   [10:42]
<tali713> you can do that with cl-flet, hwoever.
<tali713> well, with the correct syntax, not what I wrote. :P
<scombinator> code
<JEG2> Yes, the issue was that I want to set the needed sql-* variables (got
       that) then invoke sql-mysql without it asking me what to use.  I tried
       this:  (labels ((sql-get-login (&rest pars) () t)) (sql-mysql))  [10:43]
<JEG2> I expected that to "hide" the function asking me for the values.  [10:44]
<JEG2> But it doesn't seem to work.
<tali713> woohoo, tali-recursion is a go.  [10:45]
<tali713> s/tali/tail/
<scombinator> (defun foo () (foo))  [10:47]
<scombinator> hmm
<tali713> scombinator: yeah, so why don't you tell me how that works out for you
	  in elisp, which does /not/ have tail-call optimization.  well, at
	  least not on /your/ emacs.
<scombinator> tali713: Couldn't you just wait for guilemacs  [10:48]
<tali713> scombinator: you can have guilemacs if you want.  whenever that
	  actually happens.  [10:49]
<JEG2> So no thoughts on the sql-mysql issue?  I'm stuck.
<scombinator> tali713: COSTFU  [10:50]
<tali713> "doesn't seem to work" nope can't help with that.  maybe i you got an
	  error mesage.
<tali713> scombinator: what?
<scombinator> ,costfu
<fsbot> You will have a long and boring life.
<scombinator> ,costfu is Code or Shut the Fuck up.
<fsbot> created.
<tali713> i have given the code, like 3 times in the past two days.
<tali713> but if you want me to link it /again/, sure.  [10:51]
<scombinator> You just said 'tali-recusrion is a go' implying you just finished
	      it
<aidalgol> ,sedate scombinator
* fsbot injects scombinator with sweet, sweet pentobarbital
<tali713> scombinator: yeah, before I only had self tail-call optimization, or
	  weren't you here when I was talking about it, oh, right you were, but
	  you were being a smart ass then too.
<tali713> https://github.com/tali713/misc/blob/master/tail-call.el
<scombinator> I don't/can't/won't read everything written in this channel, even
	      while logged on  [10:52]
<tali713>  /spite
<dlams`> tali713: You put esxml on there! woot!
<tali713> dlams`: yup, and my fork of nethack-el  [10:53]
<tali713> which includes support for cp437 (IBM graphics)
<JEG2> tali713: Ordinarily, I'm pretty tolerate to RTFM responses, but I've
       explained my problem twice now.  The most recent description of the issue
       is a few lines up "…then invoke sql-mysql with it asking me what to use."
       I'm fine if you don't want to read it or don't have ideas.  Just stop
       treating me like an idiot because of it, OK?  [10:54]
<scombinator> I lost interest at (require 'cl-lib)
<tali713> dlams`: feel free to leave any comments suggestions, or questions.
<tali713> JEG2: I'm not treating you like an idiot because you lack knowledge, I
	  am treating you like an idiot because you keep saying you get an
	  error, or it doesn't work, instead of lisppasting the backtrace.  why
	  don't you lisppaste your errors or your code.  [10:55]
<tali713> except I personally don't think I am treating you like an idiot, I
	  think I am treating you like a person who has enough techincal
	  expertise that they should realize that "it doesn't work" doesn't cut
	  it.  [10:56]
<tali713> ,lisppaste
<fsbot> From memory, lisppaste is [0] an (probably not) auto-announcing listing
	host (pastebin) <http://paste.lisp.org/new/emacs>,
	<http://emacswiki.org/wiki/lisppaste> ..[Type ,more]
<tali713> ,tdoe
<fsbot> From memory, tdoe is [0] type M-x toggle-debug-on-error RET, reproduce
	the problem, then lisppaste the contents of the backtrace
	buffer. ..[Type ,more]
<tali713> ,more  [10:57]
<fsbot> [1] NOTE: you dont *have* to lisppaste, just contemplating the backtrace
	will often give you enlightenment
<JEG2> tali713: I have never once said that I am receiving an error.  You are
       not reading.  I do have experience in how to ask questions and I'm not
       trying to waste people's time.  [10:58]
<scombinator> Well sorry for not knowing what 'It's still prompting me' means
									  [11:00]
<JEG2> My problem:  If I invoke (sql-mysql) it *prompts me* for details to use
       in making the connection.  It can take those settings from some variables
       though (let ((sql-database "whatever") …) (sql-mysql)).  But if you do
       that, it will *still prompt you to confirm the values*.  I want to set
       the variables and skip the prompt.  [11:01]
<tali713> JEG2: so you are trying to login to a server that doesn't require any
	  kind of user name?
<dlams`> sql-mysql prompts for credentials then runs sql as an inferior process,
	 using vars like sql-user, sql-password, etc you can prefil the values
	 it prompts for and just hit enter to go through the prompts. Pretty
	 sure he's trying to just get it to stop prompting him since he knows
	 the values
<dlams`> s/he/it  [11:02]
<tali713> JEG2: try macroexpand and see if the code is actually using the
	  correct definition.
<tali713> that is do something like (pp (macroexpand '(labels ((...))...)))
									  [11:03]
<tali713> and C-u C-x C-e it.
<JEG2> I thought I could do that by "hiding" the function is calls to prompt me
       sql-get-login.  But (labels ((sql-get-login …)) (sql-mysql)) doesn't seem
       to work.
<JEG2> Let's start with basics:  do you thing the labels trick should work,
       based on my description?  [11:04]
<tali713> /should/
<scombinator> Hmmm
<JEG2> OK, good to know.  Then I am probably making an error.  [11:05]
<scombinator> I did a similar thing to shut up 'mode-compile':
	      http://vwood.github.com/emacs-compile-on-save.html
<scombinator> I flet read-string to return ""
<scombinator> For this, you need flet, as it uses the dynamic bindings, so don't
	      use labels  [11:06]
<tali713> JEG2: not necessarily, see what scombinator said.  [11:07]
<JEG2> scombinator: OK, so my original attempt with flet was closer to right?
       Good to know.
<scombinator> JEG2: labels is only needed if your function is recursive, if
	      you're trying to shadow the use of the function within the
	      function you call, then you need a dynamically bound function,
	      which flet provides  [11:08]
<JEG2> I did try flet originally.  You guys suggested labels, so I switched to
       trying that.
<scombinator> Didn't quite understand what you were trying to do
<JEG2> No worries.  I get it now and appreciate the clarification.  [11:09]
<JEG2> flet still doesn't work, for some reason.
<JEG2> Ah, I have a guess…  [11:10]
<tali713> JEG2: 23 or 24?
<JEG2> Yes, I just fixed it.  I understand it now.  And this is a problem I have
       often.  Let me see if I can explain it.  Perhaps you can give me tips…
									  [11:12]
<JEG2> tali713: I'm using Emacs 24.
<tali713> okay, cool, jsut wanted to figure out which version of elisp you are
	  in. :)  [11:13]
<stumbles> I'm looking for a way to tell Emacs not to use the "--insecure"
	   argument to gnutl-cli. Can't find anything in docs. Any tips?
<stumbles> gnutls-cli that is  [11:14]
<JEG2> I try to autoload everything, because I thought that was a good practice.
       However, it often bites me for stuff like this.  What happens is that I
       do some hack, like "hiding" a function, then the call to the actual thing
       (like sql-mysql) triggers an autoload that undoes my hack.  I fix it by
       adding a require in my init files.  Is that the right way to go here?
									  [11:15]
<rryoumaa> it is one way  [11:16]
<dlams`> JEG2: not to be a bother, but you could paste that snippet somewhere
	 for the masses (or just me :P)  [11:17]
<scombinator> JEG2: What you could do, is create your own functions, and use
	      them. So you have (defun my-sql-mysql () ...) that does your thing
									  [11:18]
<stumbles> Regarding gnutls-cli, I found the settings by greping the source
	   files. The relevant setting is "tls-program".  [11:23]
<scombinator> I love google's real-time analytics  [11:25]
<legumbre> they're pretty cool
<scombinator> I can post a link, and see where everybody is
<JEG2> dlams`: Sure, but fair warning this function is for use with Rails.
									  [11:28]
<JEG2> dlams`: The function is here:
       https://github.com/JEG2/dotfiles/blob/master/emacs.d/functions.el#L440
									  [11:30]
<dlams`> that's fine :P
<JEG2> dlams`: It depends on the three functions starting here:
       https://github.com/JEG2/dotfiles/blob/master/emacs.d/functions.el#L46
									  [11:31]
*** kennyluck_ (~kennyluck@119.161.158.96) is now known as kennyluck
<JEG2> Night all.  Thanks for the help.
<scombinator> per saldo?  [11:37]
<scombinator> ,t8 de en per saldo  [11:38]
<fsbot> net
<scombinator> net?
<E3D3> I try to add "anything-c-source-info-bash" but Emacs complains: 'Info
       file bash does not exist', although I have one. Can someone help me with
       this ?  [11:40]
<twb> That's german?  [11:41]
<twb> It looks more pt to me.
<scombinator> ,t8 pt en per saldo  [11:48]
<fsbot> per balance
<scombinator> ,t8 fn en per saldo  [11:49]
<fsbot> ERROR: Wrong type argument: characterp, "fn -> English: no matching
	translation services found.
<fsbot> "
<scombinator> ,t8 fi en per saldo
<fsbot> Fri balance
<twb> Italian gives "for balance".
<scombinator> It'
<twb> Anytime you want to finish that sentence...  [11:50]
<scombinator> s 'on balance' or 'ultimately'
<twb> scombinator: what's the context
<scombinator> per saldo, using foo will result in less maintenance costs  [11:51]
<quotemstr> #emacs, are we professionals or are we tradesmen?  [11:57]
<scombinator> What's the difference?  [12:00]
* yhvh lays some pipe  [12:01]
<twb> scombinator: tradesmen charge double for out-of-hours work
<twb> Unless he means "cowboys"  [12:02]
<scombinator> I'm the kind of professional that doesn't do out-of-hours work
<yhvh> what's the least ugly way of dealing with async processes, my code is
       getting nasty fast
<scombinator> async.el ?
<scombinator> elnode.el ?
<yhvh> I don't want to start a whole emacs, isn't that what they do?  [12:03]
<scombinator> yeah
<scombinator> I think it does have process handling that doesn't though  [12:04]
<scombinator> async-start-process
<Buglouse> After (vc-print-log) I issue (log-view-diff) on a revision entry,
	   does anyone know of a way to diff the next|prev revision without
	   going back to log-view buffer?  [12:05]
<yhvh> yeah but the filter function runs on incomplete results, so then you have
       to watch for the end of output, in this case "\n\n", and set a flag
<scombinator> yhvh: Was that directed at me?  [12:07]
<yhvh> scombinator: yeah, anyone really, I'm just venting
<twb> I thought you just used call-process  [12:11]
<twb> And gave it a buffer to interact with
<twb> On unix at least, children are async by default.  All a synchronous call
      really is, is fork+exec+wait instead of fork+exec  [12:12]
<yhvh> this process will stay alive, with a lot of back and forth  [12:16]
<twb> So what  [12:18]
<twb> Open an fd between the two procs, they can talk over it
<rryoumaa> cjk are really rendered weirdly on my mac in emacs 24  [12:22]
<twb> rryoumaa: ns or x11  [12:23]
<twb> rryoumaa: what is the value of window-system?  [12:27]
<tali713> yhvh: you say "start a whole emacs" as if that takes a long time, time
	  emacs -Q (kill-emacs)  [12:34]
<tali713> well, + --eval (oops)  [12:35]
<tali713> yhvh: here that is .05s far less time than whatever task I need to
	  accomplish that demands async.
<twb> time emacs -Q -batch -f kill-emacs  [12:38]
<tali713> .02s  [12:42]
<twb> Mine is more than DOUBLE that!
<twb> Oh, woe, whatever shall I do
<tali713> rryoumaa: yeah, for all the nice UI work, there are some really
	  annoying aspects to working under osx.  I like what they do right, but
	  am regularly frustrated by what they do wrong.  oh well.  that's why i
	  use debian nearly full time.  [12:47]
<scombinator> What use-cases do you have for osx?  [12:50]
<tali713> testing software under osx.
<twb> tali713: and more to the point, you can't *fix* the things that OS X does
      wrong
<tali713> that's the biggest thing wrong with it. :)  [12:51]
<twb> And even when you can, it's in some undocumented config file that nobody
      documents how to use because everyone is busy saying "oh I just downloaded
      this $10 shareware app that makes it work kinda OK"
<tali713> what I can do, is see a cool idea they implemented nicely, and then do
	  it myself under GNU/foo
<twb> Fuck that shit
<twb> tali713: I remember I wrote expose.pl for Ratpoison many years ago
<twb> It was kinda similar to the "layout engine" stuff that xmonad got later
      on, now I come to think of it  [12:52]
<tali713> I really do think that for a gui desktop/window switcher thing
	  "mission control" is really quite nice.  but I already have
	  dynamically many desktops, etc. under stumpwm.  and just as easily.
	  (which I lifted from wmii, because I like stealing ideas)  [12:53]
<scombinator> mission control? midnight commander clone?
<tali713> not at all.  [12:54]
<tali713> unless midnight commander recently got the ability to be a "gui
	  desktop/window switcher"
<tali713> likewise, though I hate the mouse, I do like the idea of having a
	  gesture pad, it is much more practical.  but I can't steal that idea,
	  because I don't do hardware.  [12:56]
<scombinator> I can't seem to google mission control
<bipt> http://support.apple.com/kb/HT4689
<scombinator> unless it's
	      http://telepathy.freedesktop.org/wiki/Mission%20Control
<tali713> http://support.apple.com/kb/HT4689
<tali713> no, it's still osx.  [12:57]
<scombinator> I'm sure they've had this for a while... browsers do too
<tali713> had what?
<scombinator> the zoom out select a window thing  [12:59]
<tali713> scombinator: umm, that's not what it is, but okay.  [13:00]
<bipt> you're thinking of expose,
<bipt> s/,,
<fsbot> Try: flame-howto quickstart TLD
<bipt> s:,$://:  [13:01]
<tali713> bipt: indeed.  expose is that feature and has been around in OSX for a
	  long time, likewise in other OSes.
<bipt> ,flame-howto
<fsbot> bipt, flame-howto is, like, [0] When using lisp in flames, these
	variables are available: victim -- the flamee, nick: the instigator of
	the flame, tgt: this channel
<fsbot> [1] To invoke the nth flame, type: fsbot: flame victim N, ..[Type ,more]
<bipt> ,flame bipt  [13:02]
<fsbot> bipt: You are the comint-mode of humanity,
<tali713> scombinator: it's not so much a feature as a layout for a group of
	  features, even if you have dock hidden normally, it brings up the
	  dock, shows all of your desktops at the top, with the ability to
	  create or remove them, creating them can be done by dragging a window,
	  and it shows all windows on the current desktop, but grouped by
	  application.  it's just a good design for that feature, not unique,
	  just well done.  [13:03]
<tali713> also, since I use stumpwm and have all of those features available at
	  a keystroke, redunant, for my normal use.  but you have to acknowledge
	  well done work when you see it.  [13:04]
<yhvh> this is what I'm doing btw, it's pretty at least
       http://i.imgur.com/Ui0AD.png
<tali713> oh, cool.
<tali713> yhvh: how are you doing it?
<scombinator> Graphics in a repl  [13:05]
<yhvh> svg, using gnugo as back end
<scombinator> Is this some non-standard emacs?
<scombinator> like the xwidget build
<yhvh> scombinator: noway
<tali713> yhvh: right on, so gnugo creates the svg?
<tali713> scombinator: graphics are already available in emacs.
<yhvh> no I'm making that on the fly
<scombinator> how?
<tali713> yhvh: that's what I was hoping to here.  [13:06]
<tali713> s/here/hear/
<scombinator> as a minor mode, alongside text?
<tali713> yhvh: repo?
<yhvh> scombinator: I'm using xmlgen for the nice semantics, but creating images
       just requires a string
<scombinator> yhvh: I know how to create SVG, but I have no idea how to get
	      buffers to render them as an image  [13:07]
<scombinator> ... MMM-mode?
<yhvh> (insert-image (create-image
<tali713> scombinator: text property, read the manual.
<scombinator> Ah
<tali713> obviously yhvh is using convenience functions for achieving that.
									  [13:08]
<yhvh> tali713:I'm too embarassed to make it public  [13:09]
<tali713> yhvh: I know the feeling, I finally bit the bullet.  But I hope for
	  well reasoned criticism.
<yhvh> tali713: insert-image and create-image are standard
<tali713> yhvh: yup, but insert-image does its magic by text-properties.  [13:10]
<tali713> you can also directly propertize text with an image, obviously, your
	  way is better in this case.
<scombinator> I want a repl with plots inline
<scombinator> Why hasn't ESS advertised this
<tali713> scombinator: so do it.
*** cfy (~cfy@unaffiliated/chenfengyuan) is now known as cherrot_
<scombinator> tali713: I have to do xml config bullshit right now :(  [13:11]
<tali713> oh, well, until somebody cares, who can also write elisp, comes along,
	  nothing gets implemented. :)
*** cherrot_ (~cfy@unaffiliated/chenfengyuan) is now known as cfy
<tali713> scombinator: I'm sorry, are you working with raw xml?  [13:12]
<scombinator> I'm planning on it though
<scombinator> tali713: XML, XPath and JAXB
<tali713> ahh, well, have fun.
<scombinator> I try to keep the raw xml at an arms length, which is why XPath is
	      awesome, and XSLT and XQuery are bizarre
<tali713> ahh I see. I'm a pervert, I do xml in elisp.  [13:14]
*** cfy (~cfy@unaffiliated/chenfengyuan) is now known as cherrot_  [13:15]
<tali713> i like some of those xpath ideas though, think i'm gonna have to steal
	  them.  [13:16]
*** cherrot_ (~cfy@unaffiliated/chenfengyuan) is now known as cfy
*** cfy (~cfy@unaffiliated/chenfengyuan) is now known as cfy_
*** Quadresce (~quad@unaffiliated/quadrescence) is now known as Quadrescence
									  [13:24]
<yhvh> no time to set up public repo, but you can see the code here
       http://mouseabuse.co.uk/git/go-svg-mode/master/source/go.el  [13:25]
<twb> scombinator: xslt uses xpath  [13:26]
<twb> yhvh: go-img-string -- bleh  [13:27]
<twb> Why don't you put some whitespace in the paths, too, to make them more
      readable  [13:28]
<yhvh> twb: Yeah. I don't fully understand them, stolen from wikipedia. They
       will be replaced as I add different boardsizes  [13:29]
<twb> What are those paths doing anyway, just drawing the grid?  [13:30]
<yhvh> yup  [13:31]
<twb> If you haven't dealt with path element before, it's d tag is similar to
      your old logo turtle
<twb> Doesn't look to bad tho  [13:32]
<twb> Much less hassle than doing it with rasters
<yhvh> yeah I thought it was something like that, didn't want to get sucked up
       in it, also didn't want to think too much about the viewBox   [13:33]
<yhvh> The process communication is the major hassle
<twb> I love how when I email a tech, within an hour he replies with "I am on
      holiday until <date> and am not reading email"  [13:35]
<twb> Not an automated reply, I mean  [13:36]
<tali713> yhvh: nice work so far, I look forward to how it turns out, but why
	  aren't you using /my/ xml generating library?  [13:48]
<tali713> ,esxml is a library for maimulating xml with sxml or emacs' native xml
	  parse tree(esxml)  [13:50]
<fsbot> created.
<tali713> ,esxml is also available from https://github.com/tali713/esxml.git
<fsbot> Added entry to the term "esxml"
<tali713> ,s/maim/manip/ in esxml 0  [13:51]
<fsbot> Replaced string "maim" with "manip".
<scombinator>    esxml handles malformed xml?
<tali713> nope.
<scombinator> sounds incredibly useful then  [13:52]
<tali713> well, yeah, it only generates well formed xml, if you want to generate
	  malformed xml, may I recommend using dreamweaver.
<tali713> I hear it is much better designed for that task.  [13:54]
<yhvh> tali713: are the semantics the same, like (tag :prop "42") -> <tag
       prop="42" /> ?  [13:56]
<twb> yhvh: I would expect so  [13:59]
<yhvh> I'll take a look, gotta go, my sister is having a cesarian section right
       about now and I have to go pick up a present as soon as they sex the
       thing
<tali713> yhvh: nope, I offer two syntaxes, you can wither use the sxml syntax,
	  http://en.wikipedia.org/wiki/SXML.  or you can use the native form
	  that emacs provides, (tag ((attr . value)) body...)
<twb> yhvh: why would they have sex  [14:00]
<tali713> that other syntax is like cl-who's which is complimentary.
<scombinator> tali713: I meant parsing
<scombinator> I don't expect to need a libraries help for generating
<yhvh> twb: you haven't seen a serbian film then
<twb> I don't think I've seen any  [14:01]
<yhvh> sorry "a serbian film" is the name
<tali713> scombinator: since I use libxml-parse-xml-region for parsing, it
	  handles exactly what libxml-parse-xml-region handles.  if that later
	  gains the ability to handle malformed xml, so will esxml.el  patches
	  or suggestions are welcome.
<yhvh> twb: never watch it  [14:02]
<tali713> scombinator: like if you know of a tool that will convert malformed
	  xml to well formed xml I would love to know, I've been searching for
	  that recently.
<twb> tali713: tidy  [14:03]
<tali713> yhvh: I only want you to use my library so I'm not the only one
	  testing it, feel free to keep using the other one.
<tali713> twb: I've seen it, it's reliable?  [14:04]
<tali713> n/m i'll just read the docs.
<twb> If by "take invalid XML and emit valid XML" you specifically mean "I want
      to screen-scrap webpages using XSLT"
<tali713> probably very close to what I mean.  [14:05]
<twb> curl http://magnatune.com/artists/albums/$album/ | tidy -asxml
      --numeric-entities=yes 2>/dev/null | sed '1c<html>' | xmlstarlet sel -t -v
      /html/head/title  [14:08]
<twb> http://cyber.com.au/~twb/.bin/fortune-snarf  [14:09]
<twb> Oh, ew, bash.org is using nbsp now  [14:11]
<twb> haha, "Hey baby, I'm not just hard, I'm NP hard"  [14:16]
<sshaginyan> Hey guys what's the best file browser for emacs. I want all
	     directories to be displayed all the time  [14:46]
<sshaginyan> on the left
<sshaginyan> anyone here?  [14:48]
<magnars> yes, but I think the best file browser for emacs is
	  find-file-in-project and dired - and don't like wasting space on a
	  directory browser.
<kodein> sshaginyan: maybe ,,speedbar caters to your needs  [14:51]
<fsbot> SpeedBar is [0] at http://www.emacswiki.org/cgi-bin/wiki.pl?SpeedBar
<fsbot> [1] (info "(emacs)Speedbar")
<arkiver> Does comment and un-comment work in haml mode ?? Doesn't seem to be
	  working on my emacs  [14:58]
<arkiver> setup
*** sshaginyan_ (~sshaginya@c-76-126-225-173.hsd1.ca.comcast.net) is now known
    as sshaginyan  [14:59]
<marcusl> Hi!  [15:00]
<marcusl> I have a problem with ido-ubiquitous, which contains this line:
									  [15:01]
<marcusl> (let ((allcomp (all-completions "" collection predicate)))
<marcusl> After updating my emacs to 24.1.50.1 it stops working with: Symbol's
	  value as variable is void: collection
<marcusl> Any clues what causes that?
<marcusl> (I get the error when calling set-buffer-file-coding-system)  [15:02]
<marcusl> It is this line:
	  https://github.com/technomancy/ido-ubiquitous/blob/master/ido-ubiquitous.el#L93
									  [15:04]
<rudybot> http://tinyurl.com/8pkwmge
<gtuckerkellogg> i'm introducing a student of mine to emacs.  She has
		 clojure-mode installed from ELPA, all under 24.1 on Windows (I
		 don't use Windows, but she does)  When she includes (require
		 'clojure-mode) in her init.el, it barfs  [15:16]
<gtuckerkellogg> the --debug-init trace is here: http://pastebin.com/NPDB1uEc
<gtuckerkellogg> if she M-x eval-buffer on init.el, it works fine
<gtuckerkellogg> any ideas would be welcome  [15:17]
<kodein> with elpa, doesn't it set that up automagically?  [15:23]
<penryu> in init.el, is clojure-mode required before elpa?  [15:24]
<penryu> assuming elpa adds its own directories to load-path, this would have to
	 be done before requiring clojure-mode  [15:25]
<kodein> 24.1 ships with elpa, so we should reasonably assume it's loaded before
	 your init.el is  [15:27]
<penryu> hrm.  [15:28]
<penryu> http://emacswiki.org/wiki/ELPA#toc2 <-- "So packages are initialized
	 AFTER the init.el is loaded."  [15:29]
<yhvh> gtuckerkellogg: sure you don't need the require as packages tend to
       autoload  [15:30]
<osener> isn't clojure-mode autoloaded when installed via elpa?
<yhvh> first... depending on ping
<osener> haha yeah, third world sucks
<osener> btw since swank-clojure's maintaner announced that nrepl is the way to
	 go and slime related stuff are deprecated, I pushed the initial version
	 of a helm source for Clojure completion using nrepl  [15:33]
<osener> https://github.com/osener/helm-nrepl
<osener> anyone want to give it a go ?
<osener> current actions are "Insert symbol", "Show documentation" and "Jump to
	 definition"  [15:34]
<osener> I plan to add a namespace browser in near future
<osener> and inspection features as soon as nrepl gets them
<osener> I still haven't read the Emacs Lisp Manual so code might be rough, all
	 feedback is appreciated  [15:36]
<tralala> any function that prints a list/plist nicely - i.e. multiple lines?
									  [15:40]
<arkiver> whch is a good start kit for emacs ? To prescribe to a total noob ?
									  [15:44]
<yhvh> tralala: ,,df pp-eval-expression  [15:45]
<fsbot> pp-eval-expression is an interactive compiled Lisp function in
<fsbot> `pp.el'.
<fsbot> (pp-eval-expression EXPRESSION)
<fsbot> Evaluate EXPRESSION and pretty-print its value.
<fsbot> Also add the value to the front of the list in the variable `values'.
<tralala> yhvh, thank you
<gtuckerkellogg> yhvh, thanks.  it turns out that the midje-mode in marmalade
		 could not be unpacked, so she installed that from github.
		 Accordingly, she included a require for midje in her init.el,
		 which then necessitated a require for clojure-mode.  I've
		 deferred the midje-mode require into a  clojure-mode hook, and
		 it works fine  [15:46]
<tralala> arkiver, cua will make it behave like all the other editors. I
	  personally use ergoemacs which is a compilation of a lot of useful
	  packages.  [15:47]
<gtuckerkellogg> osener, I'll be happy to use nrepl.el as soon as it stops
		 swallowing output from evaluation in a clojure-mode buffer.  It
		 looks great otherwise.    [15:48]
<osener> gtuckerkellogg: hmm yeah, I hadn't noticed that before  [15:51]
<gtuckerkellogg> oesener, since I first tested evaluation from a clojure-mode
		 buffer with (println "Hello World"), I thought at first it
		 wasn't connected properly.  [15:53]
<osener> screenshot of helm-nrepl: http://cl.ly/image/2P1r0v0Y3P0O/o  [16:02]
<gtuckerkellogg> osener: sweet  [16:08]
*** cfy_ (~cfy@unaffiliated/chenfengyuan) is now known as cfy  [16:22]
*** Guest62257 (~PuercoPop@190.41.173.174) is now known as PuercoPop  [16:28]
<mallet> Hi. I am under X but using a text-mode Emacs (possibly on a remote
	 machine). How can I send the last element of the kill ring to the X
	 selection? I use urxvt and I think I need to trigger an action in urxvt
	 so that the selection is passed along.  [17:03]
<nullie> I'm afraid I can't do that, Dave  [17:06]
<nullie> push kill ring to file and download it
<mallet> I can do the job with tmux, so it must be possible with Emacs. But this
	 is clearly not easy task.  [17:08]
<mallet> With tmux, I used a urxv perl extension and a terminal override from
	 someone. Honestly, I do not get what it is doing in details. But urxvt
	 receives the selection at some point thanks to the perl
	 extension. Therefore what is selection in tmux is passed to urxvt. I
	 would like to do the same with Emacs.  [17:10]
<hpd> maybe you could try to utilize the program 'xclip'
<mallet> No xclip fails because X is not known to it.
<hpd> in the remote case, true  [17:11]
<mallet> Only urxvt can receive from Emacs (in terminal) and send to X (since it
	 knows it...).
*** ferdy- (~ferdy@funtoo/contrib/ferdy-) is now known as ferdy  [17:31]
<Arafangion> So... Today I edited a text file with emacs, and it showed all
	     these ^M characters on every line.  [17:41]
<Arafangion> Every line but the last.
<Arafangion> However, the last line didn't have a newline character either...
	     So I don't understand how it couldn't be detected as a DOS file?
									  [17:42]
<tralala> so your file has a mixture of unix and dos line breaks
<Arafangion> tralala: It did not.
<Arafangion> All line endings were DOS.  [17:43]
<tralala> then perhaps the missing newline at the end caused it to be
	  interpreted as unix
<Arafangion> Perhaps. I'm claiming that's perhaps an incorrect interpretation.
									  [17:44]
<YoungFrog> How did you open the file ? I think some commands do not do
	    "guessing"
<Arafangion> C-x-f
<tralala> Arafangion, use C-x RET c <coding-dos> to open it
<ivan-kanis> http://ivan.kanis.fr/lisp.txt
<ivan-kanis> feedback welcome
<Arafangion> tralala: Thanks for the tip... Today I just ucs-insert'ed the
	     carriage return on the very last line, saved, killed the buffer,
	     then re-opened. Worked a charm, but was annoyed.  [17:45]
<ivan-kanis> Arafangion: there is unix2dos that's fix it
<Arafangion> ivan-kanis: Why should unix2dos fix it? Doesn't that only convert
	     \n's to \r\n's?
<YoungFrog> could you post the file somewhere ?
<Arafangion> YoungFrog: No, but it's probably not hard to reproduce. Simply
	     write a file that doesn't have a newline.  [17:46]
<Arafangion> I mean, for the last line.
<YoungFrog> ah yes, forgot about that
<YoungFrog> hm, nope, cannot reproduce.  [17:47]
<YoungFrog> which emacs version are you using ?
<Arafangion> The latest, for windows.
<YoungFrog> hm, ok. Don't have windows anyway... is it a large file ?  [17:49]
<Arafangion> No, it's fairly small, but I don't have the file at hand.  Oddly,
	     tried to reproduce it here, (on my home computer), and it doesn't
	     occur.  [17:50]
<YoungFrog> (I ask for the following reason : maybe emacs got interrupted while
	    opening the file. Not sure if it's relevant though, but i'm curious
	    now :))
<YoungFrog> okay
<Arafangion> Maybe it's a windows bug, or I have some other issue, I must look
	     at it again on monday.
<Arafangion> It's in the work git repo, so I should be able to get it back. :)
									  [17:51]
<nicferrier> hey guys  [18:04]
<ivan-kanis> Arafangion: it will turn all your lines into \r\n  [18:05]
<Arafangion> ivan-kanis: I thought it did so only if they were \n to begin with.
									  [18:10]
<kodein> ,spook  [18:52]
<fsbot> Islam Abduganievich Karimov SWAT colonel clones Zachawi ANZUS NATO New
<kodein> rudybot: could you help me with some arguments for why I should get a
	 payraise?  [18:53]
<rudybot> kodein: Format a string out of a format-string and arguments.
<kodein> rudybot: not sure that'd help. I hate this administritative shit. just
	 give me a 5% raise already  [18:54]
<rudybot> kodein: In those places, a simple macro could check whether we were
	  actually looking at a bigint and raise an error in that case.
<taylanub> i just had the most insane objective-c bug again  [19:32]
<kodein> frankenbugs monster?  [19:33]
<bosie> whats the vim plugin for emacs  [19:35]
<bosie> vimacs?
<fsbot> vimacs is, like, VIM emulating Emacs .. + other entries
<chu> ,evil  [19:36]
<fsbot> I heard evil is [0] the extensible vi layer
	<http://emacswiki.org/emacs/Evil>,
	<http://gitorious.org/evil/pages/Home>
<fsbot> [1] what happens when good people do nothing
<fds> ,vile
<fsbot> I heard dlgs-phrases is [0] Property is theft! (Pierre-Joseph Proudhon)
<fsbot> [1] Freedom without Socialism is privilege and injustice. Socialism
	without freedom is slavery and brutality. (Michael Bakunin), ..[Type
	,more]
<fds> ,viper
<fsbot> I heard ViPer is [0] Viper is a vi-emulation in Emacs
<fsbot> [1] at http://www.emacswiki.org/cgi-bin/wiki.pl?Viper,
<fsbot> [2] Viper Manual has a good intro to emacs from a vi standpoint, ..[Type
	,more]
<fds> Something like that.
<bosie> k
<bosie> trying to figure out how those are handling the key bindings
<bosie> seems kinda impossible
<chimay> anyone knows how i can byte-compile all *.el in a directory with one
	 command ?  [20:31]
<wbooze> ,byte-compile
<fsbot> wbooze: I think byte-compile is [0] to compile all files, M-x
	byte-recompile-directory
<fsbot> [1] to speed up loading and execution times  [20:32]
<chimay> simply byte-compile ? i found byte-recompile-directory, but it
	 recompile only files wich have already been compiled. I'll try that,
	 thanks !  [20:33]
<marcot> Hi.  How does emacs define the word at the point, for instance the
	 default when I press M-. ?  [20:43]
<marcot> In my case, it's getting !A , and I'd like to configure it to not
	 consider the starting ! as part of the word.
<arkiver> tralala, Thanks :)   [20:46]
<daimrod> chimay: ,df byte-recompile-directory  [20:47]
<daimrod> ,df byte-recompile-directory
<fsbot> byte-recompile-directory is an interactive compiled Lisp function in
<fsbot> `bytecomp.el'.
<fsbot> (byte-recompile-directory BYTECOMP-DIRECTORY &optional BYTECOMP-ARG
<fsbot> BYTECOMP-FORCE) ..[Type ,more]
<daimrod> ,m
<fsbot> Recompile every `.el' file in BYTECOMP-DIRECTORY that needs
	recompilation.
<fsbot> This happens when a `.elc' file exists but is older than the `.el' file.
<fsbot> Files in subdirectories of BYTECOMP-DIRECTORY are processed
	also. ..[Type ,more]
<daimrod> ,m  [20:48]
<fsbot> If the `.elc' file does not exist, normally this function *does not*
<fsbot> compile the corresponding `.el' file.  However, if the prefix argument
<fsbot> BYTECOMP-ARG is 0, that means do compile all those files.  A nonzero
	..[Type ,more]
<daimrod> ,m
<fsbot> BYTECOMP-ARG means ask the user, for each such `.el' file, whether to
<fsbot> compile it.  A nonzero BYTECOMP-ARG also means ask about each
	subdirectory
<fsbot> before scanning it. ..[Type ,more]
<marcot> How do I know where a function (like find-tag) was defined, so that I
	 can read its source code?  [20:56]
<ghast> try C-h f find-tag, then the help window has a link where it says "is a
	function defined in blablabla.el"  [20:57]
<chimay> daimrod: in my case, elc files don't exist yet
<chimay> think i'll use dired, select all and compile
<ghast> marcot: this message appears on the help buffer: "find-tag is an
	interactive autoloaded Lisp function in `etags.el'."  [20:58]
<ghast> marcot: then you can either click where it says "etags.el" or move the
	cursor there and hit enter, it should display the source code in another
	window.  [20:59]
*** free` (~free@78.46.238.66) is now known as free
<marcot> ghast: Thanks, but not here.  Here it says: find-tag is an interactive
	 compiled Lisp function.
<marcot> In this case, is there a way to know from which source file it was
	 compiled?  [21:00]
<ghast> i don't know... maybe
<marcot> I guess I should look for etags.el for find-tag, but it would be good
	 to know how to search if that happens again.
<ghast> yes
<daimrod> chimay: you should read the documentation of byte-reocmpile-directory
	  more carefully. « If the `.elc' file does not exist, ... »
									  [21:10]
<ashawley> marcot: What mode are you running M-. in?  [21:17]
<marcot> ashawley: haskell-mode  [21:18]
<marcot> ashawley: The definition of "the expression in the buffer around or
	 before point" is mode dependent?
<ashawley> marcot: yes  [21:19]
<ashawley> `haskell-mode-tag-find' might be the issue  [21:20]
<ashawley> looks like it uses `haskell-ident-at-point'
<marcot> ashawley: Thanks.  I'm looking for the code of haskell-ident-at-point
									  [21:30]
<forestbird> is it possible to open a file from http?  [21:33]
<kodein> yeah
<forestbird> tramp?
<fsbot> TRAMP -- an Emacs library, included in Emacs 22, that implements
	transparent remote file access over a number of protocols (ssh, sudo,
	rsync, ftp, ...) <http://emacswiki.org/wiki/TrampMode>,  ..[Type ,more]
<kodein> ,urlpackage  [21:34]
<fsbot> hmm, UrlPackage is at
	http://www.emacswiki.org/cgi-bin/wiki.pl?UrlPackage
<nicferrier> I should add opening files to web  [21:35]
<chimay> just seen the prefix of byte recompile, it's what happens when you're
	 doing too many things at the same time, thanks daimrod !  [21:38]
<mnemonikk> New colorful font-lock for diff-mode has arrived in trunk. I think I
	    like it. 8-)  [21:45]
<JordiGH> pix plz  [21:48]
<wgreenhouse> nicferrier: https://github.com/eschulte/org-ehtml  [21:52]
<nicferrier> wgreenhouse: you're back!  [21:53]
<nicferrier> wgreenhouse: yep, I saw it. he chatted with me as he built it. got
	     a lot of good patches from him.
<stumbles> Hi, I'm trying to figure out how to send a PGP encrypted mail in
	   message mode using a different key to that of the email
	   address. Eg. sending to user+tag@example.com but their PGP key is for
	   user@example.com. Any ideas?
*** PuercoPop (~PuercoPop@190.41.173.174) is now known as Guest63098  [21:56]
<chrisb> ,async  [21:59]
<fsbot> From memory, async is [0] async.el at
	https://github.com/jwiegley/emacs-async
<fsbot> [1] maybe you want start-process-shell-command
<nicferrier> I want a one or two key way of switching between irc buffers
									  [22:00]
<chrisb> can i use async to keep emms from locking up emacs when emms is parsing
	 the directories?
<nicferrier> really, clicking the mouse on the irc notify box on the modeline
	     should let me switch
<stumbles> I don't believe it, I've been trying to do this for hours, but as
	   soon as I ask the question here, I figure it out a minute later. You
	   modify the MML-mode tag <#secure method=pgpmime mode=encrypt> to
	   <#secure method=pgpmime mode=encrypt recipients=user@example.com> as
	   mentioned in the MML docs.
<nicferrier> chrisb: maybe. depends on how it works. you'd have to move the
	     parsing to the child and then pull the parsed stuff back as an
	     elisp object.  [22:01]
<marcot> ashawley: Actually, it seems that haskell-mode does not set
	 find-tag-default-function.  [22:02]
*** mjrosenb_ (~mjrosenb@INDIUM.CLUB.CC.CMU.EDU) is now known as mjrosenb
									  [22:03]
<mnemonikk> JordiGH: http://mnemonikk.org/emacs-trunk-diff-mode.png  [22:04]
<mnemonikk> JordiGH: will this make you switch? 8-)  [22:05]
<JordiGH> mnemonikk: Huh, 23 already does that.  [22:07]
<JordiGH> I guess you just changed the default colours?
<marcot> ashawley: Thanks, I added the definition for find-tag-default-function
	 on .emacs.el.  [22:09]
<JordiGH> mnemonikk: I'm confused, what exactly is the change?  [22:13]
<JordiGH> mnemonikk: I mean, this is already available in 23.
<JordiGH> How do I make fsbot tell me what's the name of a unicode symbol?
									  [22:22]
<JordiGH> ,utf ∅
<fsbot> try:  CarbonEmacsPackageDiredUtfm IciclesHighlightInputFailureApropos
	IciclesHighlightInputFailurePrefix
	UnrecognizedCharacter_xC3Atfrenchutf8.pl_line_22 utf-8 utf16 utf8
	http://en.wikipedia.org/wiki/UTF
<JordiGH> ,utf8 ∅
<fsbot> [->] hmm, utf-8 is [0] an 8-bit encoding for unicode, where some codes
	>127 have the special meaning "the next byte is also part of this
	character"
<fsbot> [1] http://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt,
<fsbot> [2] see also: unicode, ..[Type ,more]
<JordiGH> ,unicode ∅  [22:23]
<fsbot> I think UniCode is [0] at
	http://www.emacswiki.org/cgi-bin/wiki.pl?UniCode
<fsbot> [1] some character set with a lot of characters in it (there's 32-bit
	unicode), ..[Type ,more]
<fledermaus> ,unicode-describe ∅
<fsbot> #x2205: EMPTY SET
<JordiGH> Thanks.
<fledermaus> ,unicode-find " \\<SET"
<fsbot> #x2205 (∅): EMPTY SET  [22:24]
<fsbot> #x29b0 (⦰): REVERSED EMPTY SET
<fsbot> #x29b1 (⦱): EMPTY SET WITH OVERBAR
<fsbot> #x29b2 (⦲): EMPTY SET WITH SMALL CIRCLE ABOVE
<fsbot> #x29b3 (⦳): EMPTY SET WITH RIGHT ARROW ABOVE
<fsbot> #x29b4 (⦴): EMPTY SET WITH LEFT ARROW ABOVE ..[Type ,more]
<fledermaus> ,more
<fsbot> #x1685a (𖡚): BAMUM LETTER PHASE-B SET TU
<fsbot> #x168dc (𖣜): BAMUM LETTER PHASE-C SETFON
<fsbot> #x16990 (𖦐): BAMUM LETTER PHASE-E SET
<billyoc> whoah, those last three I just see the square box with the hex vals.
<JordiGH> Yeah, fledermaus keeps using Unicode symbols not in my fonts.  [22:25]
<fledermaus> 😸
<nicferrier> me too.  [22:27]
<nicferrier> please stop
<billyoc> fledermaus: what is that font?
<JordiGH> billyoc: Symbols are not fonts.
<JordiGH> billyoc: The right question is "what font has that symbol"?  [22:28]
<JordiGH> Well, codepoints are not fonts.
* billyoc waits for the revised "right question".
<kodein> what font is this?  [22:31]
<JordiGH> Sigh, n00bs.  [22:32]
<taylanub> this freaking OS X terminal displays freaking images for some Unicode
	   smileys  [22:47]
<nicferrier> tali713: you here? might need your esxml library for
	     elmarmalade. may be the easiest way to do the html  [22:48]
<fledermaus> taylanub: well don;t use fisher-price software then.  [22:49]
<enymo``> good morning  [23:03]
<zellio> mornin enymo``   [23:09]
<zellio> I see you are a second derivitive today
<mallet> When I make a call to (kill-ring-save (region-beginning) (region-end)),
	 it fails because the buffer is read-only. I tried with save-excursion,
	 but I got the same problem.  [23:18]
<jlf> mallet: wfm  [23:24]
<billyoc> mallet: I don't see how that could ever fail, are you sure it's not in
	  the kill ring?  [23:26]
<mallet> billyoc: Completely sure.  [23:27]
<mallet> ** NEXT [#A] Demander Ã  Airparif et Jean si simulations et donnÃ©es
	 sont disponibles
<mallet>    :PROPERTIES:
<mallet>    :Created: [2012-08-24 Fri 17:25]
<mallet>    :END:
<mallet> Ooops
<mallet> Sorry.  [23:28]
<mallet> kill-region prints a message and puts things in the kill ring.
<mallet> kill-ring-save does not however.
<ashawley> We're dying to know what the message was.
<mallet> ashawley: Some secret quest behind this ;)  [23:29]
<jlf> ,tdoe  [23:31]
<fsbot> tdoe is [0] type M-x toggle-debug-on-error RET, reproduce the problem,
	then lisppaste the contents of the backtrace buffer. ..[Type ,more]
<jlf> ,m
<fsbot> [1] NOTE: you dont *have* to lisppaste, just contemplating the backtrace
	will often give you enlightenment
<ashawley> jlf: not an error, just doesn't work
<fxiny> strange , i can read it by tabbing on it , must be some tramp-org-mode
	bug :P
<ashawley> (progn (kill-ring-save (region-beginning) (region-end))
	   (substring-no-properties (car kill-ring)))
<jlf> maybe interprogram-cut-function?  [23:32]
<jlf> mallet: have you tried with -q?
<mallet> jlf: none defined
<jlf> ,-q  [23:33]
<fsbot> If starting emacs with "emacs -q" fixes the problem, it's YOUR FAULT;
	check your .emacs. If "emacs -q" has problems but "emacs -Q" doesn't,
	blame your distro or local admin.
<zellio> ahh the -q fix
<jlf> s/fix/diagnostic tool/  [23:34]
<mallet> jlf: But you get a point... With emacs -q, no more problem!
<jlf> aha!  now ,,bisect
<fsbot> I think bisect is If "emacs --debug-init" doesn't help, comment out half
	of ~/.emacs and try to reproduce the issue. Recurse as necessary. See
	also <-q> and <ielm>.
<fxiny> and : do not use vim to edit .emacs , it can leave behind some nasty
	":i"  [23:35]
<Buglouse> Messages buffer has a hook ?
*** Guest63098 (~PuercoPop@190.41.173.174) is now known as PuercoPop  [23:36]
<jlf> Buglouse: learn to use the documentation already
<Buglouse> Want it to have its own mode, like help-mode .. 
<Buglouse> Well I did not find it, i knew the answer, asking if someone can
	   contradict my knowledge.  [23:37]
<zellio> emacs -q .emacs then M-x lisp-interaction-mode and start
	 interaction-ing =P
<cluck> :)
<mallet> jlf: ashawley: I found the line: (setq visible-bell t)  [23:44]
<jlf> srsly?  [23:45]
<fsbot> I know. Right?
<jlf> given (defun erc-log-aux (string) ...), is there any reason not to change
      the current (defmacro erc-log (string) `(when erc-log-p (erc-log-aux
      ,string))) to (defmacro erc-log (&rest args) `(when erc-log-p (erc-log-aux
      (format ,@args)))) ?  [23:56]
<pozic> Does anyone have Diff colors which look a bit better than the defaults?
									  [23:57]
<pozic> At least, I think they are the defaults: they are lightgreen and some
	red.  [23:58]
<pozic> On a white background that's just awful.
<jlf> pozic: put the point on one you'd like to change, do M-x customize-face
      and accept the default face, then change the color to something better
									  [23:59]

[Sat Aug 25 2012]
<jlf> brb, changing networks  [00:00]
<pozic> jlf: can I also apply a bunch of settings and then when I am done apply
	all of them?  [00:06]
<pozic> jlf: I mean apply for the future, I mean.
<pozic> I seem to really mean it.  [00:07]
<jlf> a bunch of settings to a single face? or to several faces or...?
<pozic> jlf: several
<SpiderPi1> I think he wants to create his own theme
<JordiGH> Yay, another private mailing list for flaming.  [00:08]
<pozic> SpiderPi1: more like interactively.
<SpiderPi1> whoa what happened to my handle lol
<JordiGH> lol
<JordiGH> It got lol'ed.
<pozic> SpiderPi1: a 'theme' is omething which should be generated. 
<JordiGH> So I got a few people at work to start using hg instead of git. ^.^
									  [00:09]
<JordiGH> It's a good life.
<pozic> JordiGH: but git is the best!!!
<JordiGH> pozic: Bring it, gitboy.
<pozic> JordiGH: I am only joking, of course.
<jlf> pozic: if i understand your question correctly, yes.  do something like
      M-x customize-group RET erc-faces RET (or whatever group), make your
      changes, then C-x C-s or save for future sessions
<jlf> lol
<wbooze> it's a good life only if it's a good wife!
<JordiGH> Let's throw, G.
<pozic> Number of problems encountered with git: more than one. 
* wbooze sings
<wbooze> lol
<pozic> Number of problems encountered with hg: zero.  [00:10]
<SpiderPig> thats better
<pozic> jlf: that's not really what I meant, but I suppose that is an
	alternative solution.
<wbooze> fortune!: you're not sure if the hairy gnu likes you!
<wbooze> lol
<pozic> jlf: the feature would be: M-x apply-everything-I-have-just-modified.
									  [00:11]
<pozic> jlf: (for future sessions)
<pozic> jlf: not: 'stupid user, you first had to go the menu foo'.
<jlf> yes, i meant C-x C-s from the customization interface, which is "save for
      future sessions"
<jlf> doing it from customize-group for a faces group will save that group's
      changes en masse  [00:12]
<jlf> as opposed to face-at-a-time saving with customize-face
<pozic> jlf: yes, but that's now a bit late, since I already made the
	modifications, right?
<jlf> not if they're in a group  [00:13]
<pozic> jlf: ok, then the feature already exists. Thanks.
<ijp> rudybot: how goes things?  [00:15]
<rudybot> ijp: there goes my weekend...
<jlf> pozic: customize-group diff-mode
<jlf> np
<jlf> did anyone respond to my question about the erc-log macro?  [00:16]
<pozic> jlf: is there also a way to change the background only for diff-mode?
<pozic> jlf: because it seems to be wanting to use all-faces.  [00:17]
<pozic> jlf: and all-faces will likely be really 'all-faces' and not just those
	of diff-mode.
<jlf> i don't know of a way other than set-background-color, but that's
      frame-granular
<jlf> does anyone know if cygwin's xpdf is any good?  [00:19]
<JordiGH> ahahahah http://www.bbc.co.uk/news/business-19364875  [00:20]
<JordiGH> "You both violated each other's patents, neither can sell here!"
<legumbre> nice  [00:21]
<technomancy> JordiGH: "whoever wins, we lose"
<fxiny> diff-color ->
	http://stackoverflow.com/questions/4079830/how-to-configure-highlighting-in-emacs-diff-mode
<rudybot> http://tinyurl.com/8vh8sqj
<JordiGH> technomancy: What if they both lose?
<jlf> a curious game.. the only way to win is not to play
<technomancy> JordiGH:
	      http://www.poster.net/alien-vs-predator/alien-vs-predator-whoever-wins-we-lose-paul-ws-anderson-3700999.jpg
<rudybot> http://tinyurl.com/9hkwwa
<JordiGH> jlf: "The only winning move is to be a lawyer," retorts Slashdot.
									  [00:22]
<JordiGH> "I do not know what about what patents the incoming Patent War will
	  be, but next one will be about patenting sticks and stones."
									  [00:23]
<jlf> begun the patent war has
<wbooze> i case you didn't know, but i already patented my "dick", you can't
	 sell it!  [00:24]
<wbooze> lol  [00:25]
<JordiGH> No lol for you.
<ijp> ,homie-yow  [00:26]
<fsbot> Get a job, deadbeat.
<ijp> :(
<nicferrier> wbooze: I already patented patenting your dick so you will be
	     hearing from my lawyers.
<JordiGH> So, apparently I'm stupid for using a tab-width other than 8.
<JordiGH> This was Stefan Monnier's pronouncement.
<jlf> s/-w.*//
<wbooze> ,laugh  [00:27]
<fsbot> BAAAAHAHAHAHAH HaHAHAA HA HA HHHHA AH *snort* HA HHA HAHAHA HA HAH HAH
	HAH HAHAH HAH HAH oh man HAH AH HAAAAAHAAAHHH *cough* *cough* *cough*
	hah hehhh hehhhhh geez.. *cough*
<fxiny> anyone patenting the shebang ?
<cluck> JordiGH: paraphrasing einstein isn't all that smart or original (then
	again if that came from /. it's to be expected)  [00:28]
<fledermaus> that was the guy with the dice phobia, right?
<fxiny> caesar julius ?  [00:29]
<cluck> fledermaus: religious nutjobs... all alike
* cluck ducks
<jlf> ,praetorian-guards
<fsbot> CAESE HIM!!!
<fledermaus> speaking of republicans. 
<JordiGH> Is a tab-width of 8 even remotely standard?
<ashawley> Yes.  [00:30]
<fledermaus> did everyone catch the latest comment from those woman-hating
	     nutters?
<JordiGH> I think 4 is far more standard, since people confuse tab width with
	  indentation level.
<technomancy> it's not just a standard, it's a GNU™ standard.
<jlf> it's the original standard
<jlf> like, from typewriters
<fledermaus> friends don't let friends use tabs 
<JordiGH> I usually notice 4-space tab stops.
<ashawley> Sounds like you meant to change c-basic-offset to 4
<cluck> fxiny: "god doesn't play dice", you failed the test, please return your
	nerd membership card your geek cred will soon be revoked  [00:31]
<JordiGH> ashawley: *I* do. The scores of idiots out there who don't understand
	  tabs don't. *They* usually want the tab-width to be 4.
<nicferrier> fledermaus: what did they say?
<ersatzmaus> nicferrier: google "todd akin"
<fxiny> cluck: no porbs . that's is not the card i want : i want a bitcoin card 
									  [00:32]
<nicferrier> ersatzmaus: oh that was ages ago. or has he said something new?
<wbooze> tabs as i like them are either minimum 1 and maximum 4 or so....
<ersatzmaus> nicferrier: nothing newer.
<cluck> fxiny: TERRORIST!
<wbooze> 8 is too much
* cluck ducks
<cluck> :D
<ersatzmaus> my laptop was broken for two days, I'm catching u 
<ersatzmaus> p
<wbooze> when on successive lines i like the indentation to be at least 1 on
	 successive ((  [00:33]
<wbooze> other than for special constructs......
<wbooze> where other alignments are required in addition....
<wbooze> like in a cond env or so
<fxiny> cluck: why ? i read it on the h-news just after the saving of the
	magellan by "larry"  [00:34]
<fxiny> cluck: all cards and cats are gray ;)  [00:38]
<fxiny> anyway that is the news of the day , imho  [00:39]
<ijp> ,homie-yow  [00:46]
<fsbot> Get a job, deadbeat.
<ijp> ,botsmack
* fsbot evades!
<kodein> harsh
<zellio> ,botsmack
* fsbot NaNa-NaNa-Nah
<zellio> ...
<zellio> batman?
<fsbot> batman -- ,noecho I HAVE NO PARENS:
	http://www.smbc-comics.com/index.php?db=comics&id=2491
<kodein> oh dear
<fxiny> batman or tabman ?
<kodein> ,no batman is noecho I HAVE NO PARENS:
	 http://www.smbc-comics.com/index.php?db=comics&id=2491  [00:47]
<fsbot> created.
<zellio> batman?
<fsbot> I HAVE NO PARENS: http://www.smbc-comics.com/index.php?db=comics&id=2491
<zellio> hehe
<zellio> better
<kodein> eeyup  [00:48]
<fxiny> hahah from 21 up to 4 ...  [00:50]
<ijp> rudybot: what should I invest in?  [00:51]
<rudybot> ijp: Well, I want to read my private mails at work (Windows), at home
	  (Mac OSX), my laptop (Ubuntu) and on my other portable devices (iOS)
	  -- I'm not sure I want to invest into the knowhow of installing and
	  maintaining a local IMAP.
<fxiny> don't forget the chan you are in : invest in a ponzi scheme ;P
* ijp raises eyebrow questioningly  [00:52]
<ijp> emacs is a ponzi scheme??
<fsbot> Yes
<fxiny> a ponzi elisp  [00:53]
<ijp> ,shoot fxiny
* fsbot loads its fflush and writes fxiny to disk.
<kodein> ,sync  [00:54]
<fsbot> try:  async async-eval bbdb-syncml BbdbExportImportSync BbdbSyncWithPalm
	DiscussionsSynchroneVsAsynchrone GnusSync lipsync org-sync rsync
	SyncBBDB SyncFileSystem SynchronizedScrolling
	SynchronousVsAsynchronousDiscussions  ..[Type ,more]
<[6502]> Hello. I would like to have (#'foo () ...) handling indentation in ...
	 as if it was (defun () ...) ... what should I put in
	 lisp-indent-function?  [00:57]
<[6502]> of course "foo" may change...
<kodein> Let's get some foo down at the bar.  [00:59]
<fxiny> beer time
<cluck> wow  [01:00]
<cluck> i dunno how i never noticed this before
<cluck> tumme barfs in a dir as soon as it finds a non image file  [01:01]
<cluck> :(
<nicferrier> I hadn't noticed that it barfs. I had noticed it doesn't handle
	     that file very elegantly.  [01:03]
<[6502]> the other day people here was talking about a node-like web server
	 implemented with elisp... now it's about image files. But does emacs
	 also allows doing program editing or it's an old feature not maintained
	 any more?
<legumbre> lol operating system lol missing a good editor lol
<cluck> nicferrier: well, by "barfs" i mean "stops doing its thing"  [01:04]
<ijp> ,tell [6502] about bestof
<fsbot> [6502]: hmm, deldo is [0] a sex toy and teledildonics mode for emacs
<fsbot> [1] http://www.youtube.com/watch?v=D1sXuHnf_lo,
<fsbot> [2] http://github.com/qdot/deldo,
<fsbot> [3] proof that one can go too far with emacs/elisp, ..[Type ,more]
<anxt> hmm, gentoo marked a 3.4 kernel stable
<ijp> er ,,bestof-list
<fsbot> hmm, bestof-list is [0] elnode
<fsbot> [1] deldo,
<fsbot> [2] nyan-mode,
<fsbot> [3] gneve,
<fsbot> [4] 3dmaze,
<fsbot> [5] pinkbliss,
<ijp> ,m
<fsbot> [6] xwem, ..[Type ,more]
<fsbot> [7] svg-clock,
<fsbot> [8] fsbot  [01:05]
<anxt> guess i should version monkey and gets me teh new one.
<nicferrier> cluck: it carries on as far as I kniw
<cluck> [6502]: lisps can and do it all
<jlf> <[6502]> bye idiots *** [6502]
      (5e24deb2@gateway/web/freenode/ip.94.36.222.178) has left channel #emacs:
      #emacs
<nicferrier> [6502]: we still edit code. but once again you come here
	     aggresively requiring us to answer your questions.
<nicferrier> [6502]: what jlf said. what goes around comes around dude.  [01:06]
<[6502]> jlf: by the way i thought about it... and not having a backup for files
	 under version control indeed does make sense
<jlf> [6502]: that behavior is not welcome here, so consider yourself warned
<ijp> editing text is lame, let's play tetris.el
<[6502]> jlf: what behavior? losing source code and getting mad because people
	 in #emacs just thinks it's a nice thing to have fun of you?
									  [01:07]
<jlf> no, being a jerk
<fxiny> the only time i can feel old and ancient in emacs is when i tab open my
	*** Sumerian TODO
<nicferrier> actually I was really sympathetic. no one took the piss out of you
	     in a nasty way.
<[6502]> nicferrier: you were
<ijp> [6502]: we take the piss out of everything, it isn't personal
<nicferrier> [6502]: did not.
<[6502]> nicferrier: go reading the full log, however  [01:08]
<nicferrier> maybe you are not a native english speaker in which case you may
	     have misunderstood me. I was being very sympathetic. I made ONE
	     joke but that was friendly, not nasty.
<jlf> anyway it's over, let's move on  [01:09]
<bremner> wait, what, I missed the whole thing
<[6502]> nicferrier: still i think that undo-tree is trap (and now it's of my
	 .emacs)... but just thought that backup for vcs files off is indeed a
	 sensible default after all. it wouldn't have saved me anything (backup
	 files are created only after FIRST save... and that's what's already in
	 vcs
<cluck> we need a "fuck you" unicode char
<nicferrier> to answer your question about lisp indenting, it's complex - there
	     isn't anything that will magically do what you want but you could
	     check the existing code for lisp indenters `calculate-lisp-indent'
	     and see whether you can work something out.
<ijp> cluck: I'd be surprised if there isn't one already  [01:10]
<nicferrier> [6502]: no, backup files are created after every save.
*** PuercoPop (~PuercoPop@190.237.7.137) is now known as Guest35268
<cluck> we already have smilies so a "fuck you" is the one missing char in the
	path to perfectly explicit conversations
<cluck> besides, it'd make sarcasm all the more epic
<ijp> ✌ is almost one
<ijp> wrong way round though  [01:11]
<nicferrier> I can't even see that.
<cluck> SHOOT THE INDEX FINGER!
<nicferrier> it's so tiny. yours is tiny ijp
<cluck> :)
<[6502]> nicferrier:
	 http://www.gnu.org/software/emacs/manual/html_node/emacs/Backup. "Emacs
	 makes a backup for a file only the first time the file is saved from a
	 buffer. No matter how many times you subsequently save the file, its
	 backup remains unchanged."
<fledermaus> cluck: 💩 maybe?
<cluck> fledermaus: can't see that one :(  [01:12]
<nicferrier> [6502]: oic what you mean. yes. obviously.
<taylanub> fledermaus: OS X is at work you know, iOS dev
<fledermaus> taylanub: fisher. price. 
<fledermaus> :)
<jlf> [6502]: that's a feature, so if you C-x C-s C-x C-s you don't end up with
      two identical files
*** Guest35268 (~PuercoPop@190.237.7.137) is now known as PuercoPop
<[6502]> nicferrier: so as default it makes sense to not create a backup for vcs
	 files
<cluck> fledermaus: should that show up with the one you got me?
<nicferrier> jlf: yes, that's what he's saying.
<[6502]> jlf: yes...
<fledermaus> cluck: yes 
<nicferrier> everyone - yes  [01:13]
<fledermaus> ,unicode-describe 💩 
<fsbot> #x1F4A9: PILE OF POO
<nicferrier> lol. really?
<cluck> OH
<cluck> it's the turd
<nicferrier> my browser can't render that. let alone emacs.
<ijp> I still can't believe there is a ,,unicode-describe 🏩
<fsbot> #x1F3E9: LOVE HOTEL
<[6502]> nicferrier: yes... apparently it was added on request from japan (dog
	 dirt I think it's the japanese term) because it's used when texting
									  [01:14]
<cluck> wth isn't emacs displaying it :C
<fledermaus> cluck - have you set up your fontsets to choose that one?
<[6502]> hopefully not many fonts support it
<nicferrier> these aren't in very many fonts
<cluck> fledermaus: i'd say so, gnome-character-map displays it correctly and
	i'm not even running gnome, for some reason emacs isn't :S  [01:15]
<pozic> I selected a font in the GUI menu. How can I apply that for future
	sessions in all buffers?
<fledermaus> cluck: no, I mean, have you put it into emacs' fontset?  [01:16]
<jlf> wtf, cygwin's x doesn't ship with xkill?
<cluck> fledermaus: err, shouldn't emacs inherit xorg's setup?
<fledermaus> cluck: it's not going to use that font by default
<fledermaus> unless you made that the default font for everything  [01:17]
<ijp> jlf: heh, I read that as xbill
<jlf> ha
<quotemstr> Why do they still talk to me?
<quotemstr> I've told these people "Sorry, dudes, but moving to NYC doesn't pass
	    the gut check" twice now.
<quotemstr> I mean, I'm flattered that they're asking, but what do they think is
	    going to be different this time?  [01:18]
<cluck> fledermaus: but it ought to fall back to whichever font has the relevant
	char available, no?
<fledermaus> MOAR MONIEZ?
<quotemstr> fledermaus: They already offered me pretty much maximum money.
									  [01:19]
<fledermaus> that's not how it works 
<cluck> ijp: do kids even know xbill exists?  [01:20]
<yates> is there a way i can see what my current color-theme is?  [01:22]
<cluck> fledermaus: tx 
<yates> .seen a way to check one's current color-theme  [01:24]
<birny> I've never seen a way to check one's current color-theme before.
<yates> me neither, birny!
<l0p3n> Whenever I run emacs under screen, it behaves differently. When I try to
	delete a character with backspace a menu pops up below. How can I fix
	this?  [01:25]
<fxiny> yates: try color-theme-print  [01:28]
<yates> (void-function color-theme-print)
<fxiny> "Color theme by fx, created 2012-08-24."
<fxiny> which is untrue  [01:29]
<yates> fxiny: are you calling me a liar?  [01:30]
<yates> or is emacs lying to me?
<pozic> Why does setting the font via bufface mode create a different output?
<fxiny> yates: the creation date is not correct  [01:31]
<pozic> I.e., when compared to (set-default-font ....)
<fxiny> it prints today date
<yates> oh, that.
<pozic> Can someone explain this madness?
<yates> ,bufface
<fsbot> [google]    http://emacswiki.org/emacs/volatile-highlights.el
<fsbot> http://www.emacswiki.org/emacs/eval-sexp-fu.el
<fxiny> but i can see handy details like : (gnus-group-mail-2 ((t (:bold t
	:foreground "HotPink3" :weight bold))))
<yates> fxiny: are you using the new emacs24 color theme stuff? a la load-theme?
									  [01:33]
<ldlework> Anyone here using SublimeText2?  [01:34]
<dlams`> Most if not all of the people in this channel use ST2
* dlams` apologizes for the sarcasm!
<yates> ,sublimetext2  [01:35]
<fsbot> Therefore go and make disciples  of all nations, baptizing them in the
<fsbot> name of  the Father and of the  Son and the Holy  Editor, and teaching
<fsbot> them to  obey everything I have  commanded you.  And surely  I will be
	..[Type ,more]
<technomancy> not me; I'm already on sublimetext3
<yates> ,sublimetext3
<fsbot> And? 
<technomancy> well, I wasn't going to brag, but it's actually 3.5
<yates> ,sublimetext59302
<fsbot> Why don't you go into more detail? 
<fxiny> yates: emacs 24.2.50.1 with a modified solarized theme
<yates> fxiny: woo-hoo! 24.2.x!  [01:36]
<yates> GNU Emacs 24.0.96.1 (x86_64-unknown-linux-gnu, GTK+ Version 2.22.1) of
	2012-05-09 on randy  [01:37]
<fxiny> yates: courtesy of http://emacs.naquadah.org/
<fxiny> i keep 23 installed but i do not use it anymore  [01:38]
<yates> damn advanced Debian users...  [01:41]
<fxiny> heavy modified debian squeeze ...  [01:42]
<pozic> I selected a font in the change buffer font GUI menu. How can I apply
	that for future sessions in all buffers?  [01:45]
<fxiny> i wouldn't mind compiling 24 from sources . i did compile w3m from cvs
*** resure_ (~resure@85.26.183.231) is now known as resure  [01:47]
*** resure (~resure@85.26.183.231) is now known as resure_away_away  [01:48]
<ivan-kanis> pozic: is there a save in the GUI menu?  [01:53]
<ivan-kanis> pozic: s/is/isn't
<chris2> hi. is there a package providing something like this?
	 https://github.com/spolu/dwm.vim  [01:55]
<pozic> ivan-kanis: not in that menu.  [01:56]
<pozic> ivan-kanis: I have no idea why, but I get different output if I use the
	menu from menu-bar-mode.
<pozic> ivan-kanis: that's the problem; it is completely insane.
<pozic> ivan-kanis: all I want is a method which gives the exact same output as
	clicking on Change buffer font -> selecting the right font -> ok
									  [01:57]
<pozic> I have a feeling this has to do with font backends.
<pozic> chris2: winner-mode  [01:58]
<pozic> chris2: I don't use it, so don't ask further questions about it.
<chris2> ok  [01:59]
<chris2> hm, not really
<chris2> i guess i can code it myself  [02:00]
*** resure_away_away (~resure@85.26.183.231) is now known as resure
<pozic> chris2: setting it up 'exactly' like that is often not useful in all
	cases.
<pozic> chris2: but if you never change your layout, winner-mode in combination
	with desktop-mode does that.  [02:01]
<chris2> pozic: dwm.vim makes that layout automatically
<chris2> (instead of all below each other)
<pozic> chris2: You can split windows horizontally and vertically in Emacs.
<chris2> i use emacs for 10+ years :)  [02:02]
<pozic> chris2: ok, me too. 
<chris2> but i cant automatically arrange it like this, without some code
<chris2> i'll just try it
<pozic> chris2: my .emacs is longer than some editors, so yes, that's Emacs.
* Pio <3 winner-mode
<chris2> and i use elscreen  [02:03]
<nicferrier> I need to test some mongodb code. it's hard.
<pozic> But does anyone know how to set the Emacs font to DejaVu Sans Mono-11?
<chris2> set-frame-font?
<pozic> I.e. the same result as Change buffer font creates.
<pozic> chris2: doesn't do the exact same thing somehow.  [02:04]
<technomancy> chris2: that sounds cool
<chris2> technomancy: i dont like dwm as a wm, but this feels nice
<chris2> technomancy: less clumsy than default vim at least :)
<chris2> so i'll give it a spin in emacs too
<pozic> Emacs Lisp is really a joy to program in.  [02:06]
<pozic> Everything is just so immediate.
<nicferrier> ,pozic++  [02:07]
<fsbot> Noted, nicferrier.  One brownie-point for pozic!
<pozic> Also the completion is ... uhm... complete.  [02:08]
<pozic> Only a statically typed language could in theory have better completion,
	except none actually has.
* technomancy coughs *smalltalk*  [02:09]
<pozic> technomancy: that's not statically typed.
<technomancy> right; I was disagreeing with you  [02:10]
<pozic> technomancy: ?
<pozic> technomancy: with what exactly?
<technomancy> I'm saying that smalltalk is the only thing more dynamic/immediate
	      than emacs
<SpiderPig> hes saying its a counter example
<pozic> technomancy: I am not sure if it's just as fast.  [02:11]
<pozic> technomancy: which completion specifically and which smalltalk?
<technomancy> an image-based system is by definition more dynamic because
	      there's no files/in-memory discrepancy possible  [02:12]
<pozic> technomancy: well, you can have really, really bad programmers still.
<pozic> technomancy: but yes, I'd think that image based development would make
	lots of problems disappear.  [02:13]
<pozic> technomancy: I blame the education system.
<pozic> technomancy: in fact, I don't think I have even seen any image based
	technology other than out of my own interest.
<pozic> technomancy: it's considered an implementation detail.
<pozic> technomancy: which is not really how I consider it in practice.  [02:14]
<technomancy> I'm not saying it's practical, just that it's more immediate than
	      emacs.
<pozic> The little font nightmare has been resolved.
<pozic> technomancy: and what specifically?
<pozic> technomancy: because for Squeak there are multiple addons available.
<pozic> The very fact that there are 'addons' already suggests that the original
	one has weaknesses.  [02:15]
<pozic> There are some commercial Java IDEs that are actually good enough.
<pozic> (and certainly faster than those in Smalltalk)
<pozic> Where I said Smalltalk, I meant Squeak.
<penryu> am I just spacing here? how does one close an nrepl session started via
	 nrepl-jack-in?  [02:16]
<technomancy> penryu: currently: kill the *nrepl-server* buffer  [02:18]
<technomancy> and submit a patch that implements a command that does it the
	      right way =)
<penryu> ah, brute force it. thanks!
<penryu> technomancy: I'm 10 minutes into clojure, but I'll put that in my queue
	 :)  [02:19]
<technomancy> it's still very new  [02:20]
<penryu> I like it.  [02:22]
<penryu> unrelated (and possibly old): in case anyone else is using the github
	 emacsmirror repo and having trouble with C-x 0 or other side-window
	 operations, the fix is in the savannah repos but not yet pulled to
	 github.  [02:25]
<ivan-kanis> pozic: gui is insane with emacs  [02:27]
<dcracked> hi, i try to get my credentials out of ~/.authinfo with
	   (auth-source-search :host "localhost") but it won't work, any hints?
									  [02:34]
<dcracked> my authinfo looks at follows: machine localhost login user password
	   secret port irc-bitlbee  [02:35]
<dcracked> i'm using emacs 24.1.1 on gentoo x86_64  [02:38]
<dcracked> if i'm using (auth-source-search :port "irc-bitlbee") it works
									  [02:39]
<futuro`> dcracked: based on that info alone, my guess is that you don't have a
	  line "named" localhost  [02:40]
<futuro`> ahh, sorry, I'm a bit fuzzled
<futuro`> ignore me
<dcracked> @futuro` ok :)
<chimay> dcracked: so you're using a irc client from emacs ? (i'm just a
	 beginner asking :)  [02:42]
<dcracked> @chimay yeah i wan't to try rcirc :)
<jlf> dcracked: @nick is for twitter, not irc :)   [02:43]
<futuro`> dcracked: O.k., thinking about it more, what if you try
	  (auth-source-search :machine "localhost")?
<chimay> dcracked: good luck :)
<dcracked> jlf: thx :)   [02:44]
<dcracked> futuro`: no luck
<futuro`> hmmm
<dcracked> chimay: thx
<dcracked> chimay: docstring says: common search strings are :max, :host, :port
	   and :user.  [02:48]
<futuro`> dcracked: check out C-h f auth-source-search RET  [02:49]
<dcracked> futuro`: already done :) 
* qDot_ finally finishes reading org-mode 7.9 release notes.  [02:57]
<qDot_> That was a god damn novel.
<dcracked> futuro`: so it works in combination with :port - maybe :host can't be
	   used alone?  [02:59]
<technomancy> qDot_: love the twist at the end  [03:01]
<billyoc>  Someday I want to read the Gnus manual.
<billyoc> technomancy: no spoilers...  [03:04]
<technomancy> billyoc: all I will say is that they totally set it up for a
	      sequel  [03:05]
<billyoc> lmao
* billyoc waits the movie
<billyoc> Oh, I see there is a movie.
<billyoc> If that's the org-mode changelog, I'd hate to see the manual.  [03:06]
<qDot_> The sad thing is, depending on how you use org-mode, you can either
	completely ignore it or you have to read the whole fucking
	thing. There's little middle ground. :|  [03:07]
<jlf> quotemstr: ping  [03:09]
<billyoc> qDot_: glad I played it safe.
* qDot_ needs to do some org config tidying.  [03:10]
*** resure (~resure@85.26.183.231) is now known as resure_away
* billyoc patpats (starter-kit-load "org")  [03:11]
<dcracked> futuro`: thanks for your advice   [03:13]
<dcracked> futuro`: i've got it ... :)  [03:15]
<dcracked> futuro`: finally i can use my authinfo to login on irc and bitlbee
									  [03:17]
<chris2> technomancy: first stab at dwm.el: http://sprunge.us/hBHS
<quotemstr> jlf: Ping  [03:18]
<technomancy> chris2: cool. should be handy for when I'm at home on my big
	      display. =)
<chris2> i think it would be ideal if you had several columns, and could move
	 stuff into those  [03:19]
<chris2> i guess that needs more code :)
<jlf> quotemstr: o hai.  i have a windows question for you if you don't mind.
									  [03:20]
<jlf> i'm writing some automation executed from cmd.exe and a program is
      terminating abnormally and causing a dialog box saying "foo.exe has
      stopped working .. Windows is checking for a solution to the problem",
      preventing me from running my script non-interactively.  is it possible to
      suppress such messages?
<chris2> technomancy: i just notice this is very similar to
	 http://emacswiki.org/emacs/tiling.el :P  [03:21]
<technomancy> yeah, looks like the same idea  [03:22]
<technomancy> he mentions xmonad in the header, which is a good sign
<chris2> heh
<quotemstr> jlf: Yes.
<quotemstr> jlf: See SetErrorMode.
<quotemstr> jlf: Child processes inherit the error mode of their parent.
<jlf> it's a third-party exe that's causing this - is it possible to set
      cmd.exe's error mode?  [03:23]
<quotemstr> jlf: Not without hacking, but if you're willing to do a bit of
	    coding, you can write a wrapper program that sets the error mode,
	    then runs the program given on its command line.  [03:24]
<jlf> hmm, ok.  thanks for the tips.  [03:25]
<jlf> quotemstr: hmm, that wouldn't be
      Computer\HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Windows\ShellErrorMode
      or ...\ErrorMode  , would it?  [03:27]
<quotemstr> jlf: Oh yeah.  [03:29]
<quotemstr> jlf: You can use that too.
<quotemstr> jlf: I just dislike changing global state for local ends.
<quotemstr> jlf: It'll make you sorry in the end.
<bremner> but but, dynamic scope is all about that  [03:30]
<jlf> yeah, this is a lab machine - i'll restore the old value after i run this
      automation
<quotemstr> jlf: Trust me. You'll be happier with a wrapper executable.
<quotemstr> jlf: It'll be, maybe, 40 lines of code.
<jlf> i don't have the toolchain or the first clue about windows programming :) 
									  [03:31]
<quotemstr> jlf: Heh, fair enough.  [03:34]
<quotemstr> jlf: Let me know how the error modethings go. I haven't used them.
<quotemstr> jlf: Also, Visual Studio Express is free and easy to install. Let me
	    know if you need help with it.
<jlf> thanks, i will
<enzuru> windows programming can be summed up by the fact that most of the
	 native IDEs have a gigantic "play" button to run anything  [03:35]
<bremner> yay! let's play global thermonuclear war!  [03:36]
<zhen> ,maririx  [03:37]
<fsbot> zhen, You aren't being very talkative today! 
<zhen> mairix
<zhen> ,mairix
<fsbot> hmm, mairix is See DesktopSearch
<zhen> ,nnmairix  [03:38]
<fsbot> nnmairix.el -- at http://www.emacswiki.org/cgi-bin/wiki.pl?nnmairix.el
<tech1> whats the mode that provides file browsing and opening?
<zhen> Is nnmairix still part of Emacs 24?  [03:39]
<penryu> ,dired
<fsbot> I heard Dired is [0] (info "(emacs)Dired")
<fsbot> [1] at http://www.emacswiki.org/emacs/DiredMode
<zhen> tech1: dired
<zhen> ,DesktopSearch  [03:40]
<fsbot> I heard DesktopSearch is [0] at
	http://gnufans.net/~deego/DeegoWiki/DebianLinksDesktopSearch.html
<fsbot> [1] swish, doodle, beagle, etc.
<jlf> hmm, no change even after setting both of the above keys to 0x7  [03:41]
<jlf> oh maybe should be 0x8007
<tech1> dired looks similar to what i want thanks
<jlf> nope, still happens  [03:42]
<tech1> ok i have dired up it opens the file in the same window.. is there a way
	to specify to open the file in another(already opend window)?
									  [03:45]
<zhen> Can I save a nnir search group?  [03:50]
<tech1> oh i found it. with "o"  [03:51]
<firesofmay> Hi, I am unable to install Emacs Snapshot. I had it installed but
	     after a partial upgrade its not there anymore.  [03:52]
<firesofmay> Trying to install it but getting :The following packages have unmet
	     dependencies:
<firesofmay>  emacs-snapshot : Depends: emacs-snapshot-bin-common (=
	     2:20120807-1~ppa1~precise1) but it is not going to be installed
<firesofmay> E: Unable to correct problems, you have held broken packages.
<jlf> quotemstr: after setting both keys to 0x8007, exiting regedit, and
      launching a new cmd.exe i still see that behavior -- i wouldn't need to
      reboot or something, would i?
<firesofmay> Any pointers?
<firesofmay> Using unbuntu 12.04.
<firesofmay> Ubuntu*  [03:53]
<muep> firesofmay: sounds more like a package manager issue than an emacs
       problem
<firesofmay> muep, yeah I know. And I am not sure how to fix this. I checked
	     similar links online. doing autoremove autoclean etc didn't work
	     for me.  [03:54]
<tech1> in dired mode, if i open a file with "o" it opens the file in another
	one of my windows -but randomly chooses which other window to open the
	file in.... is there a way to specify which window to open the file in?
<firesofmay> join #ubuntu
<firesofmay> oops
<quotemstr> jlf: Maybe you have to restart the shell.  [03:55]
<jlf> that doesn't mean cmd.exe i take it?  [03:56]
<penryu> based on the reg key's location, you might have to reboot.  [03:58]
<enzuru> jlf: Try restarting explorer.exe first
<enzuru> Just killing it should work, it restarts automatically.
<enzuru> If no cigar, reboot.
* jlf is trying to figure out how to do the 3-finger salute from a remote
  desktop session  [03:59]
<jlf> ha, taskmgr.exe  [04:00]
<ijp> ,homie-yow  [04:02]
<fsbot> Get a job, deadbeat.
<ijp> hmm, this is happening suspiciously often
<ijp> ,dl homie-yow
<fsbot> homie-yow is lisp (random-choose (list (if (member nick '("homie"
	"wbooze")) (format "greetings, %s!" nick) (concat (random-choose (notes
	"homie-list")) "\nlol")) "Get a job, deadbeat.") '(9 1))
<penryu> <obligatory-ha-ha-windows />
<ijp> random-choose? guess I just have horrible luck today  [04:03]
<jlf> restarting explorer.exe had no effect
<jlf> quotemstr: if several instances of cmd.exe are open, is launching a new
      one sufficient to pick up new settings or is there a shared parent process
      that shares that state?  [04:04]
<muep> hm, seems that I finally found myself a way to have
       http://www.emacswiki.org/SmartTabs in a cc-mode style so that it does not
       get applied to all code I work with  [04:07]
<tech1> in dired how can you view just file/folder names without permissions
									  [04:16]
<tech1> oh i think i found it: (setq dired-listing-switches "-lBhX")  [04:17]
<nicferrier> the mongo.el guy replied to my pull request! my patches might
	     actually make it!  [04:21]
<nicferrier> tech1: there should be a simpler way of doing that  [04:22]
<Yuuhi`> tech1: you might also want to take a look at dired-details.el
<tech1> its ok. i like having stuff in my .emacs file ... easy to back up
	etc. will look into other .el's too though thanks  [04:23]
<tech1> its theoretically possible to have everything you want in the .emacs
	file right? instead of using it to link to .el files  [04:24]
<nicferrier> tech1: that would be a terrible idea.  [04:27]
<tech1> i know i just wondered if its possible in theory
<tali713> tech1: yes, but it would be a lot of work to make that happen.  [04:28]
<jordanm> is it possible to always have the grandparent directory name as part
	  of the buffer name when the file/buffer matches a particular name?
									  [04:29]
<tech1> ok
<tali713> tech1: likewise you could have all of your software in a single source
	  directory, where make makes, only what you want when you need.  it's a
	  terrible idea,
<jordanm> when working with puppet, I always have many "init.pp" buffers and
	  have to cycle all of them to find the one I am looking for
<technomancy> jordanm: look into uniquify
<nicferrier> tali713: yo. thinking of using your exml thing for elmarmalade. can
	     you provide an example in your README?
<jordanm> technomancy: looks good, thanks for the tip  [04:30]
<tali713> nicferrier: sure, I'll do that real soon.  I'm a bit busy at the
	  moment, but in a few.
<technomancy> it's the best
<tech1> i was just wondering because if i find a useful function in a .el file,
	but want to integrate it into my main config file(.emacs)
	instead... maybe there were particular functions that only worked with a
	.el extension or something
<nicferrier> tali713: np  [04:31]
<tech1> but if course if there is a whole package of related functions id put it
	in its own file
<tali713> tech1: they are all libraries, including your .emacs.  the correct
	  thing to do is use the library.  possible is another matter, but many
	  possible things are foolish.  [04:32]
<tech1> well i want to keep my system as light as possible... so dont want to
	add tons of libraries if im only using one or 2 functions of each one
									  [04:33]
<tali713> tech1: you only have a few kilobytes of disk space? a few dozen megs
	  of ram?  [04:34]
<tali713> what system are you running?  specs, I mean, I am always interested in
	  low spec systems.  [04:35]
<tech1> no i have a good system. 200gb free... i just like to keep things light
	as much as possible. you never know in some situation you might need to
	back up something fast to somewhere or something  [04:36]
<youlysses> tali713: That's really weird to think about, but very true! "They
	    are all libraries, including your .emacs"... :-3
<habstinat> If I run the emacs daemon as a nonpriviledged user but run
	    emacsclient as root, can I edit files that require root permissions
	    to edit?   [04:37]
<youlysses> tech1: I'm on a 160gb system, and I know how that goes ...
<tech1> also i have ocd so im a bit obsessive with my principles
<nicferrier> habstinat: no, not the way you think. you can do it with tramp of
	     course.  [04:38]
<youlysses> tech1: Again, welcome my friend... :-) I'm forcing myself to live
	    exclussively in emacs because of this factor. :-L
<tali713> tech1: okay, well, if that's your concern, consider how much easier it
	  is to only keep a list of what libraries you have installed (i.e. via
	  package.el) and just reinstall them on your new machine.  that would
	  be less in your .emacs, and leave your .emacs as the only important
	  file.  of course this means exclusively using libraries available
	  through package.el  [04:39]
<nicferrier> anyone fancy tackling writing a proxy in elnode?
	     http://www.catonmat.net/http-proxy-in-nodejs/
<tech1> good to know im not alone there  [04:40]
<tech1> ah i see. i didnt know about package.el
<tech1> ill look into that
<tali713> tech1: if you are on emacs 24 it is built in.
<tali713> also, if you do grab functions out of elisp libraries, be sure to
	  change their names, so later if you decide to install that library,
	  you don't have collision.  there are certainly elisp files out there
	  that are little more than pieces of a .emacs.  [04:42]
<tech1> yeh good point  [04:44]
<tech1> that was another reason i didnt want to install too much stuff
	-colision between packages
<youlysses> tech1: I doubt it's just use, tbh. :-P
<nicferrier> tech1: that just doesn't happen really... use packages, install
	     whatever you like. it works.  [04:45]
<tech1> i see
<nicferrier> tech1: we've all been doing this a loooong time.
<tali713> tech1: it will only happen, because you are personally choosing to do
	  things the wrong way.  I'm just telling you how to make sure that
	  doing things the wrong way doesn't bite you in the ass later.
									  [04:46]
<tech1> ok ill trust your advice :)  [04:47]
<tali713> there are certainly exception to this.  like I have a library up that
	  is nothing but functions I pulled from my .emacs, if you grabbed stuff
	  out of there in isolation, it would be totally reasonable.
<tali713> and I'm not the only one.  [04:48]
<tech1> i suppose modes helps seperate things too
<SpiderPig> habstinat: I dont think it works like that. the client wont even
	    find the socket of a different user without using special cmd
	    arguments and even if you do connect it doesnt funnel the data back
	    and forth but mearly signals it to load the file so it would be
	    limited to the unprivlidged user permissions.  [04:54]
<sm> how on earth do I restore M-. to find-tag in emacs lisp file buffers
									  [05:03]
<sm> ack.. emacs-lisp-mode-map != lisp-mode-map
<tali713> ,elisp-slime-nav-mode  [05:06]
<fsbot> From memory, elisp-slime-nav-mode is [0] located at
	https://github.com/purcell/elisp-slime-nav
<fsbot> [1] available from elpa
<rgr> dim: are you there today?  [05:08]
<jlf> what's the shell command that takes two files of equal length and
      concatenates them line-wise into a single file?  [05:19]
<turbofail> paste?  [05:20]
<fsbot> Please do not paste multiple lines of text into the channel. Use
	http://paste.lisp.org/new/emacs and just paste the URL.
<turbofail> ,shoot fsbot
* fsbot loads its rolled-up newspaper and thwaps fsbot on the nose.
<jlf> more like turbowin..thx :)   [05:21]
<fsmunoz> "info coreutils" reveals a world of commands that I almost completely
	  forgot...  [05:23]
<tali713> fsmunoz: yeah, it sure does, I forgot about at least half of those.
									  [05:32]
<tali713> and I was just looking for fold yesterday.  I knew it was there, I
	  just couldn't recall the name.  [05:33]
<grim_fandango> Does anyone have a rmail-mime-media-type-handlers-alist set up
		for viewing HTML that they would be willing to share?
									  [05:43]
<grim_fandango> Perhapsp something piped through w3m
<fsmunoz> tali713: it makes me go back more than a decade... when I was reading
	  a Slackware book that contained all manul pages ang going "awwwwww"
									  [05:45]
<cluck> :)  [05:47]
* tali713 installs moreutils
<tali713> I just migrated systems, haven't got all my packages back up and
	  running yet.  [05:48]
<turbofail> hm... functions created when running emacsclient -e '(let ((x 0))
	    (lambda () x))' seem to really not want to be closures
<turbofail> despite lexical-binding being very much set  [05:49]
<tali713> turbofail: buffer-local
<turbofail> it's set in the server buffer too
<turbofail> when i do emacsclient -e 'lexical-binding' it returns t
<tali713> very odd, will test now.  [05:50]
<youlysses> Everything in the standard installation, is gplv3 with licensing
	    assigned to the fsf right?  [05:51]
<tali713> should be.
<tali713> in fact, if you find something that isn't in emacs, that would
	  probably be bug report worthy.  [05:52]
<youlysses> Coolio, I haven't found the equivalant to that, I just was curious
	    how it worked if not .... (I'm assuming not well. :-P)  [05:53]
<turbofail> hmm the culprit is probably server-eval-and-print, which calls (eval
	    (car (read-from-string expr))) with no lexical argument
<youlysses> But I'm guessing not all things gplv3 with assignment to the fsf
	    does not automatically make it into trunk though? :-P (Eg: EMMS)
									  [05:54]
<turbofail> looks like i'll either have to fix server-eval-and-print, or pass in
	    emacsclient -e "(eval '(code ...) t)"
<tali713> youlysses: yes, and the policy for adopting packages into emacs has
	  grown stricter, since optional packages (that are approved) can live
	  on elpa.  maybe eventually things like org or gnus will move out
	  there.  [05:55]
<tali713> turbofail: looks like.
<tali713> turbofail: that is, I confirm your result on a very recent build.
									  [05:56]
<cluck> i hope not  [05:57]
<cluck> the "comes with batteries included" is a feature i love in emacs  [05:58]
<tali713> turbofail: yeah, quite odd.
<youlysses> tali713: I was also wondering about this, I've been thinking that
	    in-about 2-3 releases, the base of the trunk might be radically
	    smaller... Which could be both a very good/bad thing. We might lose
	    alot of what defines emacs, that people see as almost an "OS", but
	    it also might encourage people to upload more to elpa, instead of
	    third party repos (While I do think they serve a function
	    themselves, too).
<technomancy> that was definitely part of the reason package.el was accepted,
	      for future modularity  [05:59]
<tali713> youlysses: well, I wouldn't want to see a lot of the really useful
	  libraries go, but having the releases for org (especially), be able to
	  move at a faster pace than emacs would be really nice, I'm already
	  running org out of marmalade.
<technomancy> yeah, avoiding nasty merges for org, gnus, erc, etc  [06:00]
<youlysses> cluck: I'm kind-of in this cross-roads on this, but I think it'll be
	    good for the platform though. Plus I'm sure you can or will be-able
	    to, at one point download meta-packages.
<Frozenlock> Org must be bringing half the new users to Emacs. Isn't moving it
	     away making it harder for new users? 
<tali713> but a few of the bigger full blown programs would also benefit from
	  not being in emacs core.  still part of official emacs, just through
	  elpa.
<Frozenlock> The first time I tried emacs I went "omg lolz I don't understand
	     this shit". It took org mode to bring me back and show me the
	     light.  [06:01]
<technomancy> Frozenlock: part of the build process would be to bring in a few
	      packages
<tali713> Frozenlock: not if the package is in /elpa/, the install instructions
	  then read, install emacs, M-x package-install RET org RET
<technomancy> it just means they don't keep their source in the same place and
	      can be upgraded independently
<youlysses> Frozenlock: I don't know if it got me to use it, bit it got me
	    instrested, though I don't think it'd be to hard to add a line to
	    the guide to say "M-x package-install org-mode". :-P  [06:02]
<Frozenlock> I agree that NOW it can seem easy.. but I'm afraid that a new user
	     could be scared by each additional M-x  [06:03]
<tali713> in marmalade is different, because that isn't monitored by the FSF,
	  and isn't available by default.
<Frozenlock> technomancy: Didn't think of the source aspect, good point
<tali713> Frozenlock: even easier, have the initial-splash screen offer a list
	  of larger programs to be installed, org-mode is checked by default, if
	  they hit return, it is installed.
<Frozenlock> tali713: Sold!
<youlysses> Frozenlock: Well the first step for new-users is to read the
	    "guide", and they introduce meta, right?  [06:04]
<tali713> note, I don't think tetris, doctor, etc. should be removed, fun and
	  humor is part of emacs.  just larger software packages.  [06:05]
<Frozenlock> Sure, but when you start, every step looks like a huge
	     mountain. Well that's how I remember my first emacs experience...
<tali713> yes, yes it always does, but introducing new users to the package
	  system, should be part of teaching emacs.
<tali713> well, now that 24 is around.  [06:06]
<Frozenlock> True.
<tali713> hmm, perhaps that should be in the tutorial.  now that i think of it.
<youlysses> Frozenlock: I might just be unusally flexible/odd (for me it was
	    just "cool", not really a challenge :-P ), but I'll agknowledge
	    this.
<youlysses> tali713: That is a very-good point.  [06:07]
<Frozenlock> youlysses: I have new coworkers using emacs daily and they help me
	     remember how it was before. A time when switching buffer wasn't at
	     all natural.
<tali713> Frozenlock: you did show them ido or iswitchb, right?  [06:08]
<Frozenlock> In fact I tweaked a basic .emacs with ido enabled by default
<Frozenlock> I'm not THIS mean :)
<tali713> /etc/skel kicks ass.
<tali713> I put a simple .emacs file in there for new users that sets a lot of
	  basics.  [06:09]
<youlysses> Frozenlock: Switching frame is still a pain, in this reguard. I
	    still find it weird that ido seemingly doesn't support this?
									  [06:11]
<tali713> doesn't it?
<Frozenlock> switching frame? C-x 5 o?  [06:12]
<youlysses> I don't think it does...? I'm glad to be wrong though.
<Frozenlock> If you try to select a buffer already showing in another frame, you
	     will automatically be transfered to this frame. At least with ido.
									  [06:13]
<Frozenlock> I find it disturbing sometimes.
<youlysses> Frozenlock: That's how I've been, but I used to use (I forgot the
	    name now...) some function that would switch to a frame, as defined
	    by it's name.
<Frozenlock> Oh. Wow you must have many frames!  [06:14]
<youlysses> Frozenlock: Yeah, that can be useful, but not what I'm looking
	    for/talking about.
<youlysses> Frozenlock: Atleast 6 at-a-time. Is that much?
<Frozenlock> I usually have one. 2 tops. So yes, I find it to be many.  [06:15]
<youlysses> Well, remember I'm the guy who (probally foolishly) is trying to
	    live full-time in emacs. :-P  [06:16]
<Frozenlock> Aren't we all?
<youlysses> Frozenlock: True, but I also I'm probally taking it a step further
	    than most... (litterally no wm, just a graphical Emacs).
									  [06:17]
<tanzoniteblack> youlysses: just for fun? or to try to limit distractions (if so
		 why are you on irc?)  [06:19]
<billyoc> youlysses: So you can't resize the window?
<anxt> 420  [06:21]
<anxt> blaze that shit up
<tali713> ido-default-buffer-method will allow you to decide whether you want
	  the frame raised or the buffer show in the current frame.  [06:22]
<youlysses> billyoc: I've set my frames to full-screen.  [06:23]
<Frozenlock> tali713: Thanks!
<billyoc> youlysses: But you have no window decorations, no way to resize them
	  manually?  [06:24]
<youlysses> tanzoniteblack: For fun, and to help me learn more and "properly" I
	    sill use the arrow keys ocassionaly, and pgup and pgdwn ... Also
	    It'll likely "force" we to learn more of the internals of elisp. :-)
									  [06:25]
<youlysses> billyoc: Are we talking about emacs's kind-of windows, or the
	    "traditonal" kind?
<ijp> rudybot: quote  [06:26]
<rudybot> ijp: Let's hire Dream Theater for a private show.
<ijp> that would be awesome
<billyoc> youlysses: the traditional.  
<youlysses> ,Dream Theater
<fsbot> try:  dream-p DreamsOfWiki ElephantsDream JosephDreamer
	http://en.wikipedia.org/wiki/Dream_Theater
<youlysses> Aww...:-/
<tanzoniteblack> youlysses: if you're really interested in learning to get away
		 from the arrow keys (and home and delete keys), you should
		 check out no-easy-keys minor mode
		 (http://danamlund.dk/emacs/no-easy-keys.html)  [06:27]
<youlysses> billyoc: I just set it to full-screen, for each frame. Since there
	    is no other graphical external applications I'm running, I need no
	    external window managment. (If I understand your question
	    correctly?)
<ijp> let's go to mcdonalds and order the salad  [06:28]
<youlysses> tanzoniteblack: Cool I'll check it out, thanks! I'm assuming they
	    just disable them? 
<Frozenlock> "no-easy-keys disables arrow, end, home and delete keys, as well as
	     their control and meta prefixes."   [06:29]
<Frozenlock> Control and Meta?
<tanzoniteblack> youlysses: yeah, granted I'm sure you could edit the code a bit
		 to get it to yell at you for using them
<tanzoniteblack> M-left
<tanzoniteblack> same as M-b
<Frozenlock> Yet another site made with org mode  [06:30]
<turbofail> emacsclient is my new favorite way to manage large numbers of
	    machines  [06:32]
<youlysses> Frozenlock: For something of that purpose I see no issuse with
	    that. :-P
<turbofail> well, "large"... it's only 10s of machines right now  [06:33]
<Frozenlock> youlysses: Neither do I.  [06:35]
<youlysses> Frozenlock: Oh, it seemed to me you were like "Jeez...". XD  [06:36]
<Frozenlock> On the contrary, I love org-mode. With the rise of elnode, this
	     could be the beginning of a new world :)  [06:37]
<nicferrier> I kinda hope the builtin wiki can really help people out. but I
	     guess a point might come when people switch to org-mode.
									  [06:39]
<youlysses> Frozenlock: Well I don't know a "new world", but a very
	    nice-niche. I'd be happy to be wrong though. :-)
<nicferrier> I guess if we do move the emacs wiki people would prefer it to be
	     to org-mode than my creole (which looks a lot like the existing
	     emacs-wiki format).  [06:40]
<nicferrier> youlysses: I really think he's right. it's absolutely the easiest
	     way to build a simple content site that you can keep control of.
									  [06:41]
<nicferrier> and elnode let's us build all the other stuff.
<youlysses> nicferrier: Believe me, I'll be *very glad* to be wrong. :-) 
<Frozenlock> nicferrier: org-mode wiki would be an insta-hit. Personally I
	     really don't want to learn yet another markdown language.
<nicferrier> well, we have it. it's there. _eschulte_ has done it.  [06:42]
<youlysses> Frozenlock: I think you're spot on.
<Frozenlock> nicferrier: Really? I thought it was for displaying document
	     only. But if you can edit them....  [06:43]
<nicferrier> and my point is that creole isn't another wiki, it's the same as
	     emacswiki.
* Frozenlock runs in circle, singing weird things
<nicferrier> https://github.com/eschulte/org-ehtml
<nicferrier> editable html files
<youlysses> nicferrier: What do you mean by "it's the same as emacswiki", like
	    just a fork?  [06:44]
<nicferrier> I think he's struggling with dependancies with org-mode extensions
	     right now.
<nicferrier> youlysses: I mean the format of the wiki language is very very very
	     close to the format of emacswiki pages.
<nicferrier> that's why I chose it. creole is a standard that was most similar
	     to oddmuse (or whatever it is)
<nicferrier> the tables in creole.el are just org-mode tables.  [06:45]
<Frozenlock> Nooooo I need Emacs 24
<youlysses> nicferrier: Oh, ok. It might be worth to set up a poll somewhere?
	    But hey if you're doing the actual work, it's your decison. :-P
<nicferrier> Frozenlock: for elnode. yes.  [06:46]
<nicferrier> I was just thinking I could make the elnode-wiki just pluggable so
	     you could use eric's stuff with it.
<nicferrier> but my point with the elnode-wiki was to make something that could
	     be the starting point for the emacs-wiki.
<enzuru> elnode will turn the tide of the war and allow us to eradicate the vi
	 users once and for all  [06:47]
<Frozenlock> lol
<nicferrier> there's no way we're gonna convert the emacs-wiki to org-mode
	     quickly.
<enzuru> it will mark the beginning of a new age, a pax emacsana
<nicferrier> enzuru: I don't think like that. but elnode is the quickest way to
	     build a webapp.
<tali713> agreed.
<enzuru> take your peace pipe elsewhere, hippies  [06:48]
<billyoc> Yeah, it'll be like another Endless September.
<tali713> speaking of which, I do need to get that example up.
<Frozenlock> and with nicferrier's new mongoDB for elnode... :D
<tali713> billyoc: I was there, man, you don't know what it was like.
<nicferrier> someone was talking to me this week about "oh we need a webapp to
	     take ssh keys and drop them somewhere... I'll do it in rails,
	     shouldn't take long". before he'd finished typing about how the
	     rails one would do it I had a working elnode solution. it was 20
	     lines of code.  [06:49]
<billyoc> tali713: I was right there next to you.
<nicferrier> I was there too. I was here. it was awful.
<nicferrier> it won't be like that this time.
<Frozenlock> Stupid ubuntu software center, y u no have emacs 24?!
<nicferrier> Frozenlock: ,,apt
<fsbot> I think apt is [0] a bot on #debian
<fsbot> [1] http://emacs.naquadah.org/ - an emacs apt repository,
<fsbot> [2] https://launchpad.net/~cassou/+archive/emacs - an ubuntu ppa,
<fsbot> [3] the debian family distro package manager
<nicferrier> the mongo stuff is going very well, I am just putting the marmalade
	     package download stuff together. I haven't tackled updates yet
	     though. and tests look like they're going to be really hard.
									  [06:50]
<Zyris> first time using irc... "hello world!" :D  [06:51]
<Frozenlock> Zyris: first time using irc with emacs, or first time irc?
<youlysses> Zyris: Ever?
<fsmunoz> Zyris: cheers
<Zyris> irc, ever lol  [06:52]
* fsmunoz feels old
<Frozenlock> nicferrier: I'm already using mongodb with clojure, I'm eager to
	     compare with emacs :P
<Frozenlock> O.M.G. Someone, grab a net, we have a rare specimen here!
<fsmunoz> Next they'll start making remakes of movies I have "just watched a
	  year ago or so". Like Total Recall.
<youlysses> Zyris: How-old-are-you? 
<Frozenlock> ,guards
<fsbot> SEIZE HIM!!
<Zyris> Just discovering all this good stuff
<deech> Hi all, I'm running into an intermittent issue where sometimes the end
	of the line is some number of spaces after the last character?
<nicferrier> Frozenlock: well, mongodb works. try it out. it's in marmalade.
									  [06:53]
<nicferrier> maybe I should HN that actually.
<nicferrier> another video?
<fsmunoz> It has to be said: elnode now supports sharding...
<Zyris> youlysses: I'm 31... back at University pursuing a computer science
	degree and learning about all this good stuff. 
<Frozenlock> nicferrier: Yes you should! Vim will die!
<nicferrier> Zyris: welcome! we are *very* good stuff!  [06:54]
<Frozenlock> Zyris: First time on irc, yet you come directly to #emacs? It's
	     looking under a rock and falling to the center of the earth :P
<fsmunoz> And modest
<nicferrier> Frozenlock: awww. I hope not.
<deech> Zyris: Congrats! Most folks go the easy route and live in an IDE for
	decades and universities happily let them. Kudos. 
<youlysses> Oh ok, just curious. I still haven't met anyone in #emacs younger
	    than me yet, even though they DO exist... (19 nearly 20)
									  [06:55]
<Zyris> Hah yeah.. figured I'd try to drink from the fire hydrant.
* nicferrier is watching the cure
<Frozenlock> youlysses: I feel old for the first time of my life :P
<anxt> youlysses: i thought it was "12 will get you 20"
<offby1> rudybot: que es mas viejo
<rudybot> *offby1: que es mas macho? truckstop o pinafore?
<ijp> ,homie-yow  [06:56]
<fsbot> the whole middle-east ans asia is chaos!
<fsbot> lol
<youlysses> Frozenlock: "12 will get you 20" ...?
<Frozenlock> Is fsbot trying to start lol-combos?
<ijp> Frozenlock: don't make me write a frozenlock-yow 
<Frozenlock> youlysses: was that for anxt?
<tali713> youlysses: age isn't an issue unless someone brings it up.  usually
	  your character and your ability should stand sufficiently on your
	  own. also goes the other way.
<anxt> Frozenlock: i think so.  [06:57]
<youlysses> Frozenlock: Oops, yup. Sorry.
<ijp> let's rewrite gnu core utils in assembly for speed
<Frozenlock> No worry, I like the company. It makes me feel loved.
<anxt> Let no man despise thy youth; but be thou an example of the using Editor,
       in word, in conversation, in charity, in spirit, in faith, in purity.
<Frozenlock> So where were we? Ah yes, elnode, org-ehtml and mongodb  [06:58]
<youlysses> tali713: I feel the same way, it's just nice to know that the
	    "youth" is still intrested in emacs. :-)
<anxt> ijp: lets not have kernel mode in our OS saving teh copy overhead on
       syscalls.
<Frozenlock> youlysses: It's not http://www.google.com/trends/?q=emacs  [06:59]
<ravster> Hello everyone
<Frozenlock> ,greets ravster 
<fsbot> I think homie-list is [0] more good penises!
<fsbot> [1] lol,
<fsbot> [2] you got my baptising,
<fsbot> [3] i whished i could morse you a wave!,
<fsbot> [4] i love your tranquilizers doc!,
<fsbot> [5] /me puts on ear-muffs!,
<fsbot> [6] /me floats singly!, ..[Type ,more]  [07:00]
<ravster> What is the preferred way of having a php mode? nxhtml?
<ijp> Frozenlock: nah, it's just that no-one googles for emacs anymore since we
      all know where to find it :P
<youlysses> Frozenlock: Well, not overwhellmingly, by any-means, but there are
	    "a-few"... :-)
<ijp> ravster: the preferred way is to not write php
<ijp> at least IMO
<ravster> ijp: hehe :)
<Frozenlock> ijp: Oh snap!
<tali713> ravster: well there is php-mode. nxhtml is alright, but I don't think
	  anyone will be encouraging you to write php.
<tali713> ,php
<fsbot> php -- [0] at http://php.net/
<fsbot> [1] see also ,php-mode,
<fsbot> [2] a barrel of laughs,
<fsbot> [3] not a language. PHP is a thin wrapper around C library calls -- Jeff
	Wheelhouse, ..[Type ,more]
<anxt> http://www.google.com/trends/?q=porn
<tali713> ,more
<fsbot> [4] some of the worst supported languages in emacs, since most people
	good enough at elisp to write a mode would never use this language.,
	..[Type ,more]
<tali713> ,more  [07:01]
<fsbot> [5] a fractal of a bad design
	http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/,
<fsbot> [6] a purely dysfunctional programming language, ..[Type ,more]
<anxt> hmm, interest in emacs is declining while porn is increasing
<tali713> lol at [6]
<tali713> ,more
<fsbot> [7] If you don't mind being a renegade, check this out:
	https://bitbucket.org/XeCycle/php-html-js.vim/
<tali713> lol
<anxt> lol
<youlysses> anxt: Wait till xwidgets hits trunk. ;-)
<ravster> tali713: wow.  sweet.  [07:02]
<ravster> thanks for the heads-up :p
<Nafai> youlysses: and what does that give us?
<Frozenlock> How come `porn' is googled? This seems like a really wide term IMO.
<youlysses> Nafai: A graphical webkit browser, among the ability to embed alot
	    of other gtk based components directly into a buffer.  [07:03]
<tali713> ravster: why are you writing php?
<Nafai> youlysses: nice!
<Frozenlock> Because he wasn't here when we mentioned elnode ;-)
<tali713> oh, right. :)
<ravster> tali713: work, in 1 word  [07:04]
<anxt> Your terms - polka dot fetish - do not have enough search volume to show
       graphs.
<ijp> let's have an intervention for anxt
<ravster> wordpress doesn't have a lisp interface or I'd be all over that.
<Frozenlock> Am I going to die if I do this? sudo add-apt-repository
	     ppa:cassou/emacs  [07:05]
<Frozenlock> sudo apt-get update
<Frozenlock> sudo apt-get install emacs-snapshot
<Frozenlock> I don't want to get stranded without a working emacs!
<tali713> just build from trunk
<youlysses> Nafai: I'm using the branch, and atleast the web-browser works
	    surprisingly well, but still has a-bit to go. :-)
<Frozenlock> tali713: Remember when I was saying every M-x seems like a huge
	     mountain for new user? Well I'm a new linux user...  [07:06]
<youlysses> Frozenlock: Exactly like tali713 said, it dosen't take to-long just
	    to build it. :-P
<anxt> sudo dd if=/dev/random of=/etc/apt/sources.list count=1
<Nafai> youlysses: I'll have to give it a try
<youlysses> Nafai: I wouldn't reccomend it for regular use yet, but in-about a
	    year-or-two, I think it'll be just great. :-)  [07:07]
* Frozenlock googles on how to "build" things
<Frozenlock> I'll be back  [07:08]
<youlysses> Frozenlock: wget the source, grab the depends, "./autogen.sh &&
	    ./configure && make && make install". But with configure you can
	    specify flags.
<youlysses> Damn. :-/
<nicferrier> there's a bloody ppa fgs.  [07:09]
<youlysses> ,fgs
<fsbot> EmfgsWikiMode is at
	http://www.emacswiki.org/cgi-bin/wiki.pl?EmfgsWikiMode
<ijp> ,wtf fgs
<fsbot> nil  ..(symbol)
<nicferrier> for god's sake.
<youlysses> Assuming that's not it. :-P
<ijp> hmm, how do you add entries to wtf?
<youlysses> OH! Doy...
<ijp> lsoia  [07:10]
<wbooze> ,wtf wtf
<fsbot> {What,Where,Who,Why} The Fuck
<wbooze> ,wtf wtg
<fsbot> nil  ..(symbol)
<wbooze> no what the golly !?
<nicferrier> sheet. datetime's are missing from mongo.el.  [07:11]
<wbooze> or what the jewel !?
<wbooze> oh my
<nicferrier> now I have to write that.  [07:12]
<nicferrier> I am really disappointed people won't try out the elnode wiki more
	     just because of the fucking format. how gutting.  [07:13]
<wbooze> please!
<wbooze> ,wtf ffs
<fsbot> Fast File System
<wbooze> lol
<youlysses> nicferrier: Where is it even at?   [07:14]
<youlysses> Wow that sounded bitchy ... :-L I meant "Where is it at?".  [07:16]
<nicferrier> where's what at?
<youlysses> elnode-wiki. Is it up on your github?
<nicferrier> it's part of elnode.  [07:17]
<youlysses> Oh it's bulit in?!
<youlysses> Wow, ok.
<nicferrier> if you install elnode the elnode wiki will be available at
	     http://localhost:8000/wiki/
<nicferrier> and of course you can just reuse the code to make your own wiki.
<nicferrier> this is why I wrote it: 1. we could rebuild emacs wiki with
	     it. 2. most websites need cms for little things like about pages
	     and such like. a wiki is a great way to do it.  [07:18]
<youlysses> nicferrier: WOW. Ok, I think I have a-bit of a better grasp on
	    elnode now that it was *that* easy to get going... :-3  [07:20]
<ijp> let's rewrite emacs in a literal style using org-babel
<ijp> s/literal/literate/  [07:21]
<ijp> what an odd mistake to make
<nicferrier> youlysses: you only just installed it?
<nicferrier> srsly, tali713 and me aren't joking. it is the EASIEST way to build
	     a webapp for all sorts of things.  [07:22]
<nicferrier> I've been doing this (building webapp frameworks) for a long time
	     and I know how to make it easy.
<nicferrier> :-)
<turbofail> i use elnode for random things like being able to make kills on a
	    remote emacs session show up in my local emacs kill ring
<youlysses> I've had it installed before, but never had the chance to really
	    play with it, though I've read your blog, and checked out your vid,
	    but it really didn't hit me till it just happened... :-)
* ijp considers buying a lifesize cardboard nicferrier  [07:23]
<nicferrier> ijp: they're available in all good bookshops.
<nicferrier> I know that sounded arrogant... but it's not, honest. it really is
	     easy coz I've thought hard about it.  [07:24]
<nicferrier> youlysses: wow. that's a really big lesson. because I thought the
	     video showed how easy it was. I made a big point of installing
	     elnode in a blank emacs and then hitting the webserver and the
	     wiki.
<youlysses> nicferrier: Now I really could see something like this could become
	    "mainstream". I don't think it is, you should be proud, this is
	    (afaict) really impressive. :-)  [07:25]
<nicferrier> yes. it's my best work.
<youlysses> *I don't think it's being arrogant
<startling> is there a way I can look at a file on another branch in magit
	    without checking out that branch?  [07:28]
<ijp> this youtube leanback thing doesn't look too terrible
<ijp> I wonder how I never noticed it before now
<nicferrier> leanback?
<youlysses> ,leanback  [07:29]
<fsbot> Echelon IMF Mena covert video Pine Gap CISU Mantis Lexis-Nexis ANC
<youlysses> Well that's not clear ...
<nicferrier> startling: I don't think so. you have to move. unless there's a git
	     way to do it... then you could just excecute the command?
									  [07:31]
<nicferrier> what's the best way to combine bytes to make an int64 in emacs?
<nicferrier> just && them together?
<startling> nicferrier: bleh  [07:32]
<startling> nicferrier: thanks anyway  [07:33]
<forcer> nicferrier: On 32 bit systems, Emacs fixnums are something like 30ish
	 bit. You probably need to make a list and deal with it in external
	 programs.
<nicferrier> forcer: I have an int64 that is representing a datetime
<nicferrier> forcer: it's ms since the epoch.  [07:34]
<nicferrier> is there a type wide enough that would take it? otherwise this is
	     going to be hard I guess
<forcer> I think what I said above means "this is going to be hard I guess".
									  [07:35]
<forcer> ,df current-time
<fsbot> current-time is a built-in function in `C source code'.
<fsbot> (current-time)
<fsbot> Return the current time, as the number of seconds since 1970-01-01
	00:00:00.
<fsbot> The time is returned as a list of three integers.  The first has the
	..[Type ,more]
<forcer> ,m
<fsbot> most significant 16 bits of the seconds, while the second has the
<fsbot> least significant 16 bits.  The third integer gives the microsecond
<fsbot> count.
<fsbot> The microsecond count is zero on systems that do not provide ..[Type
	,more]
<nicferrier> oof.  [07:36]
<ijp> is there a markup format that is basically html with the ability to
      include other files, and allow automatic escaping of certain chunks of
      text?  [07:37]
<nicferrier> html+ssi?  [07:38]
<ijp> hehe, something like that
<tech1> would xml not work?  [07:39]
<nicferrier> I don't know of one. you can include files into HTML with DTD. but
	     it's not exactly well supported.
<ijp> tech1: good point, I completely forgot about cdata  [07:40]
<nicferrier> what am I doing wrong? (logand #x4000 #xa0)
<nicferrier> ok. I'm anding them and I'm an idiot.  [07:42]
<ijp> I think I may just hack something similar to SSI for this purpose  [07:43]
<nicferrier> ssi is quite good. I've put something similar into elnode.
<anxt> N! = N(N - 1)!  [07:44]
<nicferrier> ok. so I've got a 64 bit integer and emacs is talking about 48 bits
	     for time since epoch. anyone know why?  [07:46]
<tali713> nicferrier: I added a couple of super simple examples to the esxml
	  repo.  if you need more, let met know.  [07:49]
<nicferrier> tali713: cheers dude, checking them out now
<tali713> or if you want me to fix them, make them prettier, whatever.
<tali713> I just realized, that I totally fail to show an example /with/
	  attributes. lol, I'll fix that in a bit.  [07:50]
<nicferrier> 1 thing - you should add a PRE with what the output is
<nicferrier> yeah, and attributes
<tali713> got it, that will be up a bit later today.
<nicferrier> gonna fork you to do an example.  [07:52]
<nicferrier> tali713: there you go. in a pull request.  [07:54]
<nicferrier> fuck, I love github. on their own these tools are all rubbish, but
	     add them together in the way they have and it's great.  [07:55]
<Frozenlock> Yay! Done it! Fresh new emacs install!  [07:56]
<Frozenlock> \o/
<legumbre> ,beer Frozenlock
* fsbot serves Frozenlock a lukewarm 30-gallon drum of Germania!
*** Zyris (~user@c-174-52-139-207.hsd1.ut.comcast.net) is now known as zyris
<nicferrier> Frozenlock: well done. but I did point you to a ppa.  [07:57]
<rgr> someone have a favorite way of doing incremental etags updates on file
      save? Any opinions of gtags v etags?
<Frozenlock> nicferrier: Yes, I tried a ppa but it didn't work.  [07:58]
<tech1> i tried removing view of file permissions from dired mode by removing
	the "l" from (setq dired-listing-switches "-lBhX"), the l shows
	permissions -if i remove the l though. the permissions dissapear but
	then in dired i cant open any files -i can see them(how i want) but  if
	i try to open i get "no file on line" error
<Frozenlock> At this point I was feeling adventurous, and I said "eh, why not".
<Frozenlock> True story.
* youlysses wonders how the "debian-derivatives" project is going ... and if
  ppa's will ever get integrated into Debian.
<nicferrier> Frozenlock: well done, from source is better anyway.
<rgr> Frozenlock: what distro?  [07:59]
<Frozenlock> ubuntu
<rgr> oh ppas. Ubuntu I guess.
<rgr> Ubuntu carries the same garbage as debian with emacs though. A shame they
      need to reconfigure the layout. I used to build my own from source but now
      use the excellent debian emacs-snapshot maintained by Julien and friends.
									  [08:00]
<anxt`> debian is teh pwn  [08:01]
<youlysses> rgr: What else do they do, besides remove alot of the
	    documentation...? (In debian, idk about Ubuntu.)
<tali713> nicferrier: cool, my first pull request, thanks!  [08:02]
<nicferrier> Iam struggling with dates. by which I mean attempt #1 did not go
	     well.  [08:03]
<rgr> the layout of the libraries etc. To compile my own I had to rmeove ALL
      debian emacs stuff. This was a while back though I must admit
<Frozenlock> nicferrier: Did you HN while I was incapacitated?
<anxt`> hmm, will combinatorics be useful in comp sci?
<rgr> They dont remove the docs - just rename them and put them in "naughty"
      .deb files.
<technomancy> nicferrier: you mean like
	      http://www.qwantz.com/index.php?comic=2263 ?
<anxt`> seems promising
<nicferrier> Frozenlock: no.
<youlysses> rgr: Well, they aren't installed by default is what I'm saying. You
	    have to enable "non-free".  [08:04]
<nicferrier> technomancy: no.
<ijp> tech1: according to C-h v dired-listing-switches _MUST_ contain the l
      switch
<technomancy> nicferrier: good!
<rgr> yes
<tali713> also, magit is rad, just started using it.  was pleasantly surprised.
									  [08:05]
<rgr> (fwiw, I think its stupid to the nth degree but that debian politics)
<technomancy> tali713: just now?
<nicferrier> tali713: yes.
<tali713> technomancy: yesterday.
<legumbre> magit is made of win
<rgr> tali713: magit is really pretty good
<rgr> been using it for ages
<tech1> i see ijp.. is there any way to include the l switch and hide the
	permissions? some kind of shell hack or pipe function
<rgr> does what it says on the tin.
<rgr> You should recommend it to JordiGH ...;)  [08:06]
<ijp> tali713: what! even _jordigh_, git hater extraordinaire uses magit
<technomancy> magit: making git usable since like 2007
<tali713> yeah, so I am a slow adopter of new tools.
<tali713> glacial even.
<rgr> egg was pretty
<scottj> is there a way in magit to go from a file's buffer to the magit buffer
	 line of that file? or even to the specific line you're on but in the
	 magit buffer? like instead of magit-status, going down the file, going
	 down to the line.
<rgr> jordigh only hates git to appear 1337. Theres really not much to
      hatee. Its fast, reliable and free.
<ijp> rgr: you tell that to him  [08:07]
<rgr> I have
<nicferrier> don't.
<tali713> rgr: but it isn't hg.  and in every way that it is unlike hg it is
	  broken.
<tali713> (not my opinion)
<rgr> exactly
<nicferrier> hg is really really good.
<youlysses> rgr: They have a stated standard, and they're following it. I can't
	    really be a mad and/or upset. I actually think to a degree, atleast
	    it's "noble". :-P
<technomancy> scottj: that'd be cool
<rgr> youlysses: I got over it ;)
<anxt`> i think  jordigh is 1337  [08:08]
<rgr> But not to include docs with something like emacs is anal.
<Frozenlock> nicferrier: Is elnode on marmalade recent enough?
<tali713> not including the source is a sin.
<rgr> "I prefer cvs cos it meets my needs" .. Zzzz
<anxt`> is git gplv3?
<nicferrier> Frozenlock: yes.
<ijp> tech1: I dunno, though maybe you could get away with using one of the
      --format directives instead of -l
<tech1> thanks ijp ill look into that  [08:09]
<nicferrier> an int64 is signed?
<technomancy> I dunno; it's pretty clear that emacs docs aren't allowed to be
	      freely modified, and that sucks.
<rgr> scottj: not sure I follow.
<nicferrier> which means the top bit is the sign?
<anxt`> i think git could be a threat to our freedom
<tali713> tech1: instead of modifying how to call ls, instead modify how the
	  result is displayed.  [08:10]
<nicferrier> hum. more time wasted on stupid problems. going to sleep.
<rgr> scottj: the magit buffer doesnt show all lines. Sounds like you might be
      interested in gitblame
<rgr> oh so nice to have a working emacs-snapshot with erc again.
* rgr pokes irssi vehemently
<tech1> tali713 you mean with a pipe thingy? sorry my bash isnt great  [08:11]
<youlysses> anxt`: Sarcasm? :-L
<scottj> rgr, well, two different commands, one that goes to the line in diff
	 under Modified section if it's there, other command goes to the file
	 line under Modified. Basically a way to say stage/commit stuff faster.
<scottj> rgr, if you make a couple changes in one file I'd like a fast way to
	 stage or commit that rather than going to magit-status, hunting for the
	 file, and staging it.  [08:12]
<rgr> you mean selective stage? Cant say  ever really did that ;) c is my tool
      of choice.
<anxt`> tali713, tech1 http://php.net/manual/en/function.stat.php i think this
	may be a role for a small php program?
<ijp> let's write "Elisp: The Good Parts"
<anxt`> ijp: that would be a 1 page book?
<ijp> anxt`: nah, it couldn't be any shorter than "Javascript: the Good Parts"
									  [08:13]
<rgr> scottj: yes I undertand. I suspect that the time to do that is so
      miniscule compared to the time to create the update thats its not a stock
      feature.
<anxt`> ijp: touche!
* ijp grabs copy from shelf
<ijp> so, at least 150 pages worth
<anxt`> when i need to get close to the bare metal, i use php, its basically
	like C but more flexible.
<scottj> rgr, by update do you mean stage everything? I find myself leaving
	 modified files unstaged all the time.  [08:14]
<ijp> PHP is too high level, so I do all my low level stuff in Node.js
<rgr> It would be a funny way to work too since theoretically all files being
      worked on are being worked on a common issue  : for toher things you would
      branch and remerge.
<scottj> rgr: oh nm I see what you meant
<tali713> tech1: no, I mean, don't use the shell to do what emacs is for, emacs
	  should be deciding how to display dired.  it uses the information that
	  it sees.
<rgr> I almost never leave unstaged files - different work pattern I guess
<anxt`> sometimes i write my shit in opcoadz  [08:15]
<ijp> tech1: maybe try dired-actual-switches ?
<ijp> that looks like it might be relevant
<tali713> anxt`: not really, dired /still/ needs to see -l.  but you could
	  change dired's display.
<rgr> uh oh  [08:16]
<tech1> oh right i see. i guess ill need to find the elisp functions then
<tech1> actual-switchs... ok ill loook
<tali713> and yes, dired-actual-switches looks about right.
<anxt`> assembler makes more lightweight code, thats why like 10% of the linux
	kernel is in pure assembler
<tali713> but it still requires -l
<ijp> tali713: actual-switches? no it doesn't
<rgr> I spot a troll. Using php to get close to bare metal? Must be a joke
      right? I mean I'm the only person here who likes php but even I see that
      statement a crap.
<anxt`> it makes it probably 20% faster than a *BSD  [08:17]
<anxt`> especially on packet mashing
<rgr> stop talking bulls
<ijp> tali713: the default value is nil
<tali713> ijp: oh, oops, lookiung at the wrong help page. :)
<anxt`> rgr: hey lots of php is "thin wrapper around stdlib"  [08:18]
<rgr> thats not baremetal. dont be so silly.
<ijp> tech1: actual switches seems to work for me, but you need to note that it
      is a buffer local  [08:19]
<ijp> at least, I think it is, hmmm  [08:20]
<ijp> maybe I'm speaking nonsense
<rgr> and while I'm at it, Id like to see some supporting evidence that 10% of
      the Linux kernel is in assembler. Almost none of it is I thought. C
      compilers do a better job more often than not these days ;)
<tech1> im looking into it anyway. thanks
<ijp> well C compiler writers are generally smarter than assembly writers
<rgr> I suspect way less 5%
<anxt`> rgr, i suspect about 1% or less, actually ;)  [08:21]
<rgr> and the compiler knows a lot more about the underlying cpu cores/pipelines
      etc than most assembler writters who still get a stiffy from clearing the
      z80 accumulator with "xor a" thus saving a cycle ;)
<rgr> oh you were joking. Sorry. I took the bait.  [08:22]
<anxt`> well now that i am called on it i feel embarrassed
<anxt`> asm:	     212699 (3.32%)  [08:23]
<ijp> rudybot: quote
<rudybot> ijp: Let's replace top with psdoom.
<ijp> hehe
<wbooze> let's quote the corinthians!  [08:26]
<wbooze> lol
<ijp> ,homie-yow
<fsbot> /me greets his bimbos!
<fsbot> lol
<tali713> tech1: or perhaps someone already has before you... dired-details      
									  [08:27]
<tech1> i was just looking at dired-details  [08:28]
<tech1> ill try and steal the function from it
<tech1> or maybe just use dired-details.el.....  [08:29]
<tali713> you can't "just steal a function" it is a library, the whole thing
	  handles hiding details.  [08:32]
<anxt`> gn folks  [08:33]
<tali713> if it ain't broke don't fix it.  [08:34]
<tali713> perhaps you don't already use marmalade?  that library is instalable
	  right from marmalade.
<tech1> i havnt installed any libraries yet
<youlysses>  anxt`: o/
<tali713> tech1: I see, well, if you want functionality provided by a library,
	  install it.  it is the simplest way.  especially a library that does
	  exactly and only what you want.  [08:35]
<ijp> rudybot: if it aint broke, break it then fix it  [08:40]
<rudybot> ijp: its aint hard. really.
<m0ugly> hello  [08:41]
<m0ugly> i'm having trouble with gud
<junis> nicferrier: why can't i add you to my following circle
<m0ugly> I'm trying to debug a shared library, so I first load the executable
	 file with
<m0ugly> target exec path-to-program
<m0ugly> but when I do it gud freezes 
<m0ugly> if I run gdb as a selfstanding program everything goes just fine
									  [08:42]
*** Macphisto (~user@c-69-138-176-254.hsd1.va.comcast.net) is now known as
    Guest47277  [09:21]
<JoelMcCracken> I just looked at the autoloads functionality for the first time;
		what is the point? Is there some compelling reason to avoid
		loading code?  [09:50]
<Buglouse> memory constraints/preferences  [09:51]
<legumbre> loading time
<JoelMcCracken> does it really make that large of a difference?  [09:52]
<legumbre> yes
<Buglouse> Depends on files, but a byte is a byte is a bit
<JoelMcCracken> hmm. 
<JoelMcCracken> just seems like a lot of work/hassle for relatively limited
		payoff  [09:53]
<JoelMcCracken> does requiring a library load it, thus bypassing the autoload
		functionality?  [09:54]
<legumbre> yes
<JoelMcCracken> so a library that depends upon a feature should not be relying
		on autoloading?  [09:55]
<Buglouse> Then don't use it and experience your environment; it has been
	   developed for a reason, if you neglect to conceive any relative
	   reason do not use it, but do not bash the implementation.
<JoelMcCracken> Sorry, not trying to bash. just not wondering/confused =)
									  [09:56]
<Buglouse> I seems, to me, you are defining your opinion without information.
<JoelMcCracken> Right; I from my limited information, I am stating my
		conclusions. If I am wrong (and I assume I am, because, as you
		say, it was developed for a reason), then I hope someone would
		enlighten me  [09:57]
<Buglouse> There is documentation to do this for us. << Takes own advice ;)
									  [09:58]
<tali713> JoelMcCracken: requiring will work just fine with autoload.  but yes,
	  when the library that does the requiring loads, it will pull in the
	  other library, if it hasn't already been loaded (via it's autoloads or
	  some other way)  [10:01]
<billyoc> Anyone remember what gnus uses to render html emails if you don't have
	  w3m installed?    [10:02]
<tali713> JoelMcCracken: think of it as being very similar to a guarded include
	  in a C file.  and thus orthogonal to autoloads.
<tali713> JoelMcCracken: now, let's say library foo has some features that it
	  wants to use only /after/ library bar has been loaded. (i.e. using
	  ido-completing-read or some such).  then foo should include an
	  eval-after-load form for all those features which should only be
	  activated or used only after bar has been loaded.  [10:04]
<tali713> instead of using a require, since strictly speaking foo doesn't
	  /require/ bar, it is just enhanced by bar /if/ bar has been loaded.
<tali713> I love it when people leave in the middle of an explanation.  [10:05]
<tali713> billyoc: I guess it could also use w3, but that sounds painful.
									  [10:06]
<billyoc> No, it does a nice job without either. 
<tali713> billyoc: no clue then, I would have to check the source.  [10:07]
<tali713> or the docs, but I assume you already read those.
<billyoc> No, I'm saving the docs as a last resort.
<tali713> umm, RTFM  [10:08]
<billyoc> I would, but the code's smaller.
<tali713> well, then why did I find the answer in about .1 seconds with the
	  manual, and you are still wondering?  [10:09]
<billyoc> skillz
<tali713> (info "(gnus) Top") C-s html C-s C-s
<tali713> or simpl C-h i d m gnus RET C-s html ...  [10:10]
<tali713> damnit, do we need a virtual jordanb?  [10:11]
<tali713> rudybot: have you RTFMed today?
<rudybot> tali713: It's funny, although I was English well enough before the
	  critical period in order to be native in it, I do vaguely remember
	  some time in my life when I didn't know it, around the time when I was
	  coding BASIC, so I don't think I could have rtfmed.
<legumbre> itym ams  [10:12]
<tali713> i think you are right.
<bpalmer> rudybot: manuals are for mankind.
<rudybot> bpalmer: there! R&J, i can quote shakespeare too, fsbot has not
	  surpassed mankind yet! ... and i'm cornier that he is :)
<tali713> ,told fsbot  [10:13]
<fsbot> Awww! fsbot got *told*!
<tali713> fsbot: flame rudybot 
<fsbot> rudybot: Artificial intelligence - natural stupidity. You know which you
	are? Thought so.
<tali713> ,rampage  [10:18]
* fsbot loses it at a bus station in austin and releases #emacs regulars upon
  the crowd.
<dotnull> has anyone had any problems getting emacs to see the .emacs.d
	  directory in wubi?  [10:27]
<tali713> wubi?
<dotnull> yeah... windows ubuntu installer
<tali713> oh, no, wut?  [10:28]
<dotnull> trying to help a friend get my emacs setup, and i sshed in, and after
	  like 15 minutes he told me it was actually wubi and not ubuntu
<dotnull> I was like wtf lol
<dotnull> I don't know anything about wubi, but since it installs ubuntu on
	  windows, I'm wondering if the file system is different  [10:29]
<Buglouse> Thats a loaded question ^
<tali713> who knows, that whole concept is weird enough that I am having to read
	  up on wubi, just to understand the question.  [10:30]
<dotnull> please don't waste your time, I was just wondering if someone somehow
	  knew
<dotnull> I'm not worried about it
<tali713> dotnull: it appears that wubi is just an ubuntu installer for windows,
	  but that it actually installs ubuntu, can't be certain though.
									  [10:31]
<dotnull> yeah, i'm not certain either
<dotnull> well, there must be something funky with wubi, because I started emacs
	  with emacs -q -l ~/.emacs.d/init.el  [10:38]
<dotnull> and it worked fine
<dotnull> so problem solved
<dotnull> weird, though  [10:39]
<m0ugly> there have been cases of sexism in this channel?  [10:41]
<Buglouse> 0 is also true  [10:46]
<surrounder> m0ugly: shake that moneymaker  [10:49]
<ijp> m0ugly: lots of things have occurred in this channel  [10:50]
<jlf> a likely story  [10:54]
<ijp> ,homie-yow  [10:55]
<fsbot> Get a job, deadbeat.
* ijp accusses fsbot of having insufficiently random random numbers
<ijp> accuses*
<tali713> yeah, and I don't like that change much either  [10:57]
<tali713> ,dl homie-yow
<fsbot> homie-yow is, like, lisp (random-choose (list (if (member nick '("homie"
	"wbooze")) (format "greetings, %s!" nick) (concat (random-choose (notes
	"homie-list")) "\nlol")) "Get a job, deadbeat.") '(9 1))
<tali713> ,homie-yow  [10:58]
<fsbot> Get a job, deadbeat.
<tali713> nah, just bad luck  [10:59]
<jlf> ,df random-choose  [11:00]
<fsbot> fs-random-choose is an alias for `erbutils-random' in `.emacs'.
<fsbot> (fs-random-choose LIST &optional WEIGHTS)
<fsbot> Return a random element from list. 
<fsbot> Optional WEIGHTS are relative.  They should be integers.  ..[Type ,more]
<jlf> ,m
<fsbot> example:  (erbutils-random '(a b c) '(1 1 2)) should return c twice
<fsbot> as many times as it returns a...
<jlf> maybe the weighting is borken
<tali713> nope, just bad luck.
<tali713> I tested in private, the odds look right, just sometimes, randomly,
	  you get to 1's in a row.  [11:01]
<ijp> I must have used up all my good luck yesterday
<tali713> s/to/two/
<jlf> rudybot: do you feel lucky, punk?
<rudybot> jlf: macrobat is one lucky punk... *CLICK*
<ijp> well, yesteryesterday  [11:02]
<jlf> ,homie-yow
<fsbot> he is an escape ,rush!
<fsbot> lol
<jlf> ,homie-yow
<fsbot> Get a job, deadbeat.
<jlf> ,s/9/99/ in homie-yow  [11:03]
<fsbot> Replaced string "9" with "99".
<jlf> ,homie-yow
<fsbot> more good penises!
<fsbot> lol
<jlf> ugh
<ijp> fsbot: that isn't even a quote, it's a distortion of one
<fsbot> "That", is what I ask you.
<jlf> didn't some write an index-of-match thing?  [11:04]
<jlf> someone even
<ijp> hmm, that would be useful  [11:05]
<jlf> forget-nth, index-of-match  [11:07]
<ijp> let's deny youtube commenters the vote  [11:15]
<jlf> ,homie-yow  [11:17]
<fsbot> why are they called pea nuts!  [11:18]
<fsbot> lol
<ijp> why indeed  [11:19]
<ijp> ,...  [11:49]
<rudybot> Woof.
<fsbot> [In the distance, you hear a dog bark]
<ijp> their coordination needs some work
<scri> ,...  [11:53]
<rudybot> Woof.
<fsbot> [In the distance, you hear a dog bark]
<Vulpes> no crickets?
<Vulpes> ,chirp  [11:54]
<fsbot> Try: angrybirds crickets ⋯
<Vulpes> ,crickets
<fsbot> *chirp*, *chirp*, *chirp*
<tali713> ,⋯  [11:55]
<fsbot> [In the distance, you hear a bird chirp]
<tali713> ,..  [11:56]
<fsbot> a lone voice cries in the wilderness
<Vulpes> ,***
<fsbot> [Too many DB matches] [google]    http://www.emacswiki.org/alex/Matthias
<fsbot> http://www.emacswiki.org/AutoInstall
<ijp> ,.......  [11:57]
<fsbot> a tumbleweed rolls by  [11:58]
<theos> ,...  [12:12]
<rudybot> Woof.
<fsbot> [In the distance, you hear a dog bark]
<theos> ,...  [12:13]
<rudybot> Woof.
<fsbot> [In the distance, you hear a dog bark]
<theos> :)
<Vulpes> ,forkbomb  [12:15]
<fsbot> Is that all there is to it? 
<Vulpes> ,yes
<fsbot> Reply unclear, try again
<tech1> in installing packages/modes whats the differene between load, require,
	and install..... each .el file seems to use one of those but without
	explaining why  [12:23]
<tali713> install isn't an elisp function, so I don't know about that, I assume
	  it has it's usual meaning.  [12:25]
<tali713> load loads a file.  very straight forward.  [12:26]
<tali713> require requires a feature, and is often used to load files, but is
	  really intended to be the equivalent of a guarded include. (loads but
	  only if feature not already present)
<tech1> i see  [12:27]
<tech1> so every package needs load... and some also need require in addition to
	load
<tali713> no.
<tali713> C-h f require, then read.  [12:28]
<ijp> if you loaded and required, it would defeat the point of the latter
*** hdev` (~user@dslb-094-220-119-152.pools.arcor-ip.net) is now known as hdev
									  [12:29]
<tali713> tech1: no file should ever need to be required in your .emacs, except
	  perhaps cl.  but you /may/ choose to require a file instead of load
	  it. if you /installed/ through elpa, autoloads should be in place to
	  make such things unnecessary. though if the package is polite it will
	  not do anything until asked.
<tali713> unfortunately that dired package mentioned earlier is not quite
	  packaged properly so you will need to load it, and then run the
	  initialize function (as mentioned in the source file)  [12:30]
<tali713> i'd report a bug but I don't care.
<Buglouse> ,persistence   [12:32]
<fsbot> CategoryPersistence is at
	http://www.emacswiki.org/cgi-bin/wiki.pl?CategoryPersistence
<tech1> i see. that makes more sense now. going to try and install some .el
	files now  [12:33]
<lcc> I have customized colors set via customize. how can I automagically turn
      it into a theme?  [12:46]
<tali713> lcc: M-x customize-themes, look for "migrate"  [13:12]
*** akira (~luozengbi@softbank126012231155.bbtec.net) is now known as Guest38693
									  [13:29]
<lcc> thanks  [13:37]
<lcc> I don't know why, but I just didn't remember seeing that before for some
      reason.  [13:39]
*** metaperl|2 (~georgejet@cpe-24-193-199-12.si.res.rr.com) is now known as
    GeorgeJetson  [14:12]
*** ingeniou1 (nortimer@vm15.hadiko.de) is now known as ingenious  [14:32]
* Buglouse Got 'ta read the code  [14:57]
* Buglouse (gotta read em all, gotta read em all, Open Source! -shows
  recognition- and *gratitude* for the days past, growth is not without its
  difficulties)  [15:01]
*** Yuuhi`` (benni@p5483BFF8.dip.t-dialin.net) is now known as Yuuhi  [16:19]
<dbarends> test  [16:26]
<tali713> test: failed  [16:30]
<dbarends> no it didn't:-)  [16:32]
<wbooze> all dick and no mushy make joe blonde!  [16:33]
<wbooze> lol
<mickn> I just installed auto-complete using packages from marmalade can someone
	tell me how to get auto complete mode to work?
<tali713> ,autocomplete  [16:38]
<fsbot> [->] I heard auto-complete is [0] an elisp extension offering completion
	features similar to those found in many IDEs.
<fsbot> [1] at http://www.emacswiki.org/emacs/AutoComplete,
<fsbot> [2] at http://github.com/m2ym/auto-complete, ..[Type ,more]
<tali713> check [1]
<rgr> auto-complete is really nice when it works. Its a real hit or miss affair
      on my setup. Sometimes works, othertimes doesnt. OK, I havent really done
      much to track down why. But its the best solution out there from the ones
      I tried.  [16:43]
<mickn> well i just added to my .emacs file what was required but i get Symbol's
	value as variable is void: ac-dictionary-directories  [16:44]
<jboogie> is it possible in cc mode to find in which header a certain function
	  is defined?  [16:46]
<tali713> you probably want tags for that.
<tali713> see M-. and M-! etags *.c *.h  (or whatever)  [16:47]
<jboogie> thanks tali713 I'm looking into that  [16:48]
<etfb> Right, I'm almost certainly doing something obvious and stupid, but I
       can't figure out what.  I can't get TRAMP to work with Emacs in Windows
       7.  Keeps trying to use the ssh command even though I've told it the
       tramp-default-method is plink. Any clues?  [17:09]
<etfb> And yes, I know that obvious stupid thing #1 is attempting to use
       Windows.  I promise to run back to the loving arms of Linux as soon as
       I've done this bit of testing in IE...  [17:10]
<penryu> linux ∈  {!Windows} => t  [17:12]
<etfb> Ah, mathematics, the universal language of utter incomprehension...
<nullie> etfb, run ie in windows in virtualbox  [17:13]
<etfb> nullie: VMWare is my preference, but I don't have legal Windows 7
       installation media.  Plenty of XP VMs already set up, but I have this
       dual booting machine running IE9, and I want to test my websites with it.
									  [17:14]
<penryu> etfb: just saying, pretty much any OS that isn't Windows leads to happy
	 Emacsery
<etfb> penryu: So I've seen.  I find it incredible now that I spent ten years
       using Emacs in Windows.  Seems so long ago now.  [17:15]
<mallet> Can Emacs (launched with -nw) communicate with the host terminal (urxvt
	 here)? Is there some kind of protocal for that?
<bremner> what kind of communication are you after?
<etfb> But my customers use IE, so I have to at least pretend to care about how
       their websites look.
<bremner> ,customers
<fsbot> rampage-list -- [0] /me rampages across %s shooting %s out his nose.
<fsbot> [1] /me begins stomping across %s, farting %s.,  [17:16]
<fsbot> [2] /me strolls lazily into %s, and gracefully releases %s., ..[Type
	,more]
<mallet> bremner: I would like urxvt to get the last kill ring element.
<penryu> i will say emacs is the most sane and consistently usable
	 editor/OS/space-station I've ever used... even into Windows.
<mallet> bremner: Maybe triggering some event in urxvt so that a Perl hook can
	 be called (like on_osc_seq), with a string passed in some way.
									  [17:17]
<mallet> bremner: The bottom line is to find a way to set the X selection to the
	 last kill ring element, even on a remote text-mode Emacs (not aware of
	 X).  [17:18]
<bremner> mallet: I guess you'd have to ask urxvt experts if there is some
	  escape sequence to run hooks; sounds like a pretty bad security leak
<etfb> penryu: Indeed. And usually if there's a problem between the two
       operating systems (ie Windows, the pretend OS, and Emacs, "the ultimate
       OS that lacks only a decent text editor") it's usually Windows's
       fault. But right now it seems to be some config option I can't find in
       Emacs itself.
<mallet> bremner: maybe with some terminal override then.
<mallet> bremner: At the moment, I succeeded under a local tmux. Emacs sends the
	 last kill ring element to tmux buffer, and urxvt retrieves it. But
	 remotely, it does not work.  [17:19]
<etfb> Ah! Fixed it. I can't use c-x f /ssh:user@domain: because that ignores
       the "tramp-default-method".  Have to explicitly ask for
       /plink:user@domain: and then it Just Works.  [17:27]
<etfb> It's been so long, I forgot that.  Thought TRAMP kind of assumed ssh and
       used the default setting for it.
<nicferrier> I just made valentines day by randomly putting this datetime
	     together.  [17:43]
<nicferrier> unfortunately I was trying to make the 8th of december
<nicferrier> I was also 32 years out.
*** Eyes|Infinite (~Eyes@WiseOS/Founder/EyesIsMine) is now known as EyesIsMine
									  [17:49]
<jaseemabid> Irrespective of my programming style, emacs is placing starting
	     braces on a new line. What should I be looking into? Lang: C++
									  [17:55]
<forcer> (c-set-style "k&r") ?  [17:56]
<nicferrier> so wow. we really need 64 bit integers added to elisp.  [18:06]
<forcer> Bignums, you mean
<gehmehgeh> Hi. Since the update to 24.1.1, the colour of Emacs' cursor is
	    changed in new windows. In the first instance of the program, it
	    retains its old value ("limegreen" in my case), whereas in newly
	    opened windows, it is changed to black  [18:07]
<gehmehgeh> Is this a feature or a bug?
<nicferrier> forcer: yes.
<gehmehgeh> And how can I fix this?
<forcer> Sounds like a frame setting.
<gehmehgeh> I didn't edit my config file.  [18:08]
<gehmehgeh> I updated from 23.4 to 24.1.1
<forcer> gehmehgeh: Where do you set the limegreen value?  [18:09]
<forcer> 24 changed the way themes work, so might be related to that.
<gehmehgeh> It is set in ".emacs" in a line preceded by a comment which warns me
	    about editing this by hand  [18:10]
<forcer> Customize stuff I guess  [18:11]
<gehmehgeh> "set by Custom" etc
<gehmehgeh> hm
<gehmehgeh> So what do I do?
<forcer> What's the name of the face it sets there?
<gehmehgeh> Reset this somehow?
<gehmehgeh> "default"?
<forcer> Huh
<gehmehgeh> (default ((t (:inherit nil :stipple nil :background "gray15"
	    :foreground "limegreen" :inverse-video nil :box nil :strike-through
	    nil :overline nil :underline nil :slant normal :weight normal
	    :height 132 :width normal :foundry "unknown" :family "Anonymous
	    Pro")))))  [18:12]
<gehmehgeh> This line
<forcer> gehmehgeh: Try M-x customize-face RET cursor RET
<gehmehgeh> Ah, sorry. What do you mean by RET?  [18:13]
<jaseemabid> forcer, Yasnippet was ignoring my style guide. It always add { on a
	     new line irrespective of mode
<nicferrier> press RETURN
<nicferrier> ENTER
<gehmehgeh> ^^
<forcer> jaseemabid: Ah. Yeah, yasnippet has its own snippets.  [18:14]
<jaseemabid> any fixes ?
<jaseemabid> can i reindent  somehow?
<forcer> jaseemabid: It's probably the best for continued yasnippet use to just
	 edit the snippets it uses to fit your style.  [18:17]
<jaseemabid> hmm.   [18:18]
<jaseemabid> feature missing :(
<gehmehgeh> forcer: Thanks. I'll work something out
<nicferrier> how can I print a number in binary?  [18:21]
<gehmehgeh> forcer: Thank you. The problem is solved.  [18:24]
<forcer> :-)
<scri> nicferrier: can't you do (format "%b" x)
<scri> hm, guess not  [18:25]
<nicferrier> no, I was surprised at that
<forcer> Ordering books for the Kindle is way too convenient.  [18:27]
<nicferrier> yeah. it is too easy. amazon are awesome and scary.
<forcer> Yes.
*** raek_ (~raek@h-17-164.a328.priv.bahnhof.se) is now known as raek  [18:28]
<nicferrier> let me run thru this, I've got these bytes (list #x40 #xa0 #x9f
	     #xc3 #x2c #x01 #x00 #x00)  [18:33]
<nicferrier> I'm guessing this is high byte ordered. so I'm taking the first two
	     bytes, then the next two to make a 2 in elisp time  [18:34]
<nicferrier> (format-time-string "%D" (decode-time (list (logior #x4000
	     #xa0)(logior #x9f00 #xc3))))
<nicferrier> but that doesn't seem to be right.
<forcer> Where did you get those 8 byte?  [18:35]
<nicferrier> from a packet dump.
<forcer> And what do they mean?
<nicferrier> they mean a 64 bit int.  [18:36]
<forcer> And what does that integer represent?
<nicferrier> time since epoch
<nicferrier> I think it's just a unix 64 bit time_t
<nicferrier> as an int
<forcer> If it starts with #x40, it's most definitely not seconds since epoch
									  [18:37]
<nicferrier> why not?
<nicferrier> that makes it negative (which it is, it's representing a date in
	     2010)
<forcer> 0x40 does not mean it's negative. And 2010 is definitely past 1970, so
	 it better not be negative.  [18:38]
<nicferrier> good point
<forcer> 0x40000000000000 is 18014398509481984, we are at 1345891048 seconds
	 past epoch
<nicferrier> why does 0x40 not mean it's negative? it sets the high bit
<forcer> Hence, if it starts with 0x40 and is 64 bit, it's not seconds since
	 epoch
<forcer> nicferrier: It sets the 7th bit, not the 8th  [18:39]
<nicferrier> ok. but why does that mean it's not a time?
<nicferrier> because it's too high. right.
<forcer> I didn't say that it means it's not a time
<forcer> It might be milliseconds, or something weird.  [18:40]
<nicferrier> well here's the bson spec http://bsonspec.org/#/specification
<nicferrier> it says a datetime is 0x9 then the fieldname followed by 00 then a
	     64 bit integer
<forcer> "The int64 is UTC milliseconds since the Unix epoch"  [18:41]
<nicferrier> right. I've been dumb haven't I.
<nicferrier> I'm going to have to do some further arithmetic to work it out.
									  [18:42]
<nicferrier> / 1000
<nicferrier> something like that
<forcer> >>> datetime.datetime.utcfromtimestamp(0x00012cc39fa040 * 0.001)
<forcer> datetime.datetime(2010, 12, 8, 1, 36, 47, 168000)
<forcer> Sounds right
<forcer> So you need to reverse the bytes
<nicferrier> oh.
<nicferrier> so lo byte was high. ok.  [18:43]
<nicferrier> thanks forcer that's awesome help.
<nicferrier> was that js?
<forcer> Python
<nicferrier> k.
<forcer> Network byte order is big endian, so that makes sense  [18:45]
<nicferrier> ah. I didn't know that.
<forcer> I always confuse them. I have to look it up every time. :-(  [18:46]
<nicferrier> but I also need to divide these all the time, because I need
	     seconds not ms
<forcer> I guess in your case I'd just use floats in elisp  [18:47]
<nicferrier> I can or a bunch of bytes together to make a float?  [18:48]
<nicferrier> hmmm
<forcer> byte1 << 8 | byte2 == byte1 << 8 +  byte2  [18:49]
<forcer> Because shifting only adds null bits
<damd> there is no such thing as a null bit  [18:53]
<forcer> Ah, sorry. Zero bit, obviously. "Null" is the German word for "zero",
	 and I sometimes get confused.  [18:54]
<forcer> But now, off to gym. bbl :-)
<nicferrier> cu  [18:55]
<nicferrier> I suspect there is some arithmetic way I could do this.  [19:05]
<nicferrier> but I'm struggling.
<tali713> ,(let ((n -1)) (apply '+ (mapcar (lambda (x) (setq n (+ n 1) (* x
	  (expt 256 n))))  (list #x40 #xa0 #x9f #xc3 #x2c #x01 #x00 #x00))))
									  [19:16]
<fsbot> BEEEP: Wrong type argument: symbolp, (fs-* fs-x (fs-expt 256 fs-n))
<tali713> ,(let ((n -1)) (apply '+ (mapcar (lambda (x) (setq n (+ n 1)) (* x
	  (expt 256 n)))  (list #x40 #xa0 #x9f #xc3 #x2c #x01 #x00 #x00))))
									  [19:17]
<fsbot> 1291772207168  ..(integer)
<nicferrier> yeah but that doesn't help coz that's just an int, which will
	     overflow?  [19:21]
<nicferrier> the problem is 2 fold: 1. this is 64 bits 2. this represents ms
<tali713> do you need all of it?  [19:22]
<tali713> ah, well that helps.
<nicferrier> well, possibly. for now I am just trying to do what I can see I can
	     do in python
<nicferrier> this (/ #x012CC39FA040 1000) == 4CFE E12F
<nicferrier> which I'm surprised doesn't work as a time  [19:23]
<nicferrier> (format-time-string "%D" (decode-time (list #x4CFE #xE12F))) - but
	     it doesn't
<tali713> (format-time-string "%D" (decode-time '(#x4CFE . #xE12F))) => 02/05/70
									  [19:25]
<nicferrier> which is wrong. it should be 2010  [19:26]
<tali713> (format-time-string "%D" (decode-time (cons #x4CFE #xE12F))) =>
	  02/05/70
<tali713> yup. very wrong.  [19:27]
<nicferrier> you see my logic though? (/ #x012CC39FA040 1000) should be the # of
	     seconds
<nicferrier> but I guess it's too wide
<nicferrier> it works in python
<nicferrier> I could write some 64 bit number handling I guess.  [19:28]
<nicferrier> actually no. that's wierd. why would I be able to divide it and get
	     a response which I can then paste into python and have it work?
									  [19:33]
<nicferrier> datetime.utcfromtimestamp(0x4CFEE12F) => datetime.datetime(2010,
	     12, 8, 1, 36, 47)  [19:34]
<nicferrier> which is correct
<nicferrier> so why doesn't elisp work?
<nicferrier> my youngest son has got severe irc help problem.  [19:35]
<nicferrier> he always has to say "daddy, can I tell you something?"
<nicferrier> instead of just saying.
<nicferrier> the number turns out to be 28 bits long, which doesn't fit inside
	     the 29 bits. so it should be ok I think.  [19:39]
<nicferrier> so I'm a bit lost.
<foeniks> hey, I wonder whether there is an emacs-equivalent to the vim "gqap"
	  command
<foeniks> i.e. automaticall text wrap
<nicferrier> M-x auto-fill-mode
<nicferrier> maybe?
<roobarb> foeniks: what does "gqap" do?
<foeniks> wraps lines at 80 characters  [19:40]
<chimay> format a paragraph
<nicferrier> auto-fill-mode
<roobarb> foeniks: fill-region-as-paragraph  [19:42]
<nicferrier> or auto-fill-mode, as you type.  [19:43]
<roobarb> nicferrier: are integers 64 bit in emacslisp?  [19:44]
<nicferrier> no. 29 bits
<roobarb> quite an odd number. I'd expected 32 
<roobarb> (missing have)  [19:45]
<nicferrier> elisp objects use a bunch of bits as type flags
<roobarb> how about on 64-bit architecture machines?   [19:46]
<nicferrier> makes no difference. emacs is portable across all architectures.
<bitonic> roobarb: 29 bits is useful to have unboxed integers
<bitonic> or at least that's the most common motivation for integers smaller
	  than 32 bits  [19:47]
<roobarb> bitonic: hang on. I'm asking google about unboxed integers  [19:48]
<bitonic> roobarb: basically you want to avoid to have a pointer to the integer,
	  and instead have the integer directly
<roobarb> bitonic: Sounds like primitive data types in java  [19:49]
<roobarb> as oposed to  objects
<bitonic> roobarb: yeah.  but java is different - type checking is done
	  statically and types are erased at runtime  [19:50]
<bitonic> so you don't need any bit tags for type information
<jave_> hello nicferrier 
<bitonic> roobarb: also, it's often useful to have bits for GC and similar stuff
<roobarb> so emacs uses 3 bits to encode some info for pointer and integer? the
	  data types, I'm guessing?  [19:51]
<roobarb> emacslist, I mean
<roobarb> emacslisp
<nicferrier> jave_: hi
<bitonic> roobarb: well from those 3 bits you can probably tell if the data in
	  the word is a pointer or an unboxed integer or something eles
<bitonic> *else
<bitonic> the data in the remaining word apart from the 3 bits  [19:52]
<bitonic> I'm just guessing - I'm no expert in elisp - but that's usually how it
	  goes
<roobarb> from info: types  [19:53]
<roobarb> include "integer", "float", "cons", "symbol", "string", "vector",
<roobarb> "hash-table", "subr", and "byte-code function"
<roobarb> I'm surprised there's more than eight
<bitonic> that's why the specifications of a lot of languages require integers
	  of at least 28/29 bits (e.g. Haskell, JS, Erlang)  [19:54]
<bitonic> roobarb: well, you don't necessarily have to pack everything in those
	  3 bits
<bitonic> actually, JS doesn't have integers, but the numbers should be that
	  wide iirc.  [19:55]
<roobarb> bitonic: hang on again. I haven't heard of JS before  [19:56]
<bitonic> oh yes you have, javascript :)
<scri> bitonic: no integers in js?
<scri> how can that be
<bitonic> scri: ask brendan eich?
<roobarb> javascript. okay
<scri> huh http://stackoverflow.com/questions/4703725/integers-in-javascript
									  [19:57]
<scri> weird
<bitonic> ah, 64-bit floats.  so I was wrong on that.
<bitonic> but haskell and erlang require 29 bits integers
<nicferrier> I think there's a bit for functions, a bit for objects and a bit
	     for something else. can't remember what  [19:58]
<roobarb> I wonder how python does its "unlimited precision" ...
<bitonic> well Erlang does not have a standard, but that's the state of things
<nicferrier> but. this isn't helping.
<nicferrier> :-D
<bitonic> roobarb: that's a good exercise, write a bignum library :)
<nicferrier> yes please roobarb - can I have it today as well? (bignum library)
									  [19:59]
<bitonic> nicferrier: well there are many around
<nicferrier> in elisp?
<bitonic> ah.  probably not.
<scri> why not just bite the bullet and require 'cl
<bitonic> I wonder how much effort would it take to put gmp into elisp  [20:00]
<nicferrier> how will that help?
<nicferrier> does cl have bignums?
<scri> surely
<bitonic> scri: really?
<nicferrier> no. don't think you've understood cl.
<nicferrier> it's not commonlisp.
<scri> oh its not?  [20:01]
<nicferrier> no. it's commonlisp functions for elisp. it's not an
	     implementation.
<nicferrier> so the types aren't different.
<scri> right... obviously emacs doesnt ship with all of CL
<nicferrier> it doesn't ship with any of cl.  [20:02]
<nicferrier> 'cl is just some functions that approximate to their equivalents in
	     CL.
<nicferrier> well, and macros.
<scri> ok that makes sense
<scri> different languages
<nicferrier> so we have an elisp version of loop, of defun* etc...
<nicferrier> different languages, exactly.
<nicferrier> so it doesn't help this problem.  [20:03]
<fxiny> "I am willing to consider a small number of functions for inclusion..."
	:)
<bitonic> well, there could be a bignum implementation in 'cl
<nicferrier> there isn't.
<bitonic> yeah but there is no barrier to do that
<Yuuhi> there is one in calc
<nicferrier> someone might have written one somewhere.
<branduren> I have some troubles getting sml-mode to work. When I try to
	    activate the sml-mode, I get the error: "Cannot open load file"
	    "sml-mode"... any suggestions ?
<nicferrier> I'd be happy to use calc's.  [20:04]
<wbooze> ,yow
<fsbot> I'm GLAD I remembered to XEROX all my UNDERSHIRTS!!
<scri> branduren: make sure the file's on in your load-path  [20:06]
<nicferrier> oh wow. calc might be just what I need. why didn't I think of it
	     before?  [20:08]
<scri> too obvious  [20:09]
<scri> so you're producing a time stamp from a hex number?  [20:11]
<nicferrier> from a 64 bit integer representing ms since epoch
<nicferrier> emacs does time in seconds since epoch in 2 integers.
<roobarb> Aiming at elisp programming folk: how do you guys navigate elisp? Do
	  you generate tags to browse defun entries and all?
<nicferrier> I just use imenu  [20:12]
<nicferrier> and C-h f
<scri> i use tags and C-s
<roobarb> nicferrier: C-h f as in describe-function ?  [20:13]
<scri> in the source files
<nicferrier> roobarb: yes.
<scri> it links you to the source
<taylanub> ,unicode describe wtf
<fsbot> I heard UniCode is [0] at
	http://www.emacswiki.org/cgi-bin/wiki.pl?UniCode
<fsbot> [1] some character set with a lot of characters in it (there's 32-bit
	unicode), ..[Type ,more]
<roobarb> scri: yes. i noticed that. Very handy.   [20:14]
<taylanub> ,unicode0describe wtf
<fsbot> taylanub, Are you sure that you felt depressed? 
<taylanub> arr
<taylanub> ,unicode-describe wtf
<fsbot> #x0077: LATIN SMALL LETTER W
<nicferrier> don't start this again taylanub.
<taylanub> nicferrier: i was just trying to figure out if the "PILE OF POO"
	   above was real :|
<nicferrier> it is. it's on the web. there are pictures because few fonts
	     support it.  [20:15]
<taylanub> i guess it was, then, i thought fsbot would make something up
* taylanub googles "unicode pile of poo"
<roobarb> scri: sorry, do you mean tags generate links to the code? I saw the
	  links from describe-function  [20:16]
<scri> describe-function links to the source. tags are generated for indexing
									  [20:17]
<nicferrier> calc's introduction is hilarious.
<scri> i imagine the describe-function links are implemented with TAGS files,
       too  [20:18]
<nicferrier> scri: don't think so.
<scri> oh yeah, there's no file there by default  [20:19]
<roobarb> I also wonder how the links in info files are encoded/generated. I
	  didn't get around to look at the source info files yet
<scri> do you know how it works?
<nicferrier> functions are objects in elisp stored in obarrays. there's a load
	     of introspection stuff to search them and query them. you can look
	     up the contents of an obarray by name, complete from the obarray
	     etc...
<nicferrier> ,wikidoc
<fsbot> [google]    http://www.emacswiki.org/emacs-es/wikidoc.el
<fsbot> http://emacswiki.org/wiki/NicFerrier
<scri> roobarb: there's a way to look at the raw text of info files, i think
       it's just one key
<nicferrier> scri: see that ^^^ for a simple introduction to how introspection
	     works  [20:20]
<nicferrier> TAGS files are static and need constant rebuilding. the
	     introspection stuff just works. one of the ways elisp is first
	     class in emacs.
<nicferrier> anyone know how I tell calc about hex numbers?  [20:21]
<scri> hey neato
<wbooze> hex numbers are not about calc
<wbooze> those are generic
<wbooze> #x25A0 for example  [20:22]
<nicferrier> the goddamn help in calc was written by a genius.  [20:23]
<branduren> scri: thanks, I got it working  [20:27]
<roobarb> scri: info uses tag tables - looks similar to tags  [20:28]
<nicferrier> I can divide a number in calc from elisp. so I guess if I can AND
	     and shift I should be able to make something that works.
									  [20:30]
<scri> roobarb: tags tables are just where tags come from  [20:33]
<scri> makes sense that info uses them, since it's very simple
<nicferrier> gah.  I can't get and to work.  [20:39]
<nicferrier> batsov!
	     http://www.masteringemacs.org/articles/2012/04/25/fun-emacs-calc/
									  [20:40]
<fxiny> calc manual is huge
<nicferrier> and not for beginners.  [20:41]
<fxiny> http://www.math.utah.edu/docs/info/calc_1.html
<fxiny> impressive   [20:42]
<nicferrier> this is the frustrating thing about emacs... it's got EVERYTHING
	     just sometimes not in a way that's easy to get to.
<youlysses> nicferrier: Well, that's because it's got "EVERYTHING". :-P  [20:43]
<fxiny> emacs is the closest thing to the prime radiant 
<nicferrier> I'm getting really frustrated that I'm not paid to do this full
	     time
<nicferrier> I think it's a conspiracy somehow by big companies to prevent
	     advancement because widespread usage of emacs would certainly be a
	     massive advance over everybody using ruby and javascript.
									  [20:44]
<fxiny> true , they use words like "ancient" to describe emacs   [20:45]
<youlysses> nicferrier: Have you tried doing a crowdsource thing?  I'd
	    definitley though a 50 your way (if I had more, I'd give more,
	    believe me... you showed me the "light" yesterday).
<nicferrier> well, there's a donate button on my blog.  [20:46]
<scri> lol
<nicferrier> don't feel you have to though
<scri> to play with calc?
<youlysses> nicferrier: That might help you with one-offs, but I can't see that
	    working to pay you long-term, tbh ... 
<scri> no seriously, what are you working on  [20:47]
<nicferrier> sure. I want to do a startup. but it's hard work getting there.
<nicferrier> scri: elnode, marmalade, loads of other apps built on
	     elnode... basically making emacs a decent environment for everyday
	     webapp (and other) development.  [20:48]
<nicferrier> what I'm doing now is trying to get the mongo db driver to work
	     with datetime types.
<nicferrier> because the original author didn't implement that bit.
<scri> ah, found your blog
<nicferrier> I'm doing it so I can convert marmalade-repo to elnode (elisp) from
	     it's current node(javascript) implementation  [20:49]
<nicferrier> idk. there's a ton of stuff that feels possible right now. even
	     improving the ui a lot seems achievable  [20:50]
<youlysses> nicferrier: I'm just saying, if you get enough hype, and an
	    "exciting" enough videos, I think you could easily have a sucessful
	    crowd-funded project (depending on what your set price is). :-P
<youlysses> nicferrier: Yeah, I'd try to get the system as polished as possible
	    before you'd attempt anything of the sort.  [20:51]
<nicferrier> anything of what sort? crowd funding?  [20:52]
<youlysses> nicferrier: Crowdfunding and/or attempting a startup. :-)
<nicferrier> yeah. I'm just moaning. there's a bunch of people here I think who
	     could turn emacs into the most awesome programming environment ever
	     (not just me) and presumably we're talking to people about it and
	     no one's given any of us a big bag of money yet  [20:53]
<nicferrier> I don't think it would even take that long.  [20:55]
<youlysses> nicferrier: I think you'll get there, I mean it really is kind-of
	    "innovative" (... I hate using that term almost as much as
	    "revolutionary" ... but it's applicable.) :-)  [20:56]
<nicferrier> yeah. it's just frustrating to not easily get paid for it. but
	     revolutions are always like this.
<nicferrier> it's sounds mad. it's not.  [20:57]
<nicferrier> hum (calc-eval "and(16#ff00, 16#ffff)") works
<nicferrier> but (calc-eval "and((16#012CC39FA040 / 1000), 16#ffff0000)") does
	     not
<roobarb> hi. Is there a nice pre-made function to tell me the number of "\n" in
	  an elisp string?  [20:58]
<nicferrier> don't think so roobarb  [20:59]
<roobarb> nicferrier: would you go for string-match for that?  [21:00]
<nicferrier> roobarb: would this work (- (length (split-string "\nhello\nthere
	     everyone\nwhat's up\n" "\n")) 1)
<Mon_Ouie> (count ?\n "foo\nbar\n") ?  [21:01]
<roobarb> nicferrier: it works. thanks!  [21:02]
<nicferrier> oh I didn't know about count!  [21:04]
<damd> where is `count' defined?  [21:06]
<scri> damd: cl-seq.el  [21:07]
<damd> why don't they just fix emacs already
<nicferrier> in what way?
<scri> do C-h f to see
<scri> trolling, damd ?  [21:08]
<youlysses>  nicferrier: Well, "stay strong", you'll get there. :-)  [21:09]
* youlysses is heading to class o/
<nicferrier> youlysses: thanks dude
<damd> scri: half-joking
<roobarb> nicferrier: thanks for mentioning 'count'. I find stange in elisp,
	  compared to python that names are all in a global space and not
	  arranged in packages. How am I to guess which functions operate on
	  windows, buffers and strings?  [21:10]
<damd> but i have lisp function names that are literally 50 characters long
<damd> in org, if i remember correctly
<damd> and then there's `count', simply named and everyone gets it
<damd> i don't know what i'm getting at here
<scri> ahaha
<damd> i think i'm saying NAMESPACES Y U NO EXIST IN EMACS  [21:11]
<youlysses> nicferrier: Np. I wouldn't say it, if I didn't really mean it/think
	    it's going to happen. :-)
<nicferrier> you can do namespaces in elisp
<nicferrier> ,namespaces
<fsbot> hmm, namespaces is for skeeto's "fakespaces", see
	https://github.com/skeeto/elisp-fakespace/
<nicferrier> you see? you can do EVERYTHING
<damd> nicferrier: still doesn't exist in _emacs_
<nicferrier> damd: sure. I don't think much of the organizing principle of
	     namespaces personally.  [21:12]
<roobarb> nicferrier: cool
<damd> nicferrier: i don't want them for organizing, i want them to avoid naming
       conflicts which are now avoided by prefixing _everything_ with the
       package name  [21:13]
<nicferrier> what I think is a solution is a better index. I would like to index
	     ALL elisp and provide things like where is this name used? and what
	     does this function use?
<nicferrier> damd: well, if you want them you can have them. just use skeeto?
	     what's stopping you? do you need it packaged? I can do that for you
<roobarb> nicferrier: At least you can exclude a few hundred functions that you
	  dont have to read about when there's a name clash. 
<roobarb> nicferrier: sounds like what's available for C in cscope   [21:14]
<damd> nicferrier: nothing is stopping _me_ but when i hack on emacs itself, i
       can't use those hacks
<nicferrier> damd: when you hack on core stuff like org or calc? sure.
<nicferrier> I guess it would be easy enough to add to elpa.
<nicferrier> skeeto is a cool guy, seems quite happy to contribute stuff.
									  [21:15]
<roobarb> ,elpa
<fsbot> elpa is, like, [0] the Emacs Lisp Package Archive, the default software
	repository for package.el the elisp package manager officially adopted
	for inclusion in gnu emacs 24 (distributes only free software) ..[Type
	,more]
<roobarb> thank you fsbot, you are very helpful
<roobarb> ,more  [21:16]
<fsbot> [1] initialized by the function package-initialize, which is normally
	ran after user-init-file is loaded, but before after-init-hook is ran.,
<fsbot> [2] http://emacswiki.org/emacs/ELPA for details.
<roobarb> ,fsbot  [21:17]
<fsbot> [->] I heard erbot is [0] Here I am, brain the size of a planet, and
	they use me to store trivia.
<fsbot> [1] an ERC (i.e. Emacs) based IRC infobot
	<http://emacswiki.org/wiki/ErBot>,
	<http://sv.nongnu.org/projects/erbot>, ..[Type ,more]
<damd> please
<scri> huh?  [21:18]
<scri> ,erbot
<fsbot> From memory, erbot is [0] Here I am, brain the size of a planet, and
	they use me to store trivia.
<fsbot> [1] an ERC (i.e. Emacs) based IRC infobot
	<http://emacswiki.org/wiki/ErBot>,
	<http://sv.nongnu.org/projects/erbot>, ..[Type ,more]
<scri> who are you really fsbot
<scri> ,singularity  [21:19]
<fsbot> try:  EndgameSingularity IntelligentLifeSingularity vingesingularity
<scri> dont be coy
<damd> ,jordigh  [21:25]
<fsbot> JordiGH is [0] a man whose name was writ in water
<fsbot> [1] a master debater,
<fsbot> [2] a n00b,
<fsbot> [3] the Mexican inquisition,
<fsbot> [4] running a level 1 diagnostic,
<fsbot> [5] can do and does about a thousand things and a few more, ..[Type
	,more]
<damd> ,more
<fsbot> [6] our resident Crazy Mexican,
<fsbot> [7] somewhat of a freetard, but we love him anyway,
<fsbot> [8] president of git haters anonymous,
<fsbot> [9] the fail whale, ..[Type ,more]
<damd> ,more  [21:26]
<fsbot> [10] a sophisticated sex robot sent back in time to change the future
	for one lucky lady,
<fsbot> [11] The Git,
<fsbot> [12] A DELETIONIST,
<fsbot> [13] behind 7 proxies
<nicferrier> can't you talk to fsbot privately?
<damd> i'm sorry for disturbing the conversation
<nicferrier> :-)  [21:27]
<taylanub> LOL Jordi  [21:28]
<nicferrier> ok. I've got to the point where I'm obviously doing something
	     really stupid.  [21:36]
<nicferrier> done it.  [21:37]
*** Boney_ (~paul@124-148-162-17.dyn.iinet.net.au) is now known as Boney  [21:40]
<nicferrier> damn. calc-eval produces some wierd formatted number  [22:15]
<nicferrier> learning way more about calc than I wanted to.  [22:36]
<ravster> Hello everyone  [22:54]
* nicferrier waves at ravster  [22:56]
<ijp> nicferrier: doesn't calc have elisp bignum support?
<nicferrier> ijp: yeah. it does. it's awesome, just hard to use.  [22:57]
<ravster> How do I set tabs when using a file with the php extension? I'm trying
	  to find this info on the emacswiki, but its difficult to find.
* ravster waves back at nicferrier 
<nicferrier> ijp: I'm getting there, one last problem which is shifting the high
	     byte)
<rolando> calc is pretty nice  [22:59]
<axrfnu> hi all. i am having some trouble with loading some keybindings for an
	 emacs addon (mu4e). please assume this paste:
	 http://paste.lisp.org/display/131203. my question is, why the kbd
	 sequences are not working directly after emacs startup but only after i
	 evaluate the whole buffer containing the kbd sequences? i know the file
	 is acually evaluated at emacs startup time because i can set arbitrary
	 errors and emacs will throw an error
<rolando> it's a shame that `defmath' doesn't support cl-loop  [23:00]
<rolando> ravster: you mean indent php files using tabs?  [23:01]
<ijp> cl-loop is an abomination
<rolando> ijp: it's not that bad
<ijp> nicferrier: I should have read up more on the scrollback before answering,
      I see it was already pointed out
<axrfnu> somebody a pointer what could possibly be wrong? additionally, i am not
	 sure if lambda with interactive is the right way to pass an argument to
	 a defun in a kbd macro
<ravster> rolando: yup
<rolando> I think the fsbot knows something about it, but basically you have to
	  put something in php-mode-hook  [23:02]
<rolando> ,tabs
<fsbot> I heard tabs is [0] check indent-tabs-mode
<fsbot> [1] see `tab-stop-list' and `tab-width',
<fsbot> [2] Try C-q TAB to force a literal tab,
<fsbot> [3] ask me about tab,
<fsbot> [4] ask me about whitespace,
<fsbot> [5] ask me about notabs,
<fsbot> [6] M-x (un)tabify, ..[Type ,more]
<legumbre> axrfnu: what does C-h k C-c x w say?
<rolando> ,tab
<fsbot> tab is, like, [0] TAB
<fsbot> [1] C-i,
<fsbot> [2] (string-equal "\t" (kbd "TAB")),
<nicferrier> ijp: it's been a massive struggle, there is very little clear info
	     on how to get things in and out of calc. I am still struggling with
	     how to get stuff out.
<fsbot> [3] see ,tabs
<rolando> ravster: yeah, that wasn't really useful
<rolando> give a minute and I'll tell what you need to add to .emacs  [23:03]
<ravster> rolando: thanks
<ravster> or a pointer to a webpage that explains this would be great too.
<axrfnu> legumbre: right after startup C-c h k tells me the function is properly
	 bound
<cluck> :)  [23:04]
<axrfnu> legumbre: C-c x w runs the command (lambda nil (interactive)
<axrfnu> (tw/mu4e-load-profile "work")), which is an interactive Lisp function.
<rolando> ravster: try to eval this in the php buffer (setq indent-tabs-mode t)
									  [23:05]
<rolando> and see if it works
<rolando> ,dv indent-tabs-mode
<fsbot> *Indentation can insert tabs if this is non-nil.
<fsbot> You can customize this variable.
<axrfnu> oh my, i just seem to have spotted an error. i'll test
<rolando> ravster: to eval that code press M-:  [23:06]
<axrfnu> legumbre: okay, figured it out. it was my fault :( seems i got a bit
	 blind by staring too much at the code...  [23:07]
<legumbre> axrfnu: it happens :-)
<axrfnu> the expand-file-name without proper base directory was the problem
<ravster> rolando: will do. awesome. thanks.
<nicferrier> https://gist.github.com/3466870 this will do!!!! YAY!  [23:09]
<nicferrier> thanks EVERYONE who helped. that was REALLY hard work.  [23:10]
<rolando> ravster: if that works you need to add the following to your .emacs
	  file:  [23:12]
<rolando> (require 'php-mode)
<rolando> (add-hook 'php-mode-hook (lambda () (setq indent-tabs-mode t)))
<axrfnu> one more question: what would be a recommended way to execute a bunch
	 of setqs to alter emacs behaviour programmatically? currently i (load)
	 alternating files, which seems clumsy. are there better ways?
									  [23:15]
<Scriptor> argh, writing php in emacs is messing with my head  [23:24]
<Scriptor> I think I'll stick with lisp for emacs for now
<djcb> axrfnu: pack them in a function  [23:25]
<Buglouse> Where is the difference between '\t' and '<tab>' for keymap values
	   explained?   [23:27]
<Buglouse> /<tab>/[tab]/
<Buglouse> char syntax  [23:31]
<Buglouse> Not explained as to why these two forms are uniquely bound in a
	   keymap.  [23:33]
<Buglouse> '<...>' is part of function-key-map   [23:37]
<axrfnu> djcb: hmm, could do that, yes  [23:40]
<daveo> Scriptor: elnode  [23:48]

[Sun Aug 26 2012]
<fasta> Can Emacs open a remote url from the command line?  [00:02]
<fasta> I.e. emacs 'http://foobar.com/bar' which will then work.
<damd> can emacs open remote urls at all?
<kodein> url-retrieve
<damd> well, okay, but i meant .. never mind  [00:03]
<rolando> damd: I guess you could use the --eval flag and pass the URL to
	  url-retrieve that way  [00:05]
<kodein> extending tramp to be able to (ro) open stuff over http shouldn't be too hard, really
											      [00:07]
<Scriptor> daveo: hmm?  [00:08]
<Scriptor> oh, nah it's not for web dev...per se
<fasta> kodein: I have no url-retrieve.  [00:12]
<Scriptor> is there a command like C-x f but that searches through a list of recently opened files
	   (including from previous sessions)
<kodein> fasta: it's part of the url package.
<fasta> kodein: one require 'url later, and no.  [00:13]
<fasta> kodein: ok, I see it now.
<fasta> kodein: it's not an interactive command.  [00:14]
<kodein> it's not an interactive function, no.
<fxiny> Scriptor: recentf . builtin  [00:16]
<fasta> kodein: how do I create a value of type URL?  [00:20]
<fasta> kodein: as expected by browse-url-emacs, which is a closer function.  [00:21]
<fxiny> Scriptor: and/or ido recentf-ido-find-file  [00:22]
<kodein> isn't it just a string?  [00:23]
<fxiny> which grabs not so recent files from previous sessions
<fasta> kodein: (browse-url-emacs "http://google.com") ; seems to say no  [00:27]
<kodein> well, I don't know what to say other than that it works for me.  [00:28]
<fasta> kodein: which Emacs version?  [00:29]
<fasta> GNU Emacs 24.1.50.1 (x86_64-unknown-linux-gnu, GTK+ Version 2.24.10)  [00:30]
<fasta> I am running this one.
<kodein> Tried it in 24.1 and 23.2
<kodein> works in both
<fasta> kodein: I get a backtrace.  [00:31]
<kodein> Tried 22.3 now too. works.
<fasta> kodein:  http://paste.kde.org/539432/  [00:32]
<kodein> 19.34 is too old, doesn't work out of the box there. haven't got any 20 or 21 installed at
	 the moment
<fxiny> try http://google.com
<damd> who the fuck runs emacs 19?
<fasta> fxiny: ?  [00:33]
<kodein> damd: well, we have a lot of old phogeys in the computer club
*** rajeshsr_ (~rajeshsr@101.62.107.222) is now known as rajeshsr
<fxiny> damd: 1994
<taylanub> why do so many use 24.1.50 ?  1.1 is release, what is 1.50 ?  [00:34]
<fxiny> i use 24.2.50 ;P
<kodein> some trunk build?
<forcer> .50 is development, yep  [00:35]
<damd> GNU Emacs 24.1.1 (i386-mingw-nt6.1.7601) of 2012-06-10 on MARVIN
<kodein> hmm, my init file might have been to modern for 19.34, as it coredumped on exit...
<taylanub> forcer: oh, there always is a .50 ?
<fasta> I will get a new Emacs.
<fxiny> i belong to the lazy tribe : http://emacs.naquadah.org/
<forcer> taylanub: I'm not sure, but every time I remember in the last 10ish years I used a
	 self-compiled Emacs, it had some A.B.50.C version number.  [00:36]
<taylanub> funny
<fasta> fxiny: does that also work on Ubuntu?
<fxiny> fasta: never heard of such a distro ;)  [00:37]
<fxiny> but yes , thee are repos for ubu 
<fasta> Why is a git update 130MB for a few months?  [00:38]
<fasta> (of the Emacs source code)
<fasta> It seems someone is misusing git.
<nullie> they are just very productive coders  [00:39]
<forcer> fasta: Emacs uses bzr, you know. <.<
<fxiny> i had to play a trick to get w3m opening links in gnus , the oldest of the tricks : i
	compiled itr ;)  [00:40]
<taylanub> fasta: the upstream repo is bzr ...
<fasta> forcer: I am using some cloned repo.
<fasta> forcer: because bzr is ... meh.
<forcer> orly.
<fxiny> fasta: found it ?  [00:43]
<fasta> fxiny: yes
<fasta> fxiny: but I already wrote the scripts to build one myself.  [00:44]
<fasta> fxiny: so, I have processor specific optimizations!!! 
<fasta> I am not even sure whether Emacs makes use of those :)
<fxiny> some 24 gentoosmited then 
<ijp> rudybot: quote  [00:46]
<rudybot> ijp: Let's have an obsession with asian stuff.
<taylanub> i'm with rudybot
<ijp> ,slap taylanub
* fsbot slaps taylanub with a fish.
<fxiny> noodle ? ;P  [00:47]
<ijp> let's make an emacs parody of living da vida loca
<fxiny> M-x shifting through the lenses
<fasta> fxiny: no, but it appears that Emacs is slightly faster when I compile it myself.  [00:48]
<fasta> fxiny: and I also compile with specific options which are likely different from what I get
	by default.
<fds> But, if you add up all those “slightly fasters” do you ever get back the time you spent
      compiling it? :-P
<taylanub> fasta: join the guile project and help with native/JIT compilation  [00:49]
<fasta> fds: it's also a state of mind.
<fasta> fds: meaning that I cannot stand slow tools.
<fasta> fds: and compiling a new Emacs takes in principle only 5 seconds.  [00:50]
<fasta> fds: the actual compile time is larger, but I can get a cup of tea :)
<fxiny> spiced i bet
<ijp> fds: in other words, no, he probably can't, but likes to "feel" he does  [00:51]
<ijp> probably a gentoo user
<fxiny> heheh
<fasta> ijp: not really.
<fds> ijp: :-)
<fds> fasta: It's okay, everyone needs a hobby.
<fasta> I only compile what I have to.
<fasta> I think the GTK+ backend was the original reason for compiling Emacs.  [00:52]
<fasta> I.e. that it was crashing my Emacs.
<fasta> So, I compile without.
<fasta> So, if that has been resolved now, I could theoretically do without, I suppose.
<taylanub> terminal clients crash the daemon too :P
<fxiny> anyway , 24 is pretty good   [00:54]
<fxiny> i'm having a nice life with the packaging system  [00:55]
<fasta> fxiny: yes, but what does 'obsolete' mean?  [00:56]
<fasta> fxiny: I know the word, but I don't see why an obsolete package would be listed.
<fasta> Because, it is... obsolete.
<fxiny> fasta: it means you forgetting the main optimization : newest version avaiable  [00:57]
<fasta> fxiny: also, try to install a color-theme ;)
<fasta> GNU Emacs 24.2.50.1  [00:58]
<fasta> Am I now cool again? :P
<fxiny> i did my "optimization" trashing the original solarized theme
<fxiny> which technically speaking is not a theme but a palette  [00:59]
<taylanub> for some reason, emacsclient -c totally hung emacs  [01:00]
<taylanub> from inside an eterm .. don't think it should break  [01:01]
<fxiny> and i spend half of my days following emacswiki latest : keyboard macro just arrived :P
<fxiny> taylanub: never happened to me
<fxiny> inside an eterm ?
<fxiny> ahhhh
<fxiny> no idea
<taylanub> SIGINT and SIGTERM wouldn't kill the daemon,   [01:02]
<taylanub> i sent a SIGSEGV :P
<fxiny> heheh
*** roobarb (~user@78-86-87-67.zone2.bethere.co.uk) is now known as roobarb1
*** roobarb1 (~user@78-86-87-67.zone2.bethere.co.uk) has set the topic for #emacs: ""An .emacs of a
    thousand lines begins with a single form" -- Lao Tzu | Emacs mugs at http://shop.fsf.org/ |
    http://emacswiki.org/EmacsChannelFaq | http://paste.lisp.org/ | No public logging! What happens
    in #emacs stays in #emacs | Sexism will not be tolerated. Yes, I'm looking at you!"  [01:05]
<fxiny> i want to read epubs in a splitted frame  [01:08]
<roobarb1> ,epubs
<fsbot> I think SUS is [0] short for Stupid User Syndrome
<fsbot> [1] the Single Unix Standard, a.k.a. POSIX <http://www.opengroup.org/onlinepubs/9699919799/>
<wbooze> ,yow  [01:09]
<fsbot> How's the wife?  Is she at home enjoying capitalism?
<roobarb1>  fxiny: What is epubs? fsbot doesn't seem to know  [01:10]
<fxiny> roobarb1: epub books 
<ivan-kanis> fxiny: I am interested about your trick to open gnus from w3m  [01:11]
<fxiny> ivan-kanis: squeeze ?
<ivan-kanis> fxiny: care to publish the code somewhere?
<ivan-kanis> fxiny: you mean it's a Debian thing?  [01:12]
<ijp> ,homie-yow
<fsbot> /me goes systematically buffer overflowing!
<fsbot> lol
<fxiny> ivan-kanis: is not a debian fault  [01:13]
<Frozenlo`> Grrrr Ubuntu is messing with `C-M-arrows' (backward-sexp). Is there a way to make emacs
	    the sole ruler of the keyboard?  [01:14]
*** Frozenlo` (~user@cable-15.246.173-182.electronicbox.net) is now known as Frozenlock
<fxiny> ivan-kanis: installing form snapshots gave me some trouble with flim
<taylanub> Frozenlock: don't use arrow keys
<fxiny> and w3m refused to open links in gnus
<Buglouse> I do not know what is the cause of this but this, http://slexy.org/view/s2fwuBLlBU, which
	   uses `call-process-region' to send to shell-command for clipboard functionality does not
	   operate within the 104-204 region; it works in any region smaller or larger than
	   this.. The kill-ring does fill regardless
<Frozenlock> taylanub: So I should rebind these navigation functions?
<Buglouse> /functionality/functionality,/
<taylanub> Frozenlock: C-M-f/b  [01:15]
<Frozenlock> Oh!
<Frozenlock> Thanks :)
<taylanub> Frozenlock: C-f C-b
<taylanub> C-n C-p
<taylanub> seriously, how can you not use them :P
<fxiny> i installed wheeze flim version on squeeze ,removed w3m-el and last i compiled emacs-w3m
	from cvs  [01:16]
<fxiny> it works like a charm
<Frozenlock> Incidently I activated no-easy-key yesterday, so yeah I'm learning to use them.
<taylanub> you don't need to activate anything ...
<taylanub>  /query fsbot bootcamp :P
<fxiny> i never liked testing nor sid , i always run stable "my way"  [01:17]
<Frozenlock> Yes; no-easy-key will disable the arrows in various modes. 
<Frozenlock> Great to kill old habits
<taylanub> Frozenlock: hehe, i guess such a thing could be used to break habits
<taylanub> Frozenlock: are you a touch-typist ?
<Frozenlock> I would say mostly. I never look the keyboard, but I don't have an amazing speed
											      [01:18]
<taylanub> then still you shouldn't really need such a thing.  the need to move your hands away from
	   the home row will be your sign
<Frozenlock> The bumps on f and j help me to come back at the right place ;)
<Buglouse> /104-204/99-205  [01:19]
<fxiny> i sticked some plastic things out from f and j
<fxiny> much better
<fxiny> i have the feeling of f and j long "before" landing on mars  [01:20]
<wgreenhouse> Frozenlock: this is somewhat heretical, but arrow keys in Emacs aren't so bad; in
	      fact, one of the things that drew me to Emacs at the time I was really getting into
	      gnu/linux was that they actually worked.  and the multiple redundancy of having both
	      the arrows and the C-{n,p,b,f} family is handy  [01:24]
<ivan-kanis> fxiny: oh I thought you found a way to open gnus with a html mail link in w3m
<fxiny> how many nanosecods of your brain cells life have you wasted trying to feel such small bumps
	?
<Frozenlock> wgreenhouse: Indeed. And in addition I don't think there's a replacement key for every
	     arrow usage in org-mode.  [01:25]
<wgreenhouse> true, although once I read (info "(org) TTY keys") I realized the situation there
	      wasn't as bad as I thought
<ivan-kanis> I have ; mapped to Control and / to meta  [01:26]
<fxiny> ivan-kanis: can't see many html mail around here , but that would be nice !
<Frozenlock> Ewww... I would not use org-mode on that !
<wgreenhouse> fxiny, ivan-kanis: are you guys talking about internal links in html mails?  [01:27]
<Buglouse> It keeps decreasing in the valid range for copy ..  [01:28]
<fxiny> wgreenhouse: ivan-kanis is on html mail . i want w3m opening all links  [01:29]
<fasta> I just love it when a new version of Emacs solves a problem! :)
<wgreenhouse> fxiny: I just use (setq browse-url-browser-function 'w3m-goto-url-new-session) which
	      works fine  [01:30]
<wgreenhouse>  
<wgreenhouse> any link opened anywhere in Emacs opens in its own w3m tab/buffer
<fxiny> wgreenhouse: i'm used to numpad so arrow keys working in emacs are very handy
<wgreenhouse> the one edge case that I can't figure out a good solution to is internal (anchor)
	      links within vast HTML mail newsletters in Gnus.  none of the Gnus renderers seem to
	      want to follow that type of link, so I end up just isearch-forward'ing to the item
											      [01:32]
<fxiny> wgreenhouse: my problem with link was : gnus/emacswiki/link flim problem with emacs 24
<wgreenhouse> I'm not familiar with the problem, but I am using Emacs 24
<wgreenhouse> and my invocation above seems to work fine  [01:33]
<fxiny> because you are not on squeeze , i bet
<wgreenhouse> nah, wheezy :)
<fxiny> http://lists.gnu.org/archive/html/bug-gnu-emacs/2011-12/msg00525.html
<wgreenhouse> and emacs 24.1 from tarball
<ivan-kanis> wgreenhouse: I was talking about something else, but it doesn't matter
<fxiny> wgreenhouse: heheh : i'm using wheeze flim :)  [01:34]
<wgreenhouse> yeah, I'm not using Debian to handle any of Emacs's packaging at the moment
<fxiny> still i hda to compile emacs-w3m from cvs
<wgreenhouse> it's a self-compiled emacs
<fxiny> s/hda/had
<wgreenhouse> thanks for the description
<fxiny> wgreenhouse: i know what you mean : i never liked the lisp/mess in etc ...  [01:35]
<wgreenhouse> fxiny: it's a relatively newly installed system here, and I knew in advance that
	      Debian elisp package dependencies would be a PITA if I built my own emacs24.  also I
	      wanted to try using ELPA for as much as possible  [01:36]
<fxiny> wgreenhouse: 24.1 ? heheh i beat testing -> 24.2 ;P
<roobarb1> ivan-kanis: I was looking at using gnus just today and saw something related to html in
	   email: http://norman.walsh.name/2011/03/10/w3m I don't have w3m to try it though and it's
	   a hassle to get it for window
<wgreenhouse> ,,dv mm-text-html-renderer  [01:37]
<fsbot> Render of HTML contents.
<fsbot> It is one of defined renderer types, or a rendering function.
<fsbot> The defined renderer types are:
<fsbot> `w3m'  : use emacs-w3m;
<fsbot> `w3m-standalone': use w3m;
<fsbot> `links': use links;
<fsbot> `lynx' : use lynx; ..[Type ,more]
<wgreenhouse> ,more
<fsbot> `w3'   : use Emacs/W3;  [01:38]
<fsbot> `html2text' : use html2text;
<fsbot> nil    : use external viewer (default web browser).
<fsbot> You can customize this variable.
<fsbot> Defined in `/usr/share/emacs/23.1/lisp/gnus/mm-decode.elc'.
<wgreenhouse> ^ that is the setting Gnus uses to decide how to present html mails, btw
<fxiny> wgreenhouse: i have a function for that : gnu , melpa and marmalade for 23 and marmalade
	only for 24 . so i can use both 23 and 24 with the same .emacs
<wgreenhouse> nice.  [01:39]
<fxiny> i'm looking into the last i forgot the name
<fxiny> nice is emacs , it can do pretty clever things 
<wgreenhouse> I haven't really kept 23 around anywhere, there is really nothing about it that I miss
<wgreenhouse> yeah, that is a clever configuration
<fxiny> i don't use 23 anymore ,  but i can swith to it just in case i get some 24 version borked
											      [01:40]
<fxiny> switch*
<ivan-kanis> ,winpack is http://ivan.kanis.fr/winpack.html  [01:41]
<fsbot> created.
<ivan-kanis> roobarb1: you'll find a w3m that works in winpack  [01:42]
<wgreenhouse> recent Gnusae also have a built-in renderer, btw  [01:44]
<roobarb1> ivan-kanis: I notice an outdated emacs in winpack!
<roobarb1> ;-)
<fxiny> version 18 ? :P  [01:45]
<roobarb1> version 23
<ijp> a lot of people are still using emacs 23  [01:46]
<fxiny> ivan-kanis: where are the unix utilities ?
<fxiny> i meant gnu  [01:47]
<nicferrier> http://www.emacswiki.org/emacs/AdvancedDeskCalculator#toc4 - updated the calc page with
	     my example of how to use it from elisp.  [01:48]
<fxiny> gone straigh into my org-mode : i have reached 62308 lines ! ;)  [01:51]
<fxiny> and still is a txt file , but yes : emacs is sooo ancient ;)
<fxiny> f* eggheads
<wgreenhouse> do you practice the "one giant notes.org file" style?
<wgreenhouse> what's wrong with eggheads?  [01:52]
<ijp> wgreenhouse: at 62000 lines it sounds more like append-only notes.org style
<ijp> eventually he's going to need a spin off org file to manage that org file
<wgreenhouse> probably append using remember/capture and view using sparse tree or agenda views
											      [01:53]
<fxiny> wgreenhouse: more then that : my organizer.org is just the octopus head 
*** olle (~hernan@ip2.c6.obr192.cust.comxnet.dk) is now known as haelkfwjdf  [01:54]
<fxiny> not the average notes file but a GTD   [01:55]
<ijp> ,homie-yow
<fsbot> a new suit for bank steel!
<fsbot> lol
<ijp> fxiny: I mentioned this before, but have you considered just doing less stuff?  [01:56]
<nicferrier> someone else can do the webscale joke here http://www.emacswiki.org/emacs/MongoDb
											      [01:57]
<fxiny> org-mode is beautiful , i can archive a sub tree with a C-c C-x C-s
<fxiny> i can open org or emacs card in a sec
<fxiny> i can search i can set deadlines alarma and much more  [01:58]
<fxiny> alarm*
<fxiny> ijp: why doing less stuff ? i can have the choice of doing what i feel  [01:59]
<ijp> because if you do less stuff, you don't need as big an infrastructure to manage it
<fxiny> ijp: size is not a problem . i have swish-e indexing my org dir   [02:03]
<nicferrier> elnode and databases http://www.emacswiki.org/emacs/Elnode#toc8  [02:05]
<nicferrier> I'd quite like a "tell me about wiki page edits" here.
<fxiny> i mean : if you google for something where you put all data ? in your brain cells ? i found
	org-mode the perfect tool for that 
<youlysses> Is the non-emacs version of info a seperate app, or is it elisp running outside of
	    emacs?  [02:06]
<fxiny> like that : when i first read about  elnode vian gnus daemon and w3m . i wanted to check if
	it was possible letting elnode feeding my swish-e to w3m instead of (like i do now) apache
	to firefox , i opened a todo for it , i already collected some data and so i can go over it
	again in the future  [02:08]
<nicferrier> there would be a lot of interesting things with an elnode proxy server  [02:09]
<fxiny> and not because of some stupid hate for firefox or apache or html but because i'm  better
	off by readinbg it in emacs
<ijp> rudybot: quote
<rudybot> ijp: let's talk about chris done's dot emacs file
<ijp> let's not  [02:10]
<fxiny> same for reading epubs : i need to take breaks 
<Expez> Auto-complete takes so long to make its suggestions that I'm done writing the words that are
	too long to write before it offers any suggestions. If I pause mid-way for like 3 seconds it
	will offer up the right suggestions. Anything I can do to make it hurry up?  [02:11]
<ijp> fxiny: I used to be like that, and still am to a point. I have large file sfull of stuff that
      "I totally need to do/read some time". But the fact is, most of it, I will never read again
<ijp> and that's okay
<Expez> ac-delay is set to 0.1, but I tried changing it to 0 without noticing a difference.
<ijp> so, instead of making those notes and just have them stare back at me, making me feel guilty
      about them, I try not to make them in the first place  [02:12]
<Expez> I've also bytecompiled AC
<ijp> much healthier that way
<ijp> fxiny: you are not me, I am not you, and you can do what you like, just me £0.02
<ijp> rudybot: I am not an org file  [02:14]
<rudybot> ijp: osx ships with org mode, what more do you want? :)
<fxiny> ijp: i think that in the end we are both trying to be free , we are not hoarders , we like
	being informed :)
<fxiny> it does not matter if some stuff goes into REJECT POSTPONED or anything like that , because
	that means we found something better to do  [02:16]
<fxiny> but yes , this is such an ancient editor : f* eggheads !  [02:17]
<fxiny> of course i was using emacs long before org-mode came along , seen the org*-mode video yes ?
	the best spot for me was "is just a txt file" , i did not care at all for the video , i want
	clear readeable files  [02:21]
<daveo> rudybot: are you an org fanboyz??  [02:22]
<rudybot> daveo: mice are for nOObs and Apple fanboyz ...
<fsbot> Yes
<daveo> hoo, hoo robot warz
<fxiny> Expez: for coding or for writing ?  [02:29]
*** ghast` (~user@host83.190-30-155.telecom.net.ar) is now known as ghast  [02:37]
<Expez> fxiny: The issue was my not using 'ac-flyspell-workaround'
<bpalmer> rudybot:  two robots enter. Only one robot leaves.  [02:39]
<rudybot> bpalmer: Emacs users trying to figure out why people like the iPhone, citing cons like "I
	  can't run my robots with it" and "It doesn't run Emacs"
<bpalmer> rudybot: that's a string, not a cons.
<rudybot> bpalmer: i ran into that issue earlier when i tried to (cons (rev (rest l)) (first l)
<fds> ``I can't run my robots with it''?  [02:44]
<fds> I didn't realise Emacs users were supposed to have robots.
<daveo> fds: we have rudybot, fsbot and birny !!  [02:51]
<ijp> ,shoot fds
* fsbot loads its rolled-up newspaper and thwaps fds on the nose.
<ijp> ,botsnack
* fsbot dances happily
<daveo> are you a good bot, fsbot??  [02:52]
<fsbot> Highly likely.
*** resure (~resure@85.26.186.18) is now known as away_resure_away
<daveo> i like simple answers
<Vulpes> can a robot have no mechanical parts?
<daveo> Vulpes: that's an intersting question actually  [02:53]
<fds> Well, if IRC bots are robots, then surely you can control them with your iPhone!  [02:54]
<daveo> domo arigato, mr roboto!
<ijp> ,slap daveo
* fsbot slaps daveo with a fish.
<daveo> methinks something is fishy in Denmark  [02:55]
<daveo> ,,dv robot
<fsbot> not documented as a variable.
<ijp> let's have a commercial break  [02:58]
<nicferrier> ELNODE! FOR ALL YOUR WEBAPP NEEDS! BUY IT NOW BY DOWNLOADING IT FOR FREE AND THEN
	     PAYING LOADS OF MONEY TO "EMACS DEVELOPERS IN NEED".  [02:59]
<daveo> nicferrier: a little more grovelling please  [03:00]
<nicferrier> PLEASE
<bpalmer> let's pay money to rich people  [03:03]
<macrobat> you mean you aren't already?  [03:05]
* rolando wonders if cl-who should be ported to elisp to use with elnode
<ijp> let's aim to make emacs made of 100% recycled code by the year 2016
<macrobat> new code depends too much on fossil fuels  [03:06]
<ijp> think about all the electricity wasted running tests  [03:08]
<ijp> The environmentally sound thing to do is never test our code
<bpalmer> I'm an environmentalist!
<ijp> fsbot: is TDD is akin to environmental assassination??  [03:09]
<fsbot> It is decidedly so
<cluck> nicferrier: get a 3d printer and start selling elnode mugs (actually a mug looking like
	cloud with a gnu for a handle does sound like something that would sell ok)
<TheCrittaC> fsbot: do you answer yes and no questions?  [03:10]
<fsbot> [Too many DB matches] [google]    http://emacswiki.org/emacs/WikiQuestions  [03:11]
<fsbot> http://www.emacswiki.org/emacs/query.el
<Guest98928> ijp, you shouldn't debug your code either then :)
<youlysses> What could be a reason for temporary lock-ups, thought my whole emacs graphical-session?
<macrobat> once the hot beverage eats through the 3d ink, you'll have a scalding rainbow in your lap
<bpalmer> garbage collection, writign temp files to ,e.g. nfs, font locking
<nicferrier> cluck: not a bad idea
<ijp> TheCrittaC: nah, he just gives a magic 8 ball answer if a sentence ends with multiple ?s like
      so??  [03:12]
<fsbot> Without a doubt
<TheCrittaC> That's what I thought, but I didn't realize it needed to be two question marks.
<ijp> macrobat: I've always wanted to drink a rainbow
<bpalmer> ijp: people always dismiss as magic what they don't understand.  [03:13]
<macrobat> ijp: haven't the mixology experts invented that yet?
<Buglouse> Not the rational among us
<zellio> macrobat: they have
<bpalmer> A skittle cocktail?  [03:14]
<ijp> bpalmer: nah, they just end up a weird reddish colour
<macrobat> if you have a block and tackle, you have a ghost on your hands  [03:15]
<bpalmer> hmm. what if you freeze each skittle color in a thin ice cube?
<ijp> hehe, maybe
<ijp> we need some boozehounds to research this for us  [03:16]
* bpalmer wants to use the phrase 'an emulsification'
* ijp prods jlf
<bpalmer> rudybot: get some gastronomic chemists on the case.
<rudybot> bpalmer: a gastronomic feat
<macrobat> ask wbooze?
<rolando> https://farm4.static.flickr.com/3109/3178190119_23c96258d4.jpg  [03:18]
<macrobat> it just needs to be slightly disolved in liquor  [03:19]
<ijp> let's tattoo our brain
<macrobat> didn't the brazil sync-swimmers have brain swimming caps on?  [03:21]
* youlysses wonders if this is a being caused from lack of threading ...  [03:23]
<nicferrier> sorry to be a bore about this but here's a draft blog post on this bignum stuff with
	     calc http://nic.ferrier.me.uk/drafts/bignums-with-emacslisp.html  [03:49]
<plotr> nicferrier: interesting reading, thanks!  [03:55]
*** youlysse` (~user@75-132-17-145.dhcp.stls.mo.charter.com) is now known as youlysses  [03:59]
<tensorpudding> does package.el have a facility for forcibly reinstalling a package?  [04:03]
<nicferrier> just doing M-x package-install does that does it not?  [04:04]
<nicferrier> although it won't downgrade, you have to manually delete.  [04:05]
<shergill>
	   http://sphotos-a.xx.fbcdn.net/hphotos-ash3/c34.0.403.403/p403x403/551660_464017566952593_1709492384_n.jpg
											      [04:07]
<rudybot> http://tinyurl.com/bqhwuba
<taylanub> shergill: 10/10  [04:10]
<nicferrier> very funny. made me larf.  [04:12]
<plotr> nicferrier: man, elnode is beyond awesome!  [04:14]
<nicferrier> plotr: :-D
<rolando> nicferrier: did you tried the bigint package?
<rolando> or did you want to keep the external dependencies to a minimum?  [04:15]
<nicferrier> rolando: LOL. there's a bigint package??
<fsbot> Definitely
<rolando> it's in my M-x list-packages
<nicferrier> updated blog post btw http://nic.ferrier.me.uk/blog/2012_08/bignums-with-emacslisp.html
<rolando> http://www.astro.princeton.edu/~rhl/skyserver/bigint.el  [04:16]
<rolando> well, you do appear to be using calc-specific functions (eg. rsh)
<rolando> I don't think that bigint package provides that  [04:17]
<nicferrier> lol. that's funny. I searched google but not packages. what a dumbass.
<ijp> ,shame nicferrier
* fsbot reveals nicferrier's pornography collection to #emacs
<nicferrier> it seems to provide logand at least
<nicferrier> oh wait. yes, yes. that will be why. I did look and there was no bitwise
	     shifting. definitely the reason I didn't consider it.  [04:18]
<rolando> yeah, but no rsh
* nicferrier wonders if he'll get away with that.
<rolando> well... you could divide/multiply stuff by 2
<nicferrier> that was stupid of me... but calc is built in. so why add another package?
<Frozenlock> Can we have an elispscript to go with elnode? :p  [04:21]
<nicferrier> in the end, I did find calc easy to use, it just was very hard to get my knowledge of
	     it to a point where I could use it.
<rolando> port parenscript to elisp?
<nicferrier> Frozenlock: most definitely. I do plan on doing that.
<nicferrier> I don't th<nicferrier> I don't think it's a hard job actually, start with a small subset of lisp that everyone
	     gets.  [04:22]
<nicferrier> what will be even better is some sort of backbone.js type thing that let's you code the
	     client from the server.
<nicferrier> it's gonna take a few years before we get there I reckon but we can transform web
	     programming to the point where it's pleasurable, yes.  [04:23]
<Frozenlock> Wow.... I might actually drop clojure....  Webserver? Done. Easy html? Done. Easy
	     mongodb? Done. Easy js? Soon... :)  [04:24]
<nicferrier> and threads are coming.
<Frozenlock> Oh but multiple threading is still missing :(
<Frozenlock> o_O
<nicferrier> haven't you seen tromey working on them? the man's awesome.  [04:25]
<nicferrier> not that you need them anyway because you can do it all with multiple processes with
	     elnode-rle or johnw's async.
<Frozenlock> There's too much awesomness around emacs for me to keep track of everything!
<nicferrier> I know. isn't it fantastic.  [04:26]
<Frozenlock> Lol! No! I feel like the last of the dumbests!
<nicferrier> tali713: you here? now I want to badger you to make a package out of your esxml. can I
	     do it for you? I'd be happy to? you need a multi-file package, right?  [04:27]
<rolando> wait sxml?
<rolando> ,esxml
<fsbot> hmm, esxml is [0] a library for manipulating xml with sxml or emacs' native xml parse
	tree(esxml)
<fsbot> [1] available from https://github.com/tali713/esxml.git
<nicferrier> Frozenlock: I am so excited by emacs right now. it is such an awesome environment.
											      [04:28]
<rolando> oooh
<ijp> rolando: sxml has existed in some form for over a decade
<rolando> I remember seeing some dsl for writing xml written in elisp
<Frozenlock> nicferrier: The biggest advantage imo is that everything is at your fingertips.
<rolando> ijp: I just didn't knew it would run in elisp
<Frozenlock> Litteraly: C-h v my-variable  [04:29]
<nicferrier> Frozenlock: yes, and the native debugging. the level of integration is
	     unsurpassed. this is what I am banging on about.
<ijp> rolando: it doesn't directly, but the ideas are very easily transferable
<rolando> https://github.com/philjackson/xmlgen <-- this thing  [04:30]
<nicferrier> ijp: and tali713 has done it basically.
<ijp> nicferrier: I know, I'm just surprised rolando is surprised
<nicferrier> rolando: and tali713's version.
<nicferrier> ijp: right. it's not that hard. I like tali713's version, it's got taste.
<nicferrier> I hope esxml can be used to make the front end to marmalade from the existing backend
	     functions. it's an easy enough job for almost anyone to do.  [04:32]
<nicferrier> and of course, I'll get round to it if no one else does.
<rolando> esxml does look nice
<ijp> are there any gotchas when opening gui programs from a cronjab?  [04:34]
<pjb> So, my distribution upgraded to  emacs-24 in my back, and now, my emacs process with erc feels
      rather slow. 
<nicferrier> ijp: crontab? the environment is wierd.  [04:36]
<pjb> When I switch frames (in ratpoison) to this emacs / erc frames, the frame stays black for a
      couple of seconds (with the processor at 100%) before displaying the channel buffers.  Same
      when I scan the channels with C-c SPC, the CPU spikes at 100% and the response times are
      unbearable.
<pjb> My emacs process for development and gnus don't feel too slow so far.
<nicferrier> been using 24 for ages and I haven't noticed any speed problems. I don't use erc tho.
											      [04:38]
<ijp> nicferrier: I assumed as much
<Frozenlock> nicferrier: but you do use some kind of emacs client for irc, right?  [04:39]
<nicferrier> Frozenlock: rcirc.
<Frozenlock> ,rcirc
<fsbot> Frozenlock: From memory, rcirc is [0] a minimalist IRC client for Emacs.
<fsbot> [1] at http://www.emacswiki.org/cgi-bin/wiki.pl?rcirc,
<fsbot> [2] at #rcirc,
<fsbot> [3] someone please add automatic reconnection support,
<fsbot> [4] ^^^ +1
<pjb> ijp: where to do want your crontab job open a GUI to?
<nicferrier> ijp: I mean it won't even work will it? unless you fill in all the X session stuff.
<pjb> What X session?  [04:40]
<nicferrier> well, if you're going to start an X client you need a connection to an X server.
<nicferrier> is all I mean.
<pjb> But crontab works in the background, there's no X session there. You may never have logged in!
											      [04:41]
<pjb> Or have logged out.
<pjb> The X server may even have been stopped.
<ijp> right, these are the sorts of reminders I was needing
<nicferrier> right. which is why I'm saying starting gui programs from crontab is going to be odd.
<pjb> Now of course, you could write some kind of AI trying to contact you by all means, searching
      the network for accessible X servers, trying to irc'ing you, tweet you, send email, phone
      home, etc.  [04:42]
<nicferrier> you might be alright if you wrap it with ssh. but I think it will be hard.
<pjb> It's not going to be odd, it's going to be impossible.  It's an oxymoron.
<pjb> I can't fathom the brain configuration leading to such an idea.
* ijp rolls eyes
<nicferrier> it's not impossible. nothing's impossible.
<pjb> It's not imposible, it's such one of the most silly thing you can do on unix.  [04:43]
<pjb> s/such/just/
<ijp> pjb: the brain configuration is this: I am lazy, I need to use program X at certain points
      throughout the day, cron runs programs at certain points throughout the day, hence use cron to
      do this thing
<ijp> if I don't automate it, I'm going to forget
<nicferrier> ijp: there are gnome schedulers
<pjb> Dont' do that from the cron, do that from you xinit or Xsession files.
<ijp> nicferrier: also a good option  [04:44]
<nicferrier> emacs might be better.
<pjb> certainly.
<pjb> Even C-x o to switch buffer takes one second.  [04:45]
<pjb> more than one second…
<ijp> yes, and when x-widgets get merged, that will be a viable option, until then no can do
<nicferrier> ijp: why? you can have gui emacs launch further gui programs can't you? (never tried
	     it)  [04:47]
<ijp> well, yes, but I don't always have emacs running (yes, blasphemy I know)  [04:48]
<youlysses> nicferrier: You can, I just think ijp was in the same thought processes as me
	    yesterday... the whole "why you would ever leave".
<youlysses> *Or maybe the polar opposite ...XD
<PwiKi> Hello :)
<nicferrier> why would you ever not have it open? is certainly my thought.
<nicferrier> PwiKi: hello!
*** Guest88426 (~t@81.202.16.46.dyn.user.ono.com) is now known as pjb  [04:53]
<insomniaSalt> ,yow
<fsbot> I have the power to HALT PRODUCTION on all TEENAGE SEX COMEDIES!!
<wbooze> ,yow  [04:54]
<fsbot> I wonder if there's anything GOOD on tonight?
<ijp> that's quite the power
<pjb> Let's pray it will exercise it.  [04:55]
<pjb> I rebooted emacs, now it seems to work correctly.  [04:56]
* pjb is puzzled.
<insomniaSalt> emacs on bare metal.  [04:57]
<wbooze> puzzle ?
<Guest98928> "rebooted" :)
<nicferrier> pjb: maybe some sort of compilation that was only done on first run?
* nicferrier wildly stabbing in the dark  [04:58]
* insomniaSalt hands nicferrier a maglite™  [04:59]
<pjb> insomniaSalt: not in this case.  Just rebooted it from a linux shell.  [05:01]
<pjb> nicferrier: I don't know. I don't compile my emacs stuff anyways.
<pjb> So it would have to be from the distribution.
* insomniaSalt writes M-x reboot  [05:02]
<youlysses> insomniaSalt: I'm more surpised that, that doesn't currently exist, tbh... XD  [05:05]
<youlysses> *surprised
<wbooze> ,yow  [05:06]
<fsbot> Inside, I'm already SOBBING!
<insomniaSalt> same goes for word counting.. left as an exercise :P
<youlysses> insomniaSalt: I swear that's implemented, I forgot what the function name is/was...
											      [05:07]
<nicferrier> why would you need to reboot? that's mad. it's an extraordinary event.
<youlysses> *?
<forcer> insomniaSalt: Emacs 24 has `count-words'  [05:08]
<insomniaSalt> youlysses: "M-x how-many \<"?
<insomniaSalt> forcer: indeed, yay.
<pjb> nicferrier: last time I had had to reboot my emacsen was because I upgraded my distribution
      and it removed the emacs 23 site files when switching to 24.  It's rather inconvenient to work
      with an emacs without its site files.
<youlysses> nicferrier: Well I was refering to all the system states, but yeah it *should* be.
<nicferrier> pjb: sure. it happens.  [05:09]
<pjb> I should fill in a bug report: they shouldn't erase the files until they're sure there's no
      remaining processes using them.  Ie. until next system reboot.
<forcer> You should implement a `reboot-preserving-uptime'
<youlysses> forcer: But then you can't experience the "shame"...!  [05:10]
<insomniaSalt> interesting non-interactive use of narrow-to-region in the implementation of
	       count-words :)
<pjb> Well, I have emacs instance running for more than one Marsian year, they're so old they don't
      even have a (uptime) command!
<forcer> It's `emacs-uptime'
<pjb> No match.  [05:12]
<pjb> I told you: too old instances to have it!
<technomancy> anyone know an https host using a self-signed cert off the top of their head?  [05:14]
<wbooze> how should we know ?  [05:15]
<Han> there are tons of them
<technomancy> there should be, yes.
<wbooze> if it's self-signed it will broadcast itself with a name say verisign inc. limited or
	 so....say
<wbooze> you'd not be able to tell them apart  [05:16]
<Han> wbooze, check the advanced section of firefox config 
<Han> and then encryption/servers  [05:17]
<Han> all the ones listed under unknown.
<wbooze> hmmm
<technomancy> I just need to test some error handling  [05:18]
<Han> if it's self signed you'd have to acknowledge the cert manually.
<Han> Silly thing is that even though a cert is stored firefox won't complain if it changes.  [05:20]
<Han> https://addons.mozilla.org/en-US/firefox/addon/certificate-patrol/
<Han> This should be default behaviour
<nicferrier> technomancy: sorry dude. I used to have quite a few but since woome went, I have none.
											      [05:23]
<nicferrier> can't you just make one though? it's easy, no?  [05:24]
<Han>                 openssl genrsa -out $1.key 1024  [05:25]
<Han>                 openssl req -new -key $1.key -out $1.csr
<Han>                 openssl x509 -req -days 365 -in $1.csr -signkey $1.key -out $1.crt
<Han> That's basically it.
<Han> so replace $1 with a unique name.  [05:26]
<nicferrier> nice one.
<pjb> technomancy: shouldn't google be able to answer to that question?
<nicferrier> mongo is pissing me off. I had querys working perfectly well. and now I don't. or I do
	     with the damn test. but not with real code. phhrrrr.  [05:27]
<ijp> let's have celebrities sign our ssl certificates  [05:36]
<Han> =)  [05:39]
<wbooze> eheh
<ijp> who could be more trustworthy than a celebrity??  [05:41]
<fsbot> I'm telling you, you don't want to know.
<nicferrier> let's get prince harry to choose our wardrobes.  [05:43]
<ijp> man, that incident was _ages_ ago  [05:44]
<nicferrier> oh I apologize so much for my awful lack of topicality. pass me a sword so I might fall
	     on it.  [05:45]
* nicferrier layers on the sarcasm with a hod as well as a trowel.  [05:46]
<technomancy> ijp: you know you can trust actors because the one thing they're known for being
	      skilled at is convincing you of things that aren't true.  [05:47]
<nicferrier> technomancy: this is patently false for most actors.  [05:49]
<technomancy> yes, I avoided saying they're actually good at it =)  [05:50]
<nicferrier> fair enough.  [05:51]
<wbooze> no you didn't
<wbooze> omg, who joins double in here ?  [05:54]
<_schulte_> so, I put together a git repo to publish an editable version of the Org-mode wiki (Worg)
	    on heroku using elnode  [05:57]
<_schulte_> but ran into this error
	    https://github.com/eschulte/org-ehtml-heroku-demo/blob/master/NOTES  [05:58]
<nicferrier> looking
<_schulte_> cool, thanks, I forked your heroku repo, which is itself a fork of technomancy's heroku
	    repo
<_schulte_> not clear what "no Cedar-supported app detected" means  [05:59]
<nicferrier> I'm not sure either... but the start.el doesn't seem right. there's no elnode dir?
											      [06:00]
<nicferrier> why not just use packages tho?
<_schulte_> because I need Org-mode components from contrib (which aren't packaged) so I'm using git
	    submodules  [06:01]
<nicferrier> how did you create the heroku app?
<_schulte_> I figured I just needed to edit the Procfile file
<_schulte_> running "emacs --batch -l start.el" from the command line locally works as expected
											      [06:02]
<nicferrier> you have to create your heroku app like this  heroku create --stack cedar --buildpack
	     http://github.com/nicferrier/heroku-buildpack-emacs.git
<_schulte_> yup, did that as per the instructions in your README  [06:03]
<nicferrier> hum.
<nicferrier> I think elnode needs to be installed by package... but maybe that will work for
	     you. you could upload the tarball and install it with package-install-file  [06:04]
<nicferrier> but as I say, if it works for you outside of heroku it should be ok inside heroku
											      [06:05]
<nicferrier> I think the no cedar app thing sounds like the create wasn't right, like it couldn't
	     download my buildpack
<_schulte_> yea, that sounds probable
<_schulte_> the error message does make it sound as though it never tries to start because something
	    is missing  [06:06]
<_schulte_> maybe I should actualy read the heroku docs rather than trying to blindly modify
	    existing packages
<nicferrier> lemme go look at the buildpack.
<nicferrier> well, it was specifically constructed to make it easy. it bloody should work.  [06:07]
<nicferrier> I'll look. how's the org mode depends going btw?
<_schulte_> Org-mode just released 7.9, so I'm waiting until that settles down to see if it will be
	    required to add more ELPA packages explicitly including some of this functionality from
	    org-mode/contrib  [06:08]
<_schulte_> could the probably be that I renamed start-elnode.el to start.el?  [06:09]
<_schulte_> s/probably/problem/
<nicferrier> no, that's called from the Procfile
<_schulte_> ok, thought so
<nicferrier> ok. it all looks ok. can you make a single git repo and try that? without the
	     submodules? just as a test?  [06:11]
<nicferrier> simplify.
<_schulte_> it feels wrong but I'll give it a shot  [06:12]
<nicferrier> just as a test.
<_schulte_> running...  [06:15]
* nicferrier waits with bated breath  [06:16]
<_schulte_> 61% uploading objects (huge dependencies)  [06:17]
<_schulte_> same error "Heroku push rejected, no Cedar-supported app detected"  [06:18]
<nicferrier> hum.  [06:20]
<nicferrier> I can try it tmrw.  [06:22]
<_schulte_> thanks, no rush, I can try some other stuff in the mean time
<nicferrier> ok. well, lemme see what I can make happen.
<nicferrier> oh bloody hell. here we go again. bson parsing failure.  [06:34]
<damd> lol bson  [06:35]
<damd> enjoy your extra milliseconds
<taylanub> hahaha  [06:36]
<ijp> ,slap damd
* fsbot slaps damd with a fish.
<nicferrier> it's taking me ages to make it work. very tiresome.
<nicferrier> still. it'll be worth it in the end.  [06:39]
<Frozenlock> Yes, I will make a shrine of you with candles around it.
<nicferrier> I just wish the bloke would accept my patches without making me work extra hard ("I
	     don't understand creole!")
<nicferrier> of course, all these things I've been doing are all break downable into something that
	     would work really well in one of technomancy's swarm meetups.  [06:46]
<nicferrier> I plan to do some of those remotely. and maybe people from here would like to join in?
<nicferrier> this binary data looks easy to add to mongo for example.
<macivy> is there a way in dired or dired+ to copy the full path of a file to kill ring so I can
	 paste it elsewhere?   [07:05]
<rgr> how do I get IDO looking in other directories than the current dir/path for the pertinent
      filename I have typed?   [07:07]
<taylanub> why'd macivy quit, i just found his answer :(  [07:08]
<taylanub> 'w' with prefix arg zero
<taylanub> no wait, it says "zero prefix arg" which i guess means none ?
<taylanub> rgr: did you look into "automerge" stuff ?  [07:09]
<taylanub> (ok, it is prefix arg zero, as in C-u 0)
<rgr> well, I looked at the cusomtisation group but it didnt make much sense from the docstrings.
											      [07:10]
<taylanub> it has this feature with "auto-merging work directories" .. i'm trying to find out where
	   the whole feature is described, on the meanwhile you can C-h v/f ido-auto-merge-<TAB>
											      [07:11]
<rgr> yes it caches dirs.  [07:12]
<taylanub> i personally still couldn't make sense of what it does :P  [07:13]
<taylanub> i just have it disabled though
<rgr> it used to search dirs for me. shrug.
<taylanub> hrm, it can be forced with M-s by the way
<rgr> oh hang on
<rgr> oh very good
<rgr> hmm. good and bad. ~/header will find ~/dir1/header.php with M-s but evt.php wont find
      eventfuncs.php which kind of clashes with the regexp matching elsehwre. Shame.  [07:15]
*** pjb (~t@81.202.16.46.dyn.user.ono.com) is now known as olisp  [07:17]
<nicferrier> getting to be a big pull request https://github.com/m2ym/mongo-el/pull/2
<ijp> rudybot: quote  [07:38]
<rudybot> ijp: Let's implement redisplay as a wrapper over TeX.
<ijp> he
<kotfic`> hey whats the interactive code for prompting for a password?
<taylanub> `read-passwd'  [07:39]
<kotfic`> sweet
<kotfic`> thanks
<taylanub> see C-h f read-<TAB>
<taylanub> (for all kinds of user input functions)
<kotfic`> super sweet  [07:40]
*** olisp (~t@81.202.16.46.dyn.user.ono.com) is now known as pjb
<rgr> oh jesus, it was simply ido-auto-merge-delay-time  [07:42]
<rgr> Id set it to  a big number yonks ago
<ijp> pjb: I don't think it's right to imply everyone on #scheme is at gavino's level  [07:43]
<shergill> gavino?  [08:30]
<ijp> shergill: troll/idiot/shemale aficionado  [08:31]
<ijp> I'm sure he has redeeming qualities too, however he has thus far (many years now) declined to
      reveal them  [08:32]
* ijp with apologies to the transgendered community for how that last remark sounded  [08:33]
<shergill> hah  [08:34]
<taylanub> <3 shemales
<ijp> tmi
<taylanub> i'm an open person!  [08:35]
<shergill> goatse style?  [08:36]
<shergill> goatse style??
<fsbot> Don't count on it
<taylanub> i was going to make that joke ...
<Buglouse> May I connect my dongle to your port, I want to transfer my payload
<shergill> 50 shades of emacs?
<taylanub> hahaha
<ijp> qDot_ got a publishing deal?  [08:38]
*** futuro`` (~user@c-98-240-221-72.hsd1.mn.comcast.net) is now known as futuro  [08:48]
<dlams> magnars: apparently I don't check your github enough  [08:55]
<dlams> magnars: super happy with js2-refactor  [08:56]
<macrobat> rudybot: me too stupid too install intellij  [09:12]
<rudybot> macrobat: is considering a switch from emacs to intellij --
	  http://henrikwarne.com/2012/06/17/programmer-productivity-emacs-versus-intellij-idea/
<ijp> rudybot: do you think it would be worth it?
<rudybot> ijp: Eh, I'd just whitelist 'em both; not worth troubling to figure it out
<macrobat> yes, emacs doesn't have that "jump-back" keybind  [09:14]
<macrobat> is it breadcrumb that does that?
<k-man> what's the command to display the emacs splash screen?  [09:29]
<ijp> ,df display-splash-screen  [09:32]
<fsbot> display-splash-screen is an alias for `display-startup-screen' in
<fsbot> `startup.el'.
<fsbot> (display-splash-screen &optional CONCISE)
<fsbot> Display startup screen according to display. ..[Type ,more]
<k-man> ijp, thanks  [09:36]
<k-man> ,more  [09:37]
<fsbot> A fancy display is used on graphic displays, normal otherwise.
<fsbot> If CONCISE is non-nil, display a concise version of the startup
<fsbot> screen.
<k-man> ijp, M-x does not seem to find it?  [09:38]
<k-man> ah, i think its not an interactive function
<ijp> no, it's not interactive  [09:39]
<ijp> rudybot: quote  [09:57]
<rudybot> ijp: let's all reduce left
<daveo> rudybot: if we reduce left and further it will be right!  [10:08]
<rudybot> daveo: How to reduce current window size in emacs with keyboard shortcut
<daveo> ,seen smart-rudybot  [10:09]
<fsbot> BIIIIIIIIIIIRNY! Have you .seen smart-rudybot?
<daveo> .seen smart-rudybot
<birny> I've never seen smart-rudybot before.
<daveo> hah, serves you right  [10:10]
<bananas> hi! i'm trying gnus. how can I sync the mailbox changes? (like unticked messages)  [10:22]
<bananas> if anyone knows of a good cheat-sheet, that'd be awesome.
<bananas> anyone?  [10:25]
<fsbot> Asking questions such as, "Does anyone know/use X?", makes it hard for us to know what
	you're really looking for. Try asking a more directed question. (If no one answers, it
	doesn't mean we're ignoring you.)
*** metaperl|2 (~georgejet@cpe-24-193-199-12.si.res.rr.com) is now known as GeorgeJetson  [10:28]
*** Frozenlo` (~user@cable-15.246.173-182.electronicbox.net) is now known as Frozenlock  [10:31]
<ijp> bananas: it gets done automatically when you leave a summary buffer IIRC  [10:35]
<ijp> also, if no-one answers right away, that doesn't mean we're ignoring you ;-)  [10:36]
<ijp> I guess Z R / C-x C-s or Z G / M-g might be what you are after  [10:38]
<bananas> ijp: thanks, mate!  [10:39]
<bananas> :D
<ijp> that slash is not a part of the combo, it is meant as a separator
<nicferrier> anyone know where I can get a screenshot of emacs 13?  [10:51]
<ijp> O_O  [10:53]
<nicferrier> I'm doing a talk on elnode, but I'm gonna give a potted history of emacs (and the whole
	     of IT it seems) at the same time  [10:54]
<nicferrier> it's got some good jokes  [10:55]
*** Bakuus (~lolz@cable-10.246.173-85.electronicbox.net) is now known as Ausprit
<ijp> when was emacs 13
<nicferrier> it was the first stallman one
<nicferrier> the first gnu one I should say
<gnomon> ijp, that was long before the crust of the earth cooled to phase-change range.  [10:56]
<SpiderPig> is there a way to make up a mode hook for an arbitrary file name expression? I want to
	    add a mode hook that will work for svn ci messages so I can limit the line length.
<nicferrier> http://www.jwz.org/doc/emacs-timeline.html
<ijp> did they even have screenshots in 1985?
<lcc> is it true that gnu emacs stemmed from a free version of goslling emacs?  [10:57]
<nicferrier> no
<nicferrier> there never was a free version of gosling emacs. gosling gave the code to stallman but
	     then sold it to a company who then prevented stallman from using it. stallman saw this
	     as confirmation of the problems that had occurred at mit.  [10:58]
<ijp> "nitially he based it on Gosling Emacs, but he replaced the Mocklisp interpreter at its heart
      with a true Lisp interpreter, which entailed replacing nearly all of the code."
<ijp> so, I guess it stemmed from it in a very loose sense
<ijp> (assuming wikipedia is accurate)
<nicferrier> I think he says "all the code" because it wasn't free any longer.
<lcc> http://www.gnu.org/gnu/rms-lisp.html
<nicferrier> if I'm wrong it's because I'm mis-remembering that link you just pasted lcc  [10:59]
<ijp> nicferrier: I dunno, maybe one of the greybeards on the mailing list does  [11:00]
<daveo> my atari died long ago  [11:02]
<lcc> hm... "I concluded I couldn't use it (gosling emacs) and had to replace it all"
<nicferrier> ha ha. I'm onto matz. it's a good talk. I might just leave out elnode.  [11:08]
<nicferrier> I am not sure how I am gonna interleave elnode into this talk. :-D  [11:22]
<SpiderPig> will (add-hook 'text-mode-hook 'function name) allow me to trigger mode changes for
	    Fundamental file types or is there a different mode name?  It doesn't seem to be working
	    and I am not sure how to tell if my hook is even getting called.  [11:28]
<nicferrier> SpiderPig: is there not a specific hook for svn commit messages? I bet there is if you
	     chase around the docs enough.  [11:29]
<yhvh> SpiderPig: Do like C-u C-M-x to instrument a function for edebug, this will let you step
       through your function  [11:31]
<SpiderPig> I'm trying to find one.  So far I found out how to check a file name in a hook so you
	    can fine tune one based on file name
<SpiderPig> yhvh: ill try that yhvh but if nicferrier is right then my function is not even getting
	    called.  [11:32]
<nicferrier> I reckon. pretty sure there will be a hook for commit messages tho. almost positive
	     there is one for vc. you could use that?  [11:36]
<SpiderPig> I'm searching.  it says Fundamental when it edits so I guess that means there is no
	    major mode?
<yhvh> vc-checkin-hook?  [11:37]
<yhvh> vc-before-checkin-hook  [11:38]
<SpiderPig> yea let me try that one.  [11:40]
<nicferrier> SpiderPig: idk what svn mode you are using, there are several, but a cursory glance at
	     http://www.xsteve.at/prg/emacs/psvn.el shows me several hooks that look like good
	     candidates.
*** ae (~ae@190.179.168.46) is now known as Guest53533  [12:39]
<nicferrier> I really want to open images scaling them full size to the frame  [12:50]
<quazimodo> Anyone got haml-mode to work properly?  [13:12]
* ijp takes back several of the bad things he's said about 'find' over the years  [13:20]
<pjb> yeah, find is a great command.
<ijp> I can rarely remember how to use it without reading the man page, but great in a pinch
<bremner> that's the Unix way (TM)  [13:21]
<ijp> indeed
<ijp> rudybot: now, if only I could forgive cat -n  [13:25]
<rudybot> ijp: forgive me here but im trying desperately to get my keymapping setup properly.  I
	  have a Happy Hacking Keyboard Pro II and my "Windows" key is actually (from xev) a
	  "Muhenkan" key (wtf?) 
<quazimodo> hrm  [13:36]
<quazimodo> i see  [13:37]
<quazimodo> its emacs24 vs emacs23 issue
<jstein> hi, i use emacs 24 snapshot for debian stable. It is really cool! I like the packagemanager
											      [13:39]
<jstein> but i found mistakes in the package description texts. Where can i contribute better text?
<aidalgol> ijp: What's wrong with cat -n?  [13:40]
<jstein> i have 3 repositories for packages. Where can i see, where a package comes from?  [13:50]
<rolando> nicferrier: just a heads up, the link to "Time management with simple Unix tools" in the
	  footer of http://nic.ferrier.me.uk/ is returning a 500 error  [14:01]
<rolando> http://nic.ferrier.me.uk/blog/2009august/time_management <-- direct link to "Time
	  management with simple Unix tools"  [14:02]
<quazimodo> nicferrier: you've failed   [14:03]
*** erez`` (~user@109.232.228.27) is now known as erez  [14:05]
<quazimodo> for some reason ruby-font-lock-syntactic-keywords shows up as a void-variable in emacs24
	    with haml-mode.l  [14:06]
<quazimodo> its just a defconstruct in ruby-mode.el :/
<quazimodo> erm
<quazimodo> defconst :/
<quazimodo> whats the right way to put a flag or breakpoint in some emacslisp to see if that if gets
	    evaluated?  [14:12]
<rolando> quazimodo: I think that haml-mode didn't do syntax highlight in emacs24  [14:15]
<rolando> also, use the (debug) form  [14:16]
<rolando> to place a breakpoint
<Buglouse> Does anyone have a conditional in their mode-line-format which checks for selection; want
	   to determine when to use inactive face  [14:34]
<sshaginyan> Has anyone successfully installed cedet on gnu emacs os x?   [15:25]
<mstr_> you don't need to. it's included  [15:34]
*** mstr_ (mstr@xob.kapsi.fi) is now known as mstr
<Buglouse> Figured it; solution was what I thought It would be, just did not do it correctly.
											      [16:25]
<scri> how can i make my arrow and page keys work in terminals in emacs?  [16:31]
*** resure (~resure@85.26.186.149) is now known as resure_away  [16:42]
*** resure_away (~resure@85.26.186.149) is now known as resure  [16:43]
<pjb> scri: http://paste.lisp.org/display/117812  [16:57]
<scri> no, emacs doesnt even recognize the keys  [17:04]
<scri> i tried it, but it just inserts ABCD etc.
<scri> however its not just my terminal map bc they work in other programs
<scri> but emacs doesn't, in console or xterms  [17:05]
<scri> could it be .inputrc?  [17:06]
<ychaouche> hello  [17:12]
<scri> hey  [17:13]
<ychaouche> I don't know what I did, but in emacs the keyboard is qwerty instead of azerty
<ychaouche> so anytime I type an "a", it's a "q".
<ychaouche> and anytime i type à "-" it's a 6
<ychaouche> etc?
<fsbot> hmm, etc is the etc directory of your Emacs install, C-h v data-directory to find out the
	location.
<ychaouche> etc.
<ychaouche> how do I revert the keyboard back to azerty in emacs ?  [17:14]
<pjb> C-x RET C-\  [17:15]
<pjb> M-x set-input-method RET french-azerty RET
<ychaouche> pjb, I don't even know where "\" is (shows 8)
<pjb> ychaouche: are you a programmer?  [17:16]
<ychaouche> yes
<pjb> then you must be a masochists to be wanting to use AZERTY to program.
<ychaouche> no, I'm just algerian.
<ychaouche> so most of our machines here are azerty  [17:17]
<ychaouche> I mean keyboards
<pjb> I'm French, and I use QWERTY, since I'm a programmer.
<ychaouche> I don't know how that helps
<ychaouche> I did however heard a lot of positive feedback for dvorak keyboard layouts
<pjb> It's easy, all the programming languages are designed to be typed on QWERTY keyboards, with
      QWERTY special characters.
<ychaouche> hear*  [17:18]
<pjb> So using any other layout will necessarily be less efficient when entering those special
      characters.
<ychaouche> pjb, your solution works when typing characters, but not for commands  [17:19]
<pjb> Furthermore, the killing feature, is when you couldn't even type on an AZERTY Macintosh
      keyboard the uppercase accented letters needed in French!
<ychaouche> example C-a doesn't work
<ychaouche> pjb, they weren't needed back then.
<ychaouche> I guess
<pjb> They corrected this bug since then, AFAIK, but with the QWERTY layout I had no difficulty to
      write "À LA CHAÎNE".
<ychaouche> where did you get the accents ? there a no keys for them, right ?  [17:20]
<pjb> I can type the accents using the compose key I have configured in my xmodmap, or using emacs,
      with C-x 8 ` A  etc.  [17:21]
<ychaouche> ah ok
<pjb> Also, with emacs you can type C-x 8 RET and the name of any unicode character.
<ychaouche> aaah good to know
<pjb> ∫xdx
<ychaouche> did you paste this from emacs ? :)
<ychaouche> or is emacs your irc client ?  [17:22]
<pjb> I'm using emacs to chat on irc!
<pjb> --> erc
<ychaouche> ok
<ychaouche> well i guess it's easier to just close emacs and reopen it then
<ychaouche> it still is qwerty for commands
<pjb> From emacs, only the input method may change the layout, so M-x set-input-method or M-x
      toggle-input-method   [17:23]
<pjb> The later is C-\ actually.
<ychaouche> didn't work for me
<ychaouche> set-input-method that is
<ychaouche> I didn't try the second one  [17:24]
<pjb> But if you're on MS-Windows  or some other strange GUI, perhaps there's a hot key to switch
      layouts?
<ychaouche> yes i'm on win
<ychaouche> but the problem affects only emacs
<ychaouche> I'm using Xchat just fine
<ychaouche> aaaaaa
<pjb> If you accidentally change the input method you can toggle back with C-\
<ychaouche> see, that was the a key not q
<ychaouche> isn't C-\ for something else ?  [17:25]
<ychaouche> code completion
<ychaouche> or something ?
<ychaouche> or is it C-M-\
<ychaouche> ?
<ychaouche> mmm
<scri> that is M-/, dabbrev-expand
<pjb> Perhaps. The command is toggle-input-method C-h w toggle-input-method RET tells you where it
      is.
<scri> C-M-\ is indent region
<pjb> Here, it's on C-\  [17:26]
<ychaouche> scri, oh correct
<ychaouche> ok I was mixing shortcuts
<scri> if you can just get to change the input method, you should be ok  [17:27]
<pjb>  There are other french- input methods that you may prefer to enter accented letters.
<ychaouche> Well I just restarted emacs and everything got back to normal  [17:28]
<pjb> ychaouche: what programming language do you use?  [17:30]
<ychaouche> pjb, currently javascript
<pjb> There's a lot of {} and [] in javascript…  Quite hard to type in AZERTY.
<ychaouche> It took me some time to adapt but now it's a little bit easier  [17:31]
<ychaouche> I remembered in université paris 8 we had qwerty keyboards and yes it was a little bit
	    easier to type those characters
<ychaouche> I stil can't guarantee that I get them correctly on first key stroke :)  [17:32]
<ychaouche> I usually miss them by a key.
<ychaouche> anybody using dvorak ?
<pjb> I started with QWERTY when I was a child and never tried to switch to AZERTY.
<pjb> There's no significant difference between QWERTY and dvorak. If you want to optimize your
      keyboard, there are programs for that: you feed them with texts you usually type (eg. your
      programs), and they compute a personalized optimum keyboard.  [17:34]
<scri> that sounds cool. would you then print it and lay it over the keyboard or something?  [17:35]
<scri> so you could learn the new keys
<pjb> you'd configure your .xmodmap yes.  [17:36]
<pjb> You wouldn't print anything, since you'd use a blank keyboard.
<pjb> http://www.daskeyboard.com/model-s-ultimate/
<Mon_Ouie> I'd never change the physical layout for learning; by doing that, I would probably end up
	   only being able to type while looking at the keyboard.
<scri> well, i would want to see them as i type until i learned it
<pjb> scri: you can keep the layout on the screen if you need it.  [17:37]
<scri> if i went that far, i would want something like a datahand though
<scri> then you could really optimize  [17:38]
<scri> it's the strangest thing. in terminals, the arrow keys insert bits of text starting with a
       letter  [17:39]
<scri> e.g. up is A, so it finds the closest word starting with A, and inserts it  [17:40]
<scri> after that, it's just the one letter though
<scri> so if i type left i get DATAHANDDDDD
<pjb> http://paste.lisp.org/display/131216  [17:41]
<pjb> Now, that depends on the terminal.  [17:42]
<pjb> But with the terminals that send ANSI escape sequences, that's this.
<scri> hm, let me see  [17:43]
<scri> aha! it works!  [17:47]
<scri> genius
<scri> i didn't know i could cut and paste the literal ESC  [17:49]
<ychaouche> mm... I don't know if I'd like datahand keyboards. Try to move your fourth and fifth
	    finger of the same hand one to the left and one up.
<scri> well, AIUI they aren't in production anymore  [17:51]
<scri> just the first thing i thought of that was "ergonomic"  [17:52]
<scri> maybe there are better options these days
<pjb> scri: you can insert any character with C-q   [17:54]
<scri> but this, i just cut from the webpage?
<pjb> Since in general only the first character of escape sequences is the only one that's special,
      C-q and your cursor key will insert the whole sequence correctly.  [17:55]
<pjb> In a terminal, I mean.
<scri> strange  [18:00]
<jaimef> how do you define C-c C-c in a define-map statement?  [18:01]
<pjb> I'd read the doc.
<jaimef> yeah tons of example of multiple control options :P  [18:02]
<jaimef> (void-variable map) ok  [18:03]
<scri> pjb: any idea why i got the weird behavior i did?  [18:07]
<scri> also, what part of the manual tells about this
<fxiny> anyone managed to get this one working in emacs 24 ?
	http://www.emacswiki.org/emacs-en/ShortList  [18:11]
*** rgr (~user@client-82-26-142-48.pete-bam-1.adsl.virginmedia.com) is now known as Guest51305
											      [18:16]
<pjb> I never read the emacs or emacs lisp manuals. :-(  [18:25]
<nicferrier> I do. they're quite good. I wish there was a consolidated manual though.  [18:26]
<scri> well, they dont seem to have much on this specific topic
<pjb> I should but life is short.
<scri> so where can i learn more about this?
<scri> what are your sources  [18:27]
<pjb> The sources.
<nicferrier> about what, sorry?
<scri> ascii escape sequences
<pjb> C-h f,  C-h v,  M-x apropos, etc.
<scri> and how to make emacs recognize arrow keys in the terminal  [18:28]
<David-A> jaimef: do you mean "define-key" or similar?
<nicferrier> the arrows in terminal problem? that's not emacs is it? it's the term emulator and the
	     translation library, termcap or whatever
<nicferrier> scri: you mean cursor keys?
<pjb> scri: http://paste.lisp.org/display/131216  [18:29]
<scri> yes
<scri> but they work in vim, for example
<scri> and not in emacs, in vt or xterm 
<pjb> Works for me.
<scri> me too! but i'm not sure why  [18:30]
<scri> what does that actually disable?
<forcer> scri: If a key does not work, go to a terminal window, run cat (the program), hit the
	 key. It will print something like "^[[1;2A". The ^[ is ESC. You can use that to map it to
	 the "real" key you want, like here: http://dpaste.com/791681/  [18:31]
<pjb> scri: If I took the pain to write comments, you should take the pain of fucking reading them.
											      [18:32]
<pjb> scri: or type C-q and the key.
<pjb> But that's enough pedagogy for me for now, I won't repeat anything more.
<fxiny> ahhh you don't repeat ? i know why p then : p for paganini :)  [18:33]
<scri> i just wasn't sure how the fN keys would affect the cursor keys  [18:34]
<David-A> pjb: it may be that the terminal recognize special keys or translates esc-seq to special
	  key names. try [(f5)] instead of "\e[15~", or (kbd "<f5>") if your kocher.  [18:35]
<scri> anyway, thanks a lot for your help
<scri> didnt mean to be annoying  [18:37]
<pjb> So type (global-set-key " C-q your cursor key " 'forward-char) ; or whatever  [18:38]
<forcer> I would still recommend translating keys, not setting them directly. :-)  [18:39]
<scri> yeah that's working well, thanks  [18:40]
<David-A> pjb: not c-q for that, it will not work or be un-portable. do C-h k <press_a_key> and
	  watch the key code in the beginning of the result.  [18:44]
<pjb> David-A: I explained that above!
<pjb> Read the logs!
* David-A reading the logs  [18:46]
<fxiny> i don't use tramp often but when i do , as i did ten seconds ago , i feel like i'm running a
	spaceship , a lasting feeling ;)  [18:49]
<fxiny> ancient , sooo ancient
* David-A finds no log on the intertubes  [18:50]
<pjb> What happens in #emacs stays in #emacs : no public logs!  [18:51]
<David-A> :)
<fxiny> good
<fxiny> so my enemies never catch me up . again ;)
<Reverb> pjfb: in emacs it's not possible to remap a key sequence to another key sequence in the
	 same global-set-key right?  [19:02]
<Reverb> the analog would be to unmap then remap both keys I think  [19:03]
<forcer> ,screenkeys is http://www.emacswiki.org/emacs/ScreenKeys  [19:12]
<fsbot> created.
<forcer> ,terminalkeys is redirect screenkeys
<fsbot> created.
<forcer> Reverb: See that link
<Reverb> thanks  [19:15]
<Johannes`> hi, is the version of evil in the marmalade repo up to date/recommended?  [19:34]
*** cfy` (~cfy@125.123.43.194) is now known as cfy  [19:37]
<rolando> Johannes`: I don't know about marmalade, but the last version in melpa is 20120807  [19:38]
<rolando> nicferrier: did you see my message?
*** rajeshsr_ (rajeshsr@nat/google/x-vpyihffpbsavcdzh) is now known as rajeshsr  [19:39]
<Johannes`> i tried to (evil-global-set-key 'normal "zu" 'bury-buffer), but it doesn't apply to
	    certain random buffers, like help-mode  [19:43]
<rolando> I never used evil so I can't really help you  [19:44]
<rolando> but can you do a "C-h c z u" in the *Help* buffer?
<Johannes`> undefined  [19:45]
<rolando> to see what "zu" is binded to?
<rolando> odd
<rolando> does it access the "zu" combination, or does it return 'undefined the moment you press
	  "z"?  [19:46]
<Johannes`> z is defined
<Johannes`> and has the standard bindings
<Johannes`> but not zu
<rolando> try replacing "zu" with (kbd "zu")?  [19:47]
<rolando> I really have no more ideas
<Johannes`> it works in other buffers
<rolando> maybe evil uses emacs mode by default in the *Help* buffer  [19:48]
<Johannes`> nope
<rolando> can you move in that buffer using hjkl-keys?
<Johannes`> yes
<rolando> well, then I don't know what's happening
<Johannes`> found out now, zu is added to "evil-normal-state-minor-mode", none of these bindings
	    apply in help-mode, only the ones in "evil-motion-state-minor-mode"  [19:49]
*** rajeshsr_ (~rajeshsr@101.62.100.162) is now known as rajeshsr  [19:57]
<Reverb> Johannes`: why not map it to a leader key combination  [20:09]
<nicferrier> rolando: yes, thanks! I fixed it!  [20:10]
<rolando> did you removed the link from the footer?  [20:11]
<rolando> it's no longer there
<nicferrier> yep.  [20:12]
<nicferrier> it's a very old article.
<rolando> oh ok
* rolando shakes fist towards `pcase'  [20:15]
<nicferrier> why?  [20:19]
<rolando> the syntax is kinda weird  [20:20]
<rolando> and there aren't any tutorials on the net  [20:21]
<nicferrier> check out that tali713 exslt module, he uses it.  [20:22]
<rolando> thanks  [20:23]
<nicferrier> and his other module, the mixed one  [20:24]
<yhvh> nicferrier: (from scrollback) what type of image were you trying to scale to frame?  [20:36]
<nicferrier> oh, I've done it.  [20:40]
<nicferrier> there's a neat library called eimp, not packaged yet but I've asked the author.  [20:41]
<rolando> https://github.com/tali713/esxml/blob/master/css-lite.el
<yhvh> cool
<nicferrier> I'm making a kind of display presentation command out of an org-mode outline.... I'm
	     doing a talk on elnode next week and it's turned into a fun talk about lisp and the
	     history of the web.
<rolando> it appears tali713 has ported css-lite to elisp
<nicferrier> he's awesome.
<rolando> should be nice to use it with elnode  [20:42]
<nicferrier> I'm hoping to make a nice "webhacking" package with a load of stuff from different
	     people all bundled up.
<rolando> now where only missing parenscript :)
<rolando> there was that lisp-in-javascript thingie  [20:43]
<nicferrier> that is going to take some time. but toups has got a great walker macro example which
	     could work for it.
<rolando> https://github.com/joshvfleming/cell
<E3D3> Yesterday I tried the newest Anything-mode. Because it was buggy I put old Anthing back but
       the problems stayed. Anyone who recognize this ?  [20:46]
<mnemonikk> E3D3: isn't anything called helm nowadays?  [20:47]
<E3D3> Yes  [20:48]
<E3D3> When I was almost finished fine-tuning Anything-mode again, I discovered Helm, tried it, and
       got doomed. Lost 2 days searching for a solution.  [20:50]
<rolando> ,WrestlingWithEmacs  [20:51]
<fsbot> rolando: I heard EnjoyWrestlingWithEmacs is at
	http://www.emacswiki.org/cgi-bin/wiki.pl?EnjoyWrestlingWithEmacs
<rolando> I should look into anything/helm  [20:52]
<rolando> people seem to like it
<E3D3> Bad thing is that Emacs now is degraded much. I also liked Anything much  [20:53]
<E3D3> I need something more stable
<E3D3> Already lost cloning-buffer function  [20:56]
<chimay> i'm trying to activate this repo : (add-to-list 'package-archives '("melpa"
	 . "http://melpa.milkbox.net/packages/") t)  [20:57]
<chimay> but emacs tells me that symbol package-archive is void
<chimay> i guess i could use a hook to execute this instruction after init ?  [20:58]
<E3D3> Thanks again and have a good day.  [20:59]
<binarycodes> umm, i am trying to write my own snippets in yasnippets, but on pressing TAB my key
	      just gets deleted
<binarycodes> any idea why?
<binarycodes> err, strangely, now nothing happens why i press TAB  [21:00]
<chimay> (require 'package), simply and it works  [21:08]
<basimple> exit  [21:24]
*** resure_ (~resure@85.26.184.142) is now known as resure  [21:26]
